#pragma once

#include "starcraft_exe_types.h"

extern void (__cdecl*type_info_destructor_dealloc)(void *location);
extern int(*HiddenCtrl_Destructor)();
void somePlayImageCrapThatCrashes(char a1, char a2, CImage *a3, CSprite *edi0, int a4);
int hideImage(CImage *a1);
extern __int16 (__thiscall*showImage)(CImage *this_);
CUnit *setAllOverlayDirectionsGeneric(CUnit *result, unsigned int a2, unsigned __int8 a3);
extern BOOL (__stdcall*unitIsOwnerByCurrentPlayer)(CUnit *a1);
int unitSetRetreatPoint(unsigned __int8 a1, CUnit *a2);
BOOL UnitIsGoliath(CUnit *a1);
BOOL UnitCanCastSpells(CUnit *a1);
BOOL isDistanceGreaterThanHaltDistance(int a1, CUnit *a2, unsigned int a3, int a4);
extern int(*Game_Hdr_Node_Destructor)();
extern int(*Saved_Game_Node_Destructor)();
extern int (__stdcall*sub_401310)(int);
char RemoveUnitAirPathing(char a1, CUnit *a2);
signed int SetUnitEnergy(CUnit *a1, unsigned __int8 a2);
extern signed int (__thiscall*GetMaximumHP)(CUnit *this_);
BOOL UnitIsInstallationTrap(CUnit *a1);
BOOL UnitIsFighter(CUnit *a1);
BOOL BWFXN_UnitIsCarrier(CUnit *a1);
BOOL BWFXN_UnitIsReaver(CUnit *a1);
BOOL UnitHasFighters(CUnit *a1);
int UnitGetWorkerPowerup(CUnit *a1);
extern int (__thiscall*UnitIsTrainingOrMorphing)(CUnit *this_);
BOOL UnitIsGhost(CUnit *a1);
BOOL Streamed_SFX_Cleanup(STREAMED *a1);
void Streamed_SFX_FullDestructor(SFX_related *a1);
signed int Streamed_SFX_Destructor(STREAMED *a1, SFX_related *a2);
extern int(*Provider_Destructor)();
extern int(*_ID_Destructor)();
int *vector_insert(int *a1, int a2, void *a3, int a4);
extern int(*GameNode_Destructor)();
extern int(*SaveGame_Destructor)();
void _list_unlink(ListNode *a1);
extern int(*Device_Destructor)();
extern int(*PhoneNumber_Destructor)();
extern int(*DrawText_Destructor)();
extern int(*Template_Destructor)();
extern int(*vector_delete)();
extern int (__fastcall*unitIsActiveResourceDepot)(CUnit *a1, CUnit *a2);
BOOL unitIsSubunit(CUnit *a1);
BOOL unitCanSeeCloakedTarget(CUnit *a1, CUnit *a2);
void UnitClearOrderTarget(CUnit *a1);
int isUnitMovableAndAtDestination(CUnit *a1);
int getImageAttackFrame(int result, CSprite *a2, int a3, unsigned __int8 a4);
int setSpriteMainImgOffset(CSprite *a1, char a2, char a3);
extern BOOL (__fastcall*isQueueSlotActive)(CUnit *a1, int a2);
int updateUnitTransportData(CUnit *a1);
extern int(*fixTargetLocation)();
void getAbsoluteUnitBounds(CUnit *a1, rect *rectangle);
extern int(*getAbsoluteUnitBoundsFromTarget)();
BOOL UnitIsFrozenOrInAir(CUnit *a1);
extern int(*fixTargetPoint)();
extern int (__stdcall*getUnitDistanceToHalt)(int);
extern int(*isUnitPositions2Equal)();
void Accelerate(CFlingy *result, int acceleration);
extern signed int (__fastcall*CC_CanBeInfested)(CUnit *a1, CUnit *a2);
extern int(*unitHPbetween33_66_percent)();
extern int(*unitHPbelow33_percent)();
BOOL unitIsPerformingUnbreakableCode(CUnit *a1);
void TriggerNode_Destructor(TriggerList *tirgger_list);
extern int (__stdcall*IsTargNotVisibleCB)(int, int);
extern int (__stdcall*isTargVisibleCB)(int, int);
extern int (__stdcall*getVisibilityMaskFromPositionAndSize)(__int16, __int16, __int16);
extern int (__stdcall*getVisibilityMaskFromPositionAndSize_0)(__int16, __int16, __int16);
extern int(*BNetMessage_Destructor)();
int setFlagHoldPosition(CUnit *a1);
int UnitGetShieldAndHitpoints(CUnit *a1);
int UnitGetMaxShieldAndHitpoints(CUnit *a1);
BOOL BWFXN_UnitIsQueen(CUnit *a1);
extern int (__stdcall*allTilesInRectAreVisibleFor)(__int16, char);
extern int (__stdcall*allTilesInRectAreExploredFor)(__int16, char);
extern int (__stdcall*FileDownloadSession_Destructor)(int, int);
extern int(*Ban_Destructor)();
extern int(*_unk_Destructor_20)();
int sub_4029B0(CSprite *a1, int a2, int a3);
int sub_402A00(int a1, int a2, CUnit *a3);
extern int(*isUnitBurrowed)();
int sub_402A90(CUnit *a1);
rect *getDoubleUnitBoundingBoxMashup(rect *result, CUnit *a2, CUnit *a3, __int16 a4, __int16 a5);
BOOL sub_402BA0(CUnit *a1, CUnit *a2);
BOOL isUnitAtWPPosOrFacingDirection(CUnit *a1);
BOOL Unit_IsZergMainBuilding(CUnit *a1);
int getHPGainForRepair(CUnit *a1);
extern int(*unittracker_ctor)();
extern int (__stdcall*packDetailFinderData)(int);
extern int(*unpackDetailFinderData)();
extern int(*AITrack_Container_Erase)();
extern int(*SaveGame_Destructor_0)();
char toggleUnitPathingProperties(CUnit *a1);
_DWORD *resetAIThreadData(_DWORD *a2);
extern int(*packAIThreadData)();
extern int(*unpackAIThreadData)();
extern int(*AI_Stop)();
extern int(*isUnitUpgradeAvailable)();
int unitIsCleanDetector(CUnit *a1);
extern int(*packAICaptainData)();
extern int(*unpackAICaptainData)();
extern int(*resetPathingData)();
extern int(*packPathingData)();
extern int (__stdcall*unpackAllPathingData)(int);
extern int(*packTownMgr_03_Unit_Data)();
extern int(*unpackTownMgr_03_Unit_Data)();
extern int(*sub_403DB0)();
extern int (__stdcall*packTownMgr_01_Data)(int);
extern int(*unpackTownMgr_01_Data)();
extern int(*sub_404280)();
extern int(*packTownMgr_02_Data)();
extern int(*unpackTownMgr_02_Data)();
extern int(*removeAIWorkerController)();
extern int(*GetNewAITask)();
extern int(*RemoveAITaskController)();
extern int(*sub_404550)();
extern int(*packTownMgr_03_Data)();
extern int(*unpackTownMgr_03_Data)();
extern int(*contourcalc_upHeap)();
extern int(*contourcalc_downHeap)();
int getDoubleUnitBoundingBoxMashup_0(int result, CUnit *a2, CUnit *a3);
extern int(*pathcalc_downHeap)();
extern int(*sub_4049A0)();
extern int (__stdcall*setRect16)(int);
extern int(*BltMask_Destructor)();
extern int(*DlgGrp_Destructor)();
ChunkListItem *sub_404B20(ChunkNode *a1);
void ChunkNode_Destructor(ChunkNode *a1);
int sub_404BC0(int a1, ChunkNode *a2);
extern int(*sub_404BFA)();
extern int(*sub_404C1E)();
extern int(*__RTC_Initialize)();
extern void (__cdecl*__RTC_Terminate)();
extern int(*sub_405D74)();
extern void(*sub_406504)();
extern int(*sub_40651C)();
extern int(*renderTerrainGRPToCache)();
extern int (__stdcall*imageRenderFxn0_0)(int, tagRECT *, int);
extern int (__stdcall*sub_40AD04)(int, int, int);
extern int (__stdcall*sub_40AE63)(grpFrame *, int, int);
extern int (__stdcall*sub_40AFD5)(int, int, int);
extern int (__stdcall*imageRenderFxn3_0)(int, int, int);
extern int (__stdcall*imageRenderFxn8_0)(int, int, int);
extern int (__stdcall*imageRenderFxn17_0_cntd)(int, int, int);
extern int (__stdcall*imageRenderFxn9_0)(int, int, int);
extern int (__stdcall*imageRenderFxn10_0)(int, int, int);
extern int (__stdcall*imageRenderFxn5_2__1_common)(int, int, int);
extern int (__stdcall*imageRenderFxn3_1)(int, int, int);
extern int (__stdcall*imageRenderFxn8_1)(int, int, int);
extern int (__stdcall*imageRenderFxn9_1)(int, int, int);
extern int (__stdcall*imageRenderFxn17_1_cntd)(int, int, int);
extern int (__stdcall*imageRenderFxn0_1)(int, int, int);
extern int (__stdcall*imageRenderFxn10_1)(int, int, int);
extern int(*BlitToBitmap)();
extern int(*sub_40C214)();
extern int(*BWFXN_blitMapTiles)();
extern int (__stdcall*BlitTerrainCacheToGameBitmap)(int, int);
extern int (__stdcall*getDistancePrecise)(int, int);
extern int (__stdcall*GetApproxDistance)(int, int);
signed int drawMinitileImageData(signed int framebuf_pos, int minitile, int a3);
extern int (__stdcall*sub_40C4D2)(int, int);
extern int(*type_info__szName)();
extern void(*sub_40CCA6)();
extern int (__cdecl*__flushall)();
extern int(*sub_40FFCB)();
extern int(*scSpecialChars)();
extern int(*sub_4103A0)();
extern int(*restoreStackPartial)();
extern unsigned int (__cdecl*crc32pk)(void *a1, int a2, int *a3);
extern int (__cdecl*pk_explode)(int, int, int, int);
extern int (__cdecl*pk_Expand)(int);
extern int (__cdecl*DecodeLit)(int);
extern int (__cdecl*DecodeDist)(int, int);
extern int (__cdecl*WasteBits)(int, int);
extern int (__cdecl*GenDecodeTabs)(int, int, int, int);
extern int (__cdecl*lmemcpy)(int, int, int);
extern int (__cdecl*pk_implode)(int, int, int, int, int, int);
extern int (__cdecl*WriteCmpData)(int);
extern int (__cdecl*FindRep)(int, int);
extern int (__cdecl*OutputBits)(int, int, int);
extern int (__cdecl*lmemset)(int, char, int);
extern int (__cdecl*FlushBuf)(int);
extern int (__cdecl*SortBuffer)(int, int, int);
extern int (__cdecl*fread_locked)(void *, size_t, size_t, FILE *);
extern int (__cdecl*fwrite_locked)(void *, size_t, size_t, FILE *);
extern int(*sub_411E90)();
extern int(*AES_Comp)();
extern int (__stdcall*MD5_0)(int, int);
extern int(*MD5_1)();
signed int CopySectionData(SectionData *a1, void *a2);
extern int(*sub_413480)();
extern signed int (__stdcall*ChunkNode_Constructor)(SectionData *a1, int a2, ChunkNode *a3);
extern signed int (__thiscall*sub_413550)(ChkSectionLoader *loader, ChunkNode *a2, int a3, MapChunks *map_chunks);
signed int sub_4135C0(ChkSectionLoader *chk_section_loaders, ChunkNode *a2, int chk_section_loader_count);
extern int(*sub_413610)();
extern int(*sub_413640)();
signed int sub_413670(Chunk *chk_data, ChunkNode *chunk_node, int chk_size_, int (__stdcall *chunk_node_constructor)(SectionData *, _DWORD, ChunkNode *));
signed int ReadChunkNodes(int chk_section_loader_count, int chk_size_, ChkSectionLoader *chk_section_loader, void *chk_data, MapChunks *map_chunks);
extern int (__stdcall*mapAuthProc)(int);
extern int(*sub_413850)();
extern int (__stdcall*spreadsCreep)(int);
extern int(*getMapCreepDataBeginAndEnd)();
extern int(*sub_4138E0)();
extern int(*getMapCreepData2BeginAndEnd)();
extern int(*sub_413920)();
extern int (__stdcall*sub_413940)(int, int);
extern int(*sub_413980)();
extern int(*sub_4139D0)();
extern void (__thiscall*FreeCreepData)(bool exit_code);
extern signed int (__stdcall*getCreepValue)(TileID *a1, int a2, int a3, TileID *a4, unsigned __int8 a5);
extern signed int (__stdcall*cb)(TileID *a1, int a2, int a3, TileID *a4, int a5);
extern int(*sub_413AE0)();
extern int(*sub_413B20)();
extern int (__stdcall*iterateDirectionalCreepData)(int, int);
extern int(*sub_413BA0)();
extern int(*sub_413BD0)();
extern int(*sub_413C00)();
extern int(*sub_413C50)();
extern int(*nullsub_7)();
extern int (__stdcall*sub_413D10)(int);
extern int (__stdcall*sub_413DB0)(int, int);
extern int (__stdcall*sub_413F20)(int);
extern int(*sub_413F50)();
extern int(*sub_413F70)();
extern int (__stdcall*setCreepRelationalData)(int a1, int a2, int (__stdcall *a3)(TileID *, _DWORD, _DWORD, TileID *, _DWORD), int a4);
extern signed int (__stdcall*runCreepRandomizer_notePossibleDesync)(TileID *a1, int a2, int a3, TileID *a4, int a5);
extern grpHead *(__thiscall*readCreepFile)(char *grpFile);
int sub_414180(UnitType a1, int a2, int a3, int a4, int a5, int a6);
extern int(*sub_4141F0)();
extern int (__stdcall*getCreepAtAndSet)(int, int, int, int, int);
extern int (__stdcall*getNumSurroundingCreepTiles)(int, int);
extern bool (__stdcall*BWFXN_CreepManagementCB)(int, WORD *, int, int, int *);
extern int(*sub_4144C0)();
extern int(*sub_4144E0)();
extern int(*sub_414520)();
extern int (__stdcall*sub_414560)(int);
extern int(*sub_414680)();
extern int (__stdcall*ApplyCreepAtLocationFromUnitType)(int, int, int);
void InitTerrainGraphicsAndCreep(struct_a1 *a1, TileID *a2, int a3, int a4, void *a5);
extern int(*sub_414B50)();
extern int(*sub_414B70)();
extern int(*sub_414B90)();
extern int(*sub_414BB0)();
extern int (__stdcall*sub_414BC0)(int);
dialog *scrollerInit(dialog *result);
extern int (__stdcall*sub_414C90)(int, int, int);
extern int(*sub_414D30)();
extern int(*sub_414DB0)();
extern int(*sub_414DC0)();
extern int(*sub_414DD0)();
signed int ScrollerKeyPress(dlgEvent *a1, dialog *a2);
extern int(*sub_414F10)();
extern int(*sub_415090)();
void scrollerMouseUpdate(dlgEvent *a1, dialog *a2);
int scrollerUpdate(__int16 a1, dialog *a2);
void ScrollBar_SetBounds(__int16 a1, __int16 a2, dialog *a3);
int sub_4153B0(dialog *a1, rect *a2);
extern void (__fastcall*genericHScrollUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericVScrollUpdate)(dialog *dlg, int x, int y, rect *dst);
dialog *updateScroller(dialog *result, dlgEvent *a2);
int selectNextScrollerElement(dialog *a1, dlgEvent *a2, __int16 a3, int a4);
char scrollerLBtnDown(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*genericScrollerInteract)(dialog *dlg, struct dlgEvent *evt);
extern int(*sub_415C70)();
extern int (__stdcall*sub_415CA0)(int, int);
void *loadTBL(int a1, int a2, char *a3, char *a4, char **a5, FastFileRead a6);
extern int (__stdcall*sub_415D20)(int);
extern int(*sub_415D60)();
extern BOOL (__thiscall*sub_415D70)(_DWORD this_);
extern int(*sub_415D90)();
extern int(*iterateTimers)();
void freeTimers(dialog *a1);
void *waitLoopCntd(__int16 a1, dialog *a2);
int *SetCallbackTimer(__int16 a1, dialog *a2, int a3, int a4);
extern int(*sub_4161B0)();
signed int koreanTextLeadByteCheck(int byte_position, const char *text);
extern int(*DlgDrawEditCharacters)();
extern int(*setFontSizeFromFlags)();
extern int(*sub_4164D0)();
char sub_416570(dialog *a1, char a2);
char dlgEditDestroy(dialog *a1, dialog *a2);
extern int (__fastcall*sub_416600)(dialog *a1, __int16 a2);
void sub_416650(const char *a1, dialog *a2);
void sub_416690(dialog *a1, char a2);
void sub_416710(dialog *a1, char a2);
extern int (__thiscall*SetTextBoxTimer)(dialog *a1);
void DlgDrawEditText(dialog *a1);
extern bool (__fastcall*genericEditInteract)(dialog *dlg, struct dlgEvent *evt);
extern int(*BWFXN_GameEndTarget)();
extern int(*sub_416E40)();
extern int(*sub_416E80)();
extern int(*sub_416EB0)();
extern int(*sub_416EC0)();
extern int (__stdcall*ExecuteSCode)(int, int, int);
extern int (__stdcall*sub_416F30)(int, int, int, int, int, int);
extern int (__stdcall*sub_417130)(int, int, int, int);
extern int(*sub_4171F0)();
extern int(*sub_417210)();
extern int(*sub_417270)();
extern int(*sub_4172C0)();
int DrawTransparencies(int a1, int a2, RECT *a3, int a4, int a5, int a6);
extern int (__stdcall*sub_4174A0)(int, int, int);
extern int (__stdcall*sub_4178B0)(int);
int sub_417A10(unsigned __int8 a1, char *a2, int a3, int a4, int a5);
void CompileSCode(int a1, int palette);
extern int(*sub_417DF0)();
extern int (__fastcall*pDLGInteract)(_DWORD, _DWORD);
extern int (__thiscall*canTextboxDlgAcceptEvents_CB)(dialog *this_);
extern int(*setSelectedIndexDirect)();
int doUserEvent(unsigned __int16 a1, int a2, dialog *a3);
int DLG_IterateChildren(dialog *a1, int (__fastcall *a2)(_DWORD, _DWORD), int a3);
int dlgUpdate1(dialog *a1, dlgEvent *a2, int (__fastcall *a3)(_DWORD, _DWORD));
extern int(*sub_417F20)();
extern int(*sub_417F50)();
extern int(*sub_417F80)();
extern int(*sub_417FA0)();
extern int(*sub_417FB0)();
extern int(*sub_417FF0)();
extern signed int (__thiscall*isDlgVisible_CB)(dialog *this_);
unsigned int dlgMouseOverGenericLabel(dialog *a1);
extern int(*sub_418060)();
dialog *getControlFromIndex(dialog *a1, __int16 a2);
extern dialog *(__thiscall*DLG_prevEntry)(dialog *a1);
extern int (__thiscall*DLG_nextEntry)(dialog *this_);
dialog *sub_4180D0(dialog *result, int a2);
dialog *registerUserDialogAction(dialog *result, unsigned int a2, FnInteract *a3);
unsigned int sub_418150(dialog *a1);
extern int (__fastcall*dlgPassUpperKeyDwnEventToUserHotkey_CB)(dialog *a1, char *a2);
extern int (__fastcall*dlgPassLowerKeyDwnEventToUserHotkey_CB)(dialog *a1, char *a2);
extern int (__fastcall*SendLowercaseHotkeyEvent_CB)(dialog *a1, char *a2);
extern int(*dlgPassHotkeyEventToFlags)();
int dlgPassHotkeyEventToIndex(dialog *a1, __int16 a2);
dialog *dlgSetMouseOver(dialog *a2, struct dlgEvent *a1);
BOOL isDlgEventCursorInsideDlg(dialog *a1, dlgEvent *a2);
extern int(*sub_418440)();
int FreeDialogDestBuffer(dialog *a1);
int passUppercaseKeyDwnToUserChrEvent(dlgEvent *a1, int a2, dialog *a3);
int passLowercaseKeyDwnToUserChrEvent(dlgEvent *a1, dialog *a2);
int GenericCharEvent_HandleChild_maybe(dialog *a3, dlgEvent *a2);
extern int(*sub_418570)();
void UpdateDlgOnFlag(dialog *a1);
int RefreshDlgForCursor(dialog *a1);
extern int(*sub_4185E0)();
extern void (__thiscall*sub_418600)(dialog *this_);
int DisableControl(dialog *a1);
void showDialog(dialog *a1);
void HideDialog(dialog *a1);
int SetAsActiveControl_maybe(dialog *a1, dialog *a2);
void sub_418830(dialog *a1);
extern int(*setDialogVisibility)();
int genericDlgMouseMoveEventHandler(dialog *a1, dlgEvent *a2);
void ShowDialog(dlgEvent *a1, dialog *a2, dialog *a3);
signed int sub_418A10(dialog *a1, dlgEvent *a2);
signed int SetNextActiveElement(dialog *a1, dialog *(__thiscall *a2)(dialog *a1));
u32 genericDlgCharEventHandler(dlgEvent *evt, dialog *dlg);
extern int (__stdcall*sub_418C00)(int);
unsigned int genericCommonInteract(dlgEvent *a1, dialog *a2);
int EnableControl(dialog *a1);
extern bool (__fastcall*statRes_Text_Interact)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*genericDlgInteract)(dialog *dlg, struct dlgEvent *evt);
extern int(*sub_419170)();
extern bool (__fastcall*genericLabelInteract)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*genericImageInteract)(dialog *dlg, struct dlgEvent *evt);
extern int(*sub_419260)();
extern int(*sub_419290)();
extern int(*sub_419450)();
extern int(*sub_419460)();
extern int(*sub_419470)();
extern int(*sub_419480)();
extern int(*sub_4194B0)();
void AllocInitDialogData(dialog *a1, dialog *a1_, FnAllocBackgroundImage allocFunction, const char *logfile, int logline);
extern int(*sub_4195E0)();
void removeDlgFromTimerTracking(dialog *a1);
extern int(*assignNextActiveDlgElement)();
extern void (__fastcall*SetActivationDelay_maybe)(dialog *a1, dialog *a2);
extern void (__cdecl*pressGlobalDlgHotkey)();
extern int (__stdcall*DlgGrp_Constructor)(int, int);
extern void (__thiscall*DestroyScreenLayer)(bool exit_code);
void InitializeDialog(dialog *a1, FnInteract a2);
void setFontHandleFromFlags(dialog *a1);
void DestroyDialog(dialog *a1);
extern int(*sub_419F80)();
int sendInputToAllDialogs(dlgEvent *a1);
extern int(*InitializeScreenLayer)();
int gluLoadBINDlg(dialog *a1, FnInteract fn_interact);
dialog *comboboxInit(dialog *result);
void comboboxSelNext(dialog *dlg);
extern int(*sub_41A180)();
extern int(*sub_41A190)();
extern int(*sub_41A1A0)();
BOOL isEventInDlgField(dialog *a1, dlgEvent *a2);
extern int(*isCursorInDlgControl)();
extern int(*listboxGetSelectedIndexFromMousePosition)();
extern int(*sub_41A3C0)();
extern int(*sub_41A3F0)();
extern int(*sub_41A420)();
extern int (__stdcall*sub_41A430)(int);
extern int(*sub_41A450)();
int listboxLButtonUp(dialog *a1, dialog *a2);
void comboboxLButtonUp(dialog *a1);
void ResetDropdown(dialog *a1);
void comboboxLButtonDown(dialog *a1);
void DlgSetSelected_UpdateScrollbar(unsigned __int8 a1, dialog *a2);
extern void (__thiscall*scrollerUpdateParent)(dialog *this_);
void dlgFontSize(dialog *a3);
void dlgSetSelectedImmediate(unsigned __int8 a1, dialog *a2);
extern char (__stdcall*sub_41A890)(dialog *a1, int *a2);
int dlgScrollKeyInteract(dialog *a1, dlgEvent *a2);
bool listboxLButtonDown(dialog *a1, dlgEvent *a2);
extern void (__thiscall*sub_41AC20)(dialog *this_);
unsigned __int8 dlgComboboxUpdate(dialog *a1, rect *a2);
void listboxMouseMove(dialog *a1, dlgEvent *a2);
extern int (__stdcall*listboxEntryUpdate)(int, int, int);
extern void (__fastcall*genericComboboxUpdate)(dialog *dlg, int x, int y, rect *dst);
__int16 listboxInit(dialog *a1);
void setScrollbarVisibility(dialog *a1, int a2);
int listboxHide(dialog *a1);
int listboxShow(dialog *a1);
void List_Update(dialog *a1);
void *ListBox_RemoveEntry(unsigned __int8 a1, dialog *a2);
void sub_41B620(const char *a1, dialog *dlg, unsigned __int8 a3, char a4);
char ListBox_AddEntry(char *a1, dialog *a2, char a3);
extern int(*sub_41B860)();
void ClearListBox(dialog *a1);
extern int(*sub_41B8E0)();
extern int(*genericListboxDestroy)();
extern void (__fastcall*genericListboxUpdate)(dialog *dlg, int x, int y, rect *dst);
extern bool (__fastcall*genericListboxInteract)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*genericComboboxInteract)(dialog *dlg, struct dlgEvent *evt);
extern int(*sub_41BD00)();
extern int(*sub_41BD20)();
extern int(*sub_41BD30)();
extern int(*sub_41BD50)();
extern int(*isDialogInRect)();
extern int(*sub_41BDF0)();
extern int(*sub_41BE20)();
extern int(*sub_41BE70)();
BOOL sub_41BED0(rect *a1);
extern int(*sub_41BF30)();
extern int(*isRectBoundsInside_Assign_16)();
extern int(*isRectBoundsInside_Assign_32)();
extern int(*sub_41C010)();
extern int(*sub_41C030)();
extern int (__stdcall*sub_41C050)(LPRECT lprc);
extern int (__stdcall*sub_41C080)(int);
void _RgnUnk(tagRECT *a1);
void sub_41C2A0(tagRECT *a1);
extern int(*RefreshCursorRect)();
void updateDialog(dialog *a1);
int sub_41C4F0(dialog *a1);
int sub_41C5A0(_DWORD a1, rect *a2);
extern int (__stdcall*CtrlNode_Constructor)(int, int);
extern int(*updateAllDlgs)();
extern int(*sub_41C7B0)();
extern int(*sub_41C810)();
extern int(*BWFXN_RedrawTarget)();
extern void (__stdcall*DialogUpdateProc)(Bitmap *, bounds *);
extern int(*fixDrawBoundsWithin)();
int BWFXN_PrintIcon(int a1, Bitmap *a2, __int16 a3, __int16 a4);
extern int (__stdcall*sub_41D160)(int, int, int, int);
extern int(*sub_41D1D0)();
extern int (__stdcall*sub_41D210)(int, int);
int BlitSurface(int a1, Bitmap *a2, __int16 a3, __int16 a4);
extern int (__stdcall*sub_41D310)(char);
extern int(*sub_41D350)();
extern int (__thiscall*sub_41D360)(int a3);
extern int(*sub_41D370)();
extern int(*DoBltUsingMask)();
extern int(*BWFXN_UpdateBltMasks)();
extern int(*TransDestroy)();
extern int(*updateConsoleImage)();
extern int (__stdcall*BltMask_Constructor)(int, int);
extern int(*realizePalette)();
extern int (__stdcall*sub_41D780)(int, int);
extern int (__stdcall*drawVertLine)(__int16, __int16);
extern int (__stdcall*MinimapFill)(__int16, __int16);
extern int(*sub_41D860)();
extern int (__thiscall*sub_41D880)(char *logfilename);
extern int (__fastcall*sub_41D8A0)(unsigned int numentries, unsigned int firstentry);
extern int(*BWFXN_DDrawDestroy)();
extern int(*BWFXN_DDrawInitialize)();
void sub_41DC20(PALETTEENTRY *a1, PALETTEENTRY *a2, int a3);
extern int(*sub_41DCF0)();
extern int(*sub_41DD10)();
extern int(*sub_41DD20)();
void sub_41DD50(PALETTEENTRY *a1, unsigned int a2, unsigned int a3);
extern int(*sub_41DD90)();
extern int(*sub_41DDD0)();
extern int (__stdcall*refreshRect)(int, int, int, int);
extern int (__stdcall*BlitBitmap)(int);
extern int (__stdcall*BlitCursorSurface)(int, __int16);
extern int(*sub_41E000)();
extern int(*InitializeImage)();
extern void (__thiscall*DestroyImage)(bool exit_code);
extern int (__stdcall*BWFXN_RefreshTarget)(int);
extern int(*sub_41E1A0)();
extern int(*RefreshCursorScreen)();
extern int(*DirtyArrayHandling)();
extern int(*sub_41E430)();
int sub_41E450(int (__thiscall *a1)(int *, _DWORD), int *a2);
unsigned int SetCurrentPaletteInfo(int *a1, unsigned __int16 a2, unsigned __int8 a3);
void CyclePalette(int a1);
CycleStruct *CyclePaletteAdvanced(int cycle_struct_index);
extern int (__stdcall*sub_41E550)(char, int, char);
extern int(*sub_41E590)();
extern int(*sub_41E5A0)();
extern int(*setPaletteGamma)();
extern int (__stdcall*DoCycle)(int cycle_struct_index, int);
extern int(*updatePaletteEntries)();
void gluDlgFadePalette(unsigned int a1);
extern void (__cdecl*colorCycleInterval)();
extern int(*pauseSetPaletteToGreyscale)();
extern int (__stdcall*sub_41E9E0)(unsigned int a1);
extern int (__stdcall*TitlePaletteUpdate)(unsigned int a1);
extern int (__stdcall*GetFileInfo)(int);
extern int(*createErrFile)();
extern int (__cdecl*ProcError)(int);
extern int (__cdecl*ErrorLog)(char *, char);
extern int(*ErrorLogSystemInfo)();
extern int (__thiscall*___vsnprintf)(char *);
extern int (__thiscall*localLoadResource)(LPCSTR lpName);
extern int(*localFreeLibrary)();
int __snprintf(char *buff, size_t size_, const char *format, ...);
extern int(*LocalGetLang)();
extern int (__thiscall*sub_41F230)(DLGPROC lpDialogFunc);
extern int(*sub_41F270)();
extern int (__stdcall*WriteWindowText)(int);
extern int(*getColourHandle)();
extern int(*sub_41F7A0)();
extern int(*getCharacterWidth)();
extern int(*sub_41F8A0)();
extern int(*sub_41F8B0)();
extern int(*nullsub_8)();
extern int(*sub_41F8D0)();
extern int(*setTextAlignment)();
extern void (__thiscall*BWFXN_SetFont)(Font *this_);
extern int (__stdcall*sub_41FC20)(int);
extern int(*getMessageWidth)();
extern int(*sub_41FCC0)();
Font *LoadFont(char *font_name, Font *(__fastcall *a2)(char *, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD));
extern int (__stdcall*writeFontApplyColour)(int, int);
extern int (__stdcall*BWFXN_PrintXY)(int);
int BWFXN_DrawXY(char *a1, signed int a2, signed int a3);
extern int (__fastcall*__fwrite)(size_t, void *);
extern int (__fastcall*__fread)(size_t, void *);
extern int (__fastcall*__fseek)(__int32, FILE *);
FILE *_pfopen(char *filename, __int16 flags);
extern void (__thiscall*saveRegOptions)(bool exit_code);
extern int(*ApplyDefaultOptions)();
extern int(*LoadRegOptions)();
void AppExit(bool exit_code);
extern void(*sub_420830)();
extern int (__stdcall*ErrMessageBox)(LPCSTR lpText, LPCSTR lpCaption);
extern BOOL (__stdcall*DialogFunc)(HWND, UINT, WPARAM, LPARAM);
extern int(*sub_420A20)();
extern int (__fastcall*DSERR_GetString)(size_t size_, char *dest);
extern int (__fastcall*DDERR_GetString)(size_t size_, char *dest);
char *GetErrorString(LPSTR lpBuffer, DWORD a2, unsigned int a3);
void ErrorDDrawInit(char *source_file, char *function_name, unsigned int last_error, WORD resource, int source_line);
void SysWarn_FileNotFound(const char *a1, int last_error);
extern int(*SystemWarning_Configuration)();
extern int(*SystemWarning_PhysicalMemory)();
extern int(*SystemWarning_PentiumProcessor)();
extern int(*sub_421420)();
BOOL SystemWarning_20MBDiskSpace(int a1);
extern int(*sub_4214C0)();
extern void(*DLGErrFatal)();
extern int(*sub_421510)();
extern void(*FatalError)(const char *arg0, ...);
extern int(*SetCursorClipBounds)();
extern int (__stdcall*sub_421640)(int, int);
extern int(*_SetCursorPos)();
int _ClipCursor(RECT *a1);
extern int(*sub_4216F0)();
void doCursorClip(int a1);
extern int(*sub_421770)();
extern int (__stdcall*sub_4217E0)(__int16, char);
extern int(*sub_4218E0)();
extern int (__stdcall*sub_421910)(int, int, int);
extern int(*sub_421A60)();
extern int(*sub_421AA0)();
extern int(*sub_421AF0)();
extern int (__stdcall*sub_421B40)(int, int);
extern int(*sub_421BA0)();
SaiContourHub *setContourSearchBounds(SaiContourHub *result, __int16 a2, __int16 a3, __int16 a4, __int16 a5);
extern int(*sub_421CB0)();
extern int(*sub_421CD0)();
extern int(*sub_422070)();
SaiContourHub *setContourSearchVariablesFromUnitType(SaiContourHub *result, unsigned __int16 a2);
extern int(*sub_422160)();
extern int (__stdcall*sub_422600)(int, char);
extern int (__stdcall*sub_4228E0)(int);
extern int(*nullsub_9)();
extern int(*sub_422A50)();
signed int sub_422A90(_DWORD a1, int a2);
extern int (__stdcall*sub_422C90)(int);
extern signed int (__stdcall*sub_422FA0)(CUnit *a1, int a2);
extern int(*nullsub_10)();
signed int getLarvaeUnitsFromList(CUnit *a1, int a2);
extern int(*CMDACT_CancelNuke)();
extern int(*CMDACT_MergeDarkArchon)();
extern int(*CMDACT_MergeArchon)();
extern int(*CMDACT_Lift)();
extern int(*CMDACT_Decloak)();
extern int(*CMDACT_Unburrow)();
extern int(*CMDACT_Burrow)();
extern int(*CMDACT_CancelAddon)();
extern int(*CMDACT_CancelUpgrade)();
extern int(*CMDACT_Upgrade)();
extern int(*CMDACT_CancelResearch)();
extern int(*CMDACT_Research)();
extern int(*CMDACT_HoldPosition)();
extern int(*CMDACT_TrainFighter)();
extern int(*CMDACT_ReaverStop)();
extern int(*CMDACT_CarrierStop)();
extern int(*CMDACT_Stop)();
extern int(*CMDACT_CancelUnitMorph)();
extern int(*CMDACT_CancelConstruction)();
extern int(*CMDACT_Siege)();
extern int(*CMDACT_Unsiege)();
extern int(*CMDACT_CancelTrain)();
extern int(*CMDACT_Train)();
extern int(*CMDACT_Stimpack)();
extern int(*unit_CanCloak)();
signed int TechUseCheckForGroupEnergyCost(Tech a1);
extern int(*CMDACT_Cloak)();
extern int(*CMDACT_ReturnCargo)();
extern int(*CMDACT_UnitMorph)();
extern int(*CMDACT_BuildingMorph)();
extern int(*BTNSACT_SelectLarva)();
extern int(*BTNSACT_Heal)();
extern int(*BTNSACT_UseNuke)();
extern int(*BTNSACT_RechargeShields)();
extern int(*CMDACT_UnloadAll)();
extern int(*BTNSACT_LoadUnit)();
extern int(*BTNSACT_Harvest)();
extern int(*BTNSACT_Repair)();
extern int(*BTNSACT_BuildingLand)();
extern int(*BTNSACT_PlaceNydusExit)();
extern void (__fastcall*BTNSACT_ZergBuild)(UnitType a1);
extern int(*BTNSACT_PlaceAddon)();
extern void (__fastcall*BTNSACT_BuildProtoss)(UnitType a1);
extern int(*BTNSACT_PlaceCOP)();
extern int(*BTNSACT_BuildTerran)();
extern int(*BTNSACT_UseTech)();
extern int(*BTNSACT_Patrol)();
extern int(*BTNSACT_ReaverAttack)();
extern int(*BTNSACT_CarrierAttack)();
extern int(*BTNSACT_CarrierMove)();
extern int(*BTNSACT_TowerAttack)();
extern int(*BTNSACT_AttackUnit)();
extern int (__fastcall*BTNSACT_AttackMove)(StatusFlags statusFlags);
extern int(*BTNSACT_Move)();
extern int(*BTNSACT_RallyPoint)();
extern int(*UnitStatCond_Never)();
extern int(*sub_424510)();
extern int(*UnitStatCond_Powerup)();
extern void (__cdecl*storeSelectionGroupHPAndType)();
extern int(*isSelGroupUpdated)();
extern int(*sub_4246B0)();
extern int(*sub_4246D0)();
extern int(*sub_424780)();
extern int(*sub_4248F0)();
extern int(*UnitStatCond_Standard)();
extern int(*sub_4249E0)();
extern int(*sub_424A10)();
extern int(*UnitStatCond_Egg)();
extern int(*UnitStatCond_Archon)();
extern int(*sub_424B10)();
extern int(*UnitStatCond_CarrierReaver)();
void setSpellSpecialBtnGraphic(dialog *a1);
extern int(*UnitStatCond_Dropship)();
extern int(*sub_424FC0)();
extern int(*UnitStatCond_Building)();
extern int(*sub_4251F0)();
extern int(*sub_425230)();
void sub_425310(dialog *a1, unsigned __int16 a2);
void StatHangerCount(dialog *a1, unsigned __int16 a2);
void sub_425510(dialog *a1, unsigned __int16 a2);
void sub_425600(dialog *a1, int a2, int a3, unsigned __int16 a4);
void sub_425790(dialog *a1, unsigned __int16 a2, WeaponType weapon_type);
void AddTextToDialog(dialog *a1, __int16 a2, char *a3);
extern int(*UnitStatCond_overlord)();
void sub_425960(dialog *a1, int a2);
void sub_425A30(dialog *a1);
extern void (__stdcall*SetUnitStatusStrText)(dialog *a1);
void SetKillsStrText(signed int a1, dialog *a2);
extern int (__stdcall*getActivePortraitUnitName)(int);
extern void (__thiscall*UnitStatAct_Default)(dialog *this_);
void sub_425F30(dialog *a1);
void sub_4260C0(dialog *a1);
void sub_426190(dialog *a1);
signed int StatSpidermineCount(dialog *a1, unsigned __int16 a2);
extern int (__stdcall*setTextStr)(dialog *a1);
extern void (__stdcall*sub_426500)(dialog *a1);
extern void (__stdcall*sub_4266F0)(dialog *a1);
extern void (__stdcall*sub_4268D0)(dialog *a1);
extern void (__thiscall*sub_426C60)(void *this_, dialog *a1);
extern void (__thiscall*UnitStatAct_Powerup)(dialog *this_);
extern void (__thiscall*UnitStatAct_Standard)(dialog *this_);
extern void (__stdcall*sub_426FF0)(dialog *a1);
extern void (__thiscall*UnitStatAct_Egg)(dialog *this_);
extern void (__thiscall*UnitStatAct_Archon)(dialog *this_);
extern void (__thiscall*UnitStatAct_CarrierReaver)(dialog *this_);
void sub_427540(dialog *a1);
extern int(*UnitStatAct_Building)();
void replayStatBtns(dialog *a1);
extern void (__thiscall*UnitStatAct_Dropship)(dialog *this_);
extern void (__thiscall*UnitStatAct_Overlord)(dialog *this_);
extern int(*BriefingActionsLoop)();
extern int(*sub_427E30)();
extern int(*BRFACT_NoAct)();
extern int(*BRFACT_Wait)();
extern int(*BRFACT_SkipTutorial)();
extern int(*BRFACT_MissionObjectives)();
extern int(*BRFACT_HidePortrait)();
extern int(*BRFACT_ShowPortrait)();
extern int(*BRFACT_TextMessage)();
extern int(*BRFACT_DisplaySpeakingPortrait)();
extern int(*BRFACT_PlayWAV)();
extern signed int (__fastcall*BRFACT_Transmission)(int a1, int a2);
extern int(*isUpgradeInProgress)();
extern int(*sub_4281E0)();
extern int(*sub_428210)();
extern int(*isResearchInProgress)();
extern int(*sub_428270)();
extern int(*sub_4282A0)();
extern int (__stdcall*BTNSCOND_Always)(int);
extern int(*sub_4282E0)();
extern int (__stdcall*BTNSCOND_SCVisBuilding)(int);
extern int (__stdcall*BTNSCOND_NoNydusExit)(int);
extern int (__stdcall*BTNSCOND_LurkerStop)(int);
extern int (__stdcall*BTNSCOND_Movement)(int);
extern int (__stdcall*BTNSCOND_IsLifted)(int);
extern int (__stdcall*BTNSCOND_IsLiftedCanMove)(int);
extern int (__stdcall*BTNSCOND_CanRechargeShields)(int);
extern int (__stdcall*BTNSCOND_HasCargo)(int);
extern int (__stdcall*BTNSCOND_NoCargo)(int);
extern int (__stdcall*BTNSCOND_IsConstructing)(int);
extern int (__stdcall*BTNSCOND_HatcheryLairHive)(int);
extern int (__stdcall*BTNSCOND_IsTraining)(int);
extern int (__stdcall*BTNSCOND_HasCargoTerran)(int);
extern int (__stdcall*BTNSCOND_NoCargoTerran)(int);
extern int (__stdcall*BTNSCOND_CanRepair)(int);
extern int (__stdcall*BTNSCOND_SCVCanAttack)(int);
extern int (__stdcall*BTNSCOND_SCVCanStop)(int);
extern int (__stdcall*BTNSCOND_SCVCanMove)(int);
extern int (__stdcall*BTNSCOND_HasScarabs)(int);
extern int (__stdcall*BTNSCOND_HasInterceptors)(int);
extern int (__stdcall*BTNSCOND_ZergHasCargo)(int);
extern int (__stdcall*BTNSCOND_ZergNoCargo)(int);
extern int (__stdcall*BTNSCOND_IsLanded)(int);
extern int (__stdcall*BTNSCOND_HasNuke)(int);
extern int (__stdcall*BTNSCOND_TankMove)(int);
extern int(*sub_4288A0)();
extern int(*sub_4288C0)();
extern int (__stdcall*BTNSCOND_IsResearching)(int);
extern int (__stdcall*BTNSCOND_isUpgrading)(int);
extern int (__stdcall*BTNSCOND_IsBuildingAddon)(int);
extern int (__fastcall*BTNSCOND_SiloHasNoNuke)(UnitType a1, int player_id, CUnit *a2);
extern int (__stdcall*BTNSCOND_CanMoveSpecialCase)(int);
extern int (__stdcall*BTNSCOND_CanMove)(int);
extern int (__fastcall*BTNSCOND_CanBuildUnit)(UnitType a1, int player_id, CUnit *a2);
extern int (__stdcall*BTNSCOND_HasUnit)(int);
extern int (__stdcall*BTNSCOND_Stationary)(int);
extern int (__stdcall*BTNSCOND_CanAttack)(int);
extern int (__stdcall*BTNSCOND_BattleOrders)(int);
extern int (__stdcall*BTNSCOND_HasRoom)(int);
extern int (__stdcall*BTNSCOND_CanBurrow)(int);
extern signed int (__fastcall*BTNSCOND_IsSieged)(int a1, int a2, CUnit *a3);
extern char (__fastcall*BTNSCOND_IsUnsieged)(int a1, int a2, CUnit *a3);
extern int (__stdcall*BTNSCOND_IsCloaked)(int);
extern int (__stdcall*BTNSCOND_CanCloak)(int);
extern int (__stdcall*BTNSCOND_IsCloaked_0)(int);
extern int (__stdcall*BTNSCOND_CanCloak_0)(int);
extern int (__stdcall*BTNSCOND_CanUpgrade)(int);
extern int (__stdcall*BTNSCOND_HasSpidermines)(int);
extern bool (__fastcall*BTNSCOND_HasTech)(Tech a1, int a2, CUnit *unit);
extern int (__fastcall*BTNSCOND_CanResearch)(Tech a1, int a2, CUnit *a3);
extern signed int (__fastcall*BTNSCOND_Rally)(int a1, int a2, CUnit *a3);
extern int (__fastcall*BTNSCOND_CanMergeDarkArchonOneSelected)(Tech a1, int a2, CUnit *unit);
extern int (__fastcall*BTNSCOND_CanMergeArchonOneSelected)(Tech a1, int a2, CUnit *unit);
extern signed int (__fastcall*BTNSCOND_HatcheryLairHiveRally)(int a1, int a2, CUnit *a3);
extern int(*BTNSACT_TargetOrderCancel)();
extern int(*BTNSACT_CancelPlacement)();
extern int(*nullsub_11)();
extern int (__stdcall*sub_4297B0)(int);
extern int (__stdcall*findContourInWork_3)(int, int, int);
extern int (__stdcall*findContourInWork_2)(int, int, int);
extern int (__stdcall*findContourInWork_1)(int, int, int);
extern int (__stdcall*findContourInWork_0)(int, int, int);
extern signed int (__thiscall*isContourSpaceAvailable)(SaiContourHub *this_, int a2, int a3);
extern int (__stdcall*sub_429D50)(__int16, __int16, int);
extern int (__stdcall*sub_42A1B0)(int, int, int);
extern int (__stdcall*sub_42A570)(int);
extern int (__stdcall*sub_42A5C0)(int, int, int);
extern int (__stdcall*sub_42A840)(int);
extern int(*sub_42A860)();
extern int (__stdcall*sub_42A8A0)(int);
extern int (__stdcall*sub_42A8D0)(int, int, int);
extern int (__stdcall*sub_42AB50)(int, int);
extern int (__stdcall*sub_42ACB0)(int);
BOOL InitializeSightValues(int max_sight_range, SightStruct *sight_data, int map_tile_width);
extern int(*sub_42AE30)();
extern int(*sub_42AE70)();
extern int (__stdcall*MD5)(int);
extern int(*sub_42B500)();
extern int(*sub_42B530)();
extern int (__stdcall*sub_42B570)(int);
extern int(*sub_42B5D0)();
extern int(*SAI_PathCreate_Sub1_1)();
extern int (__stdcall*SAI_ContoursCreate_1)(int, int, int);
extern int (__cdecl*PtFuncCompare)(const void *, const void *);
extern int(*SAI_ContoursRealloc)();
extern int(*SAI_ContoursCreate_2)();
BOOL sai_contoursCreate_Cleanup(SaiContour **a1);
extern int(*SAI_PathCreate_Sub1_0)();
void SAI_ContoursCreate(SaiContourHub *a1);
void SAI_PathCreate_Sub4(SAI_Paths *a1);
extern int(*TRGCND_Switch)();
extern int(*TRGCND_Never)();
extern int(*TRGCND_Always)();
extern int(*sub_42C690)();
extern int(*sub_42C6A0)();
extern int(*sub_42C6B0)();
extern int(*TRGCND_ElapsedTime)();
extern int(*TRGCND_CountdownTimer)();
extern int(*TRGCND_LeastResources)();
extern int(*TRGCND_MostResources)();
extern int(*TRGCND_LowestScore)();
extern int(*TRGCND_HighestScore)();
extern int(*TRGCND_LeastKills)();
extern int(*TRGCND_MostKills)();
extern int(*TRGCND_CommandTheLeast)();
extern int(*TRGCND_CommandTheMost)();
extern int(*TRGCND_Score)();
extern int(*TRGCND_Opponents)();
extern int(*TRGCND_Deaths)();
extern int(*TRGCND_Kill)();
extern int(*TRGCND_Accumulate)();
extern int(*TRGCND_Command)();
extern int(*TRGCND_CommandTheLeastAt)();
extern int(*TRGCND_CommandTheMostAt)();
extern int(*TRGCND_Bring)();
int sub_42CDD0(int result, int tech, int a3);
char getUnitCostInfo(int *mineral_cost_ptr, int *supply_cost_ptr, UnitType unit_type, int *gas_cost_ptr);
extern int(*subtractMorphCost)();
int refundBuildingCost(UnitType a1, unsigned __int8 a2);
int refundUnitTrainCost(unsigned __int8 playerID, UnitType unitType);
extern int(*sub_42CEF0)();
extern int(*sub_42CF00)();
extern int(*sub_42CF10)();
extern int (__stdcall*sub_42CF20)(char, char);
void j_ShowErrorMessageWithSfx(int playerId, __int16 statTxtId, SfxData sfxId);
extern signed int (__stdcall*hasSuppliesForUnit)(u8 playerID, UnitType unit_type, int a3);
extern int(*sub_42D0C0)();
int sub_42D140(UnitType a1, u8 a2, int a3, int a4);
extern int (__stdcall*sub_42D190)(int);
extern int (__fastcall*sub_42D240)(int a1, Tech a2, int a3);
extern int(*refreshImageData)();
extern int(*sub_42D330)();
extern int(*sub_42D350)();
extern int(*sub_42D370)();
extern int(*sub_42D400)();
extern int(*getFirstSprite)();
extern int(*sub_42D4C0)();
extern int(*isVisible)();
extern int(*sub_42D600)();
extern int(*getUnitCollision_CB)();
BOOL sub_42D6B0(CUnit *a1, __int16 a2, __int16 a3, unsigned __int16 a4, __int16 a5, __int16 a6);
extern int (__stdcall*canDimensionsFitAt)(int, int, int, int);
int canUnitTypeFitAt(signed int a1, UnitType a2, __int16 a3);
char sub_42D890(CUnit *a1, int a2, int a3);
void sub_42D8C0(CUnit *a1);
int getUnitCollision(CUnit *a1);
extern BOOL (__fastcall*sub_42DA00)(int a1, CUnit *a2, unsigned __int16 a3, __int16 a4, __int16 a5);
extern signed int (__fastcall*sub_42DA90)(int a1, CUnit *a2, CUnit *a3, int a4);
signed int sub_42DB50(CUnit *a1, int a2, int a3, int a4);
BOOL CanCollideWith(CUnit *self, CUnit *other);
int sub_42DF70(CUnit *a1, CUnit *a2);
CUnit **GetCollidingUnits(__int16 radius, CUnit *a2, int a3, int a4);
int sub_42E0E0(CUnit *a1, int a2);
extern int (__stdcall*sub_42E170)(int);
extern int (__stdcall*sub_42E1D0)(CUnit *a1, int a2);
int orders_ResetCollision2(CUnit *a1);
extern int(*nullsub_12)();
extern void (__thiscall*nullsub_1)(bool exit_code);
extern int(*sub_42E450)();
extern int(*sub_42E460)();
extern int (__stdcall*sub_42E470)(int);
extern int(*sub_42E4F0)();
extern BOOL (__stdcall*CreatePath_PullContours)(_DWORD a1, int a2, unsigned __int16 a3);
char GetClosestReachable(char a1, CUnit *a2);
extern int(*nullsub_13)();
extern int(*nullsub_14)();
extern int(*nullsub_15)();
char *getUnitRankString(CUnit *a1);
extern int(*sub_42F440)();
extern int(*sub_42F480)();
extern int(*sub_42F4C0)();
extern int(*AllocAIPathPool)();
extern int(*nullsub_16)();
extern int(*createUnitPathFromPathCreate)();
extern int(*sub_42F600)();
extern int (__stdcall*sub_42F650)(int, int, int);
signed int unitSubtractPathDelayAndCheck(CUnit *a1);
extern int (__stdcall*unitSetPathDelay)(char);
int reAssignPath(CUnit *a1);
extern int(*assignPathCreateFromUnitPath)();
extern int (__stdcall*getAllocatedPathSingleStep)(int, int);
extern int(*getUnitDistanceToPathEnd)();
signed int isLargePath(CUnit *a1, int a2);
extern int (__stdcall*unitHasPathToDestOnGround)(__int16);
extern int (__stdcall*unitGetImaginaryPathDistanceToPosition)(int);
signed int sub_42FC10(CUnit *a1, int a2, int a3);
extern int (__stdcall*UMAnotherPath)(int);
extern int(*sub_42FE90)();
extern int(*sub_42FEC0)();
extern int(*resetUnitBoundsLists_GetMaxUnitTypeSize)();
extern int(*getAllUnitsInBounds)();
extern int (__stdcall*getUnitsAtPoint)(int);
extern s32 *(__thiscall*UnitRelManyFinderUMScoutPath)(CUnit *this_, __int16 a2, __int16 a3);
extern int (__stdcall*unkUnitRelManyFinderEx)(int);
extern int (__stdcall*FindAllUnits)(Box16 *a1);
extern int (__stdcall*findAllUnitsInBoundsUsing)(int, int);
extern int (__stdcall*getAllUnitsInRegion)(__int16);
extern int (__stdcall*getClosestReachableUnit)(CUnit *a1, signed __int16 a2, __int16 a3);
unsigned int sub_430D30(CUnit *a1, CUnit *a2);
extern int (__thiscall*sub_430E50)(CUnit *this_, __int16 a2, __int16 a3);
extern BOOL (__thiscall*isTargetWithinMinRange)(CUnit *this_, unsigned int min_range, CUnit *target);
extern int (__stdcall*GetClickableUnits)(int);
extern int(*sub_4310F0)();
extern int(*sub_431100)();
signed int sub_431110(signed int unitType);
extern int(*filterUnitStrength)();
int sub_431200(WeaponType weapon_type);
extern int(*sub_431230)();
extern int(*sub_431240)();
extern int(*sub_431250)();
int calcUnitStrength(int a1, WeaponType weapon_type);
int sub_431320(signed int unitType);
int sub_431370(signed int unit_type);
extern void(*calculateUnitStrengths)(void);
int sub_4314F0(CUnit *a1, int a2);
int sub_431550(int a1, CUnit *a2);
extern int(*BeefUnitStrength_AirOrGround)();
int getUnitStrength_AirOrGround(int a1, CUnit *a2);
int GetAlteredUnitStrength(int a1, CUnit *a2);
unsigned int getUnitStrength(CUnit *a1, int a2);
extern int (__stdcall*sub_4318E0)(int, int);
CUnit *GetStrongestUnitInX_AirOrGround(int *a1, int a2, CUnit *a3, int a4, int a5);
extern int (__stdcall*sub_431CE0)(int);
extern int (__stdcall*sub_431D00)(int);
extern int (__stdcall*sub_431DA0)(int);
extern int (__stdcall*sub_431DC0)(int);
CUnit *GetStrongestUnitInRegion_AirOrGround(CUnit *a1, int a2);
int AI_GetStrongestGroundUnit(CUnit *a1);
int AI_GetStrongestAirUnit(CUnit *a1);
extern int(*sub_431F30)();
extern int(*AI_GetExpansionCount)();
extern int (__stdcall*sub_431F60)(int);
int AI_BuildAndTechAndUpgrade(_DWORD a1, char a2, char a3, __int16 a4, char a5, char a6);
extern int (__stdcall*sub_431FF0)(int);
extern int (__stdcall*CreateTown)(__int16, __int16);
extern int(*nullsub_17)();
int getPlayerDefaultRefineryUnitType(int playerID);
extern int(*sub_432100)();
extern int(*getDefaultWorkerUnitType)();
extern int(*sub_432150)();
extern int(*sub_432170)();
extern int(*AISomethingToID)();
extern int(*sub_4321A0)();
extern int(*sub_4321B0)();
extern int(*sub_4321D0)();
extern int(*sub_4321F0)();
extern int(*nullsub_18)();
extern int(*nullsub_19)();
extern int(*sub_432240)();
extern int (__stdcall*AI_RegionSize)(int, int);
extern int(*AI_getNumOwnedMineralClusters)();
extern int(*playerHasAverageResources)();
extern int(*sub_4323B0)();
extern int(*sub_4323C0)();
extern int (__stdcall*AI_Build)(int);
extern int (__stdcall*sub_432400)(char, int);
extern int(*isUnitOwnedBy)();
extern int(*sub_432430)();
extern int(*sub_432450)();
signed int isUnitTypeRaceUnitRace(unsigned __int16 a1, CUnit *a2);
extern int(*sub_4324E0)();
extern int(*sub_432500)();
extern int(*sub_432530)();
extern int(*sub_4325A0)();
extern int(*initAITownMgr)();
extern int (__stdcall*sub_4326A0)(int);
int AI_getVespeneType(CUnit *a1, int player);
extern int (__thiscall*AI_Unassign)(CUnit *this_);
BOOL sub_4327D0(CUnit *a1);
extern int(*unpackTownMgr_02_Unit_Data)();
extern int (__stdcall*sub_4328E0)(int);
extern int(*sub_4329F0)();
extern int(*sub_432A30)();
extern int(*AI_getClosestEnemyRace)();
extern int(*RegionContainsWorkerOrBuilding)();
extern int(*sub_432B30)();
bool AI_CanBuild(CUnit *a1, UnitType unit_type);
extern int (__stdcall*GetAIRefinery)(int, int);
extern int (__stdcall*WriteAITownData)(FILE *);
extern int (__stdcall*isGroundMap)(int);
extern int(*getGuardXY)();
extern int (__stdcall*AI_WaitBuild)(int, int);
extern int(*sub_433410)();
extern int (__stdcall*sub_433470)(int);
extern int (__stdcall*sub_4335F0)(int, int);
int AI_FinishUnit(_DWORD a1, CUnit *a2);
extern int(*sub_433660)();
extern int (__stdcall*sub_433730)(int);
extern int (__stdcall*AI_UnitConstructionBehaviour)(int a1, CUnit *a2, int a3);
char AI_AutoHarvest(CUnit *a1, CUnit *a2, CUnit *a3);
extern int (__stdcall*AI_SCVRepairController)(CUnit *a1, int);
char AI_AddUnitToTown(CUnit *a1, int a2);
int sub_433FE0(CUnit *a1, int a2);
char sub_434020(CUnit *a1, int a2);
extern int (__stdcall*AI_StartAreaTown)(int, int);
extern int (__stdcall*AI_StartTown)(int, int, int);
extern int(*sub_434330)();
char sub_434450(CUnit *a1);
extern int (__stdcall*sub_434480)(int, int, int);
void AI_ResearchBehaviour(CUnit *a1, int player_id);
void AI_UpgradeBehaviour(CUnit *a1, int player_id);
signed int AI_TrainBehaviour(CUnit *a1, int a2, int a3);
extern signed int (__stdcall*AttendTownNeeds)(int a1, CUnit *a2);
signed int DetachUnitTaskFromTown(CUnit *a1, int a2);
void AI_NukeSiloBehaviour(CUnit *a1);
void AI_OverlordBehaviour(CUnit *a1);
int AI_ConstructAddonBehaviour(int a1, CUnit *a2, int a3);
signed int AI_MorphBehaviour(int a1, int a2, CUnit *a3, int a4);
extern void (__stdcall*AIWorkerController)(CUnit *a1);
extern int (__stdcall*AI_GetOldPeons)(int, int);
int AI_TrainingWorker(CUnit *a1, CUnit *a2);
__int16 AI_TrainingOverlord(CUnit *a1, CUnit *a2);
char sub_4358D0(CUnit *result);
extern int(*sub_435900)();
extern int(*AI_PanicControl)();
void AI_TrainingNormal(CUnit *a1, CUnit *a2);
extern int (__stdcall*AI_PlanDoMergeMorph)(int player_id, int, int);
extern signed int (__thiscall*AI_PerformTask)(CUnit *this_);
extern int (__stdcall*AI_UpgradesFinished)(int);
extern int(*sub_436880)();
extern int(*sub_4368B0)();
extern int (__stdcall*sub_4368C0)(int, int);
extern int(*sub_4368F0)();
BOOL OrderIsSpell(Order order);
extern int(*DecCaptainScalerCounterValue)();
extern int(*sub_4369D0)();
BOOL sub_4369F0(AiCaptain *a1);
extern int(*sub_436A10)();
extern int(*sub_436A20)();
extern int(*freeAICaptains)();
extern int(*allocateAICaptains)();
extern int(*nullsub_20)();
int Unit__hasNoCaptainType(CUnit *a1);
extern int (__stdcall*AI_getZergAirScore)(char);
extern int (__stdcall*AI_getZergGroundScore)(char);
extern int (__stdcall*AI_getTerranInfantryScore)(char);
extern int(*AI_WaitTurrets)();
extern int(*AI_WaitBunkers)();
extern int (__stdcall*AISomethingHasOwnershipOfRegion)(int, __int16);
extern int(*AI_isAttacking)();
extern int(*PopulateRgnsWithSecondaryEnemyNeighbors)();
extern int(*PopulateRgnsWithNeighbors)();
extern int (__stdcall*sub_436E10)(int);
int UNIT_FinishedSummon(CUnit *a1);
extern int (__stdcall*IsMilitaryCaptain)(int);
signed int sub_436EB0(AiCaptain *a1);
extern BOOL (__thiscall*loadedProc_UnitIsFirebat)(CUnit *this_);
extern int(*sub_436F00)();
extern int(*j_freeAICaptains)();
extern int (__stdcall*AssignCaptainToSlowestUnit)(AiCaptain *a1);
extern int(*isUnknownSpellcaster)();
extern int (__stdcall*RecalcRegionPriorities)(int);
extern int (__stdcall*IsRegionANeighborOfRegionB)(__int16);
int sub_4371D0(int result, AiCaptain *a2);
extern int(*sub_437230)();
extern int(*playerHasTransports)();
extern int(*sub_437290)();
extern unsigned int (__thiscall*sub_4372E0)(_DWORD this_);
extern int (__stdcall*AI_GetDarkTemplarsForSummon)(int);
extern int (__stdcall*AI_GetHighTemplarsForSummon)(int, int, int);
extern int(*AI_GetHydraliskForMorph)();
extern int(*AI_GetMutaliskForMorph)();
extern int(*GetTurretPosition)();
extern int(*GetBunkerPosition)();
extern int (__stdcall*populateAttackRegions)(int, int, int, int, int);
extern int (__stdcall*sub_4379B0)(int, int);
extern int (__stdcall*InitRegionCaptains)(int);
extern int(*isCaptainTrackingNonCritter)();
extern int(*isImportantRegionAccessible)();
extern int(*sub_437F20)();
extern unsigned int (__stdcall*sub_438050)(AiCaptain *a1, int a2, int a3);
extern signed int (__thiscall*isAIControllerNotABuilding)(CUnit *this_);
extern int(*sub_438200)();
extern int(*packAIPathingData)();
extern int(*sub_4382C0)();
extern int (__thiscall*sub_4383B0)(CUnit *this_);
extern int (__thiscall*sub_4383E0)(CUnit *this_);
extern signed int (__fastcall*sub_438410)(int a1, CUnit *a2);
extern int (__thiscall*sub_438470)(CUnit *this_);
extern int(*isUnitTypeFoundInRegion)();
extern u8 (__stdcall*AI_PatrolController)(CUnit *a1, int a2, int *a3);
extern int(*AI_BuildTurrets)();
extern int(*AI_BuildBunkers)();
int sub_438910(CUnit *a1);
extern int (__stdcall*getBestAttackRegion_LeastEnemyStrength)(int, int, int);
extern int (__stdcall*PopulateRgnsWithOwn)(int);
int getAIRegionInfoFromUnitLocation(CUnit *a1);
extern int (__stdcall*sub_438C20)(CUnit *a1);
extern int(*sub_438E10)();
signed int sub_438E70(CUnit *a1, signed int y, signed int x);
extern int(*sub_438EF0)();
extern int (__fastcall*CB_AICaptainStrengthIterator)(CUnit *a1, CUnit *a2);
void getAITownCapabilities(AiCaptain *a1, int a2, int a3, int a4);
extern int(*sub_439050)();
char AI_AssignCaptain(int a1, AiCaptain *a2);
extern int (__stdcall*WriteAIPathCaptainData)(FILE *);
extern int (__stdcall*AI_Implode)(int);
extern BOOL (__fastcall*AI_EnterTransportProc)(CUnit *a1, CUnit *a2);
extern int (__stdcall*AI_AttackClear)(int);
signed int sub_439550(CUnit *a1);
extern int (__stdcall*AI_ClearCombatData)(int, int);
extern int (__stdcall*AI_ValueArea)(int);
extern signed int (__stdcall*AI_GetSpiderMineLocations)(CUnit *a1, int a2, int a3);
extern int (__stdcall*AssignMilitaryToRegion)(int, int, int, int, int);
extern int (__stdcall*PopulateRgnsWithEnemy)(int, int);
extern int (__stdcall*AI_CaptExpand)(int, int);
extern int(*sub_439D50)();
extern signed int (__stdcall*ClearUnitFromGlobalAIEntry)(CUnit *a1, int a2);
extern int (__stdcall*AI_HelpIfTrouble)(int);
extern char (__stdcall*AI_MakeGuard)(int a1, CUnit *a2);
extern int (__stdcall*sub_43A1D0)(int, int);
extern int(*sub_43A250)();
extern int(*sub_43A2E0)();
unsigned int sub_43A390(AiCaptain *a1);
extern CUnit *(__stdcall*sub_43A510)(AiCaptain *a1);
extern signed int (__stdcall*sub_43A790)(AiCaptain *a1, AiCaptain *a2);
extern int (__stdcall*sub_43A8F0)(int, signed int y, signed int x);
signed int sub_43AA10(CUnit *a1);
extern int (__stdcall*AI_BuildTurret)(int, int);
extern int (__stdcall*AI_AttackManager)(int, int, int, int, int);
int sub_43AD60(CUnit *a1, CUnit *a2);
extern int (__stdcall*sub_43ADA0)(CUnit *a1, CUnit *a2, int a3);
extern int (__stdcall*AI_Rush)(int, int);
extern int (__stdcall*AI_EvalHarass)(int);
signed int sub_43B6D0(int unit_type, CUnit *a2, int a3);
CUnit *sub_43B790(CUnit *a1, CUnit *a2, CUnit *a3);
void AI_orderUnitCloaking(CUnit *a1);
extern int (__stdcall*sub_43B9E0)(int);
extern void *(__stdcall*sub_43BAC0)(AiCaptain *a1, unsigned int a2, int a3, int a4, int a5, int a6);
extern void *(__stdcall*sub_43BC40)(AiCaptain *a1, int a2, int a3, int a4, int a5);
extern int (__stdcall*AI_OrderAllUnitsInLocation)(int, int, int, char);
extern int (__stdcall*AI_ExitTransport)(int);
int AI_EnterTransport(int a1, int playerID);
char sub_43C170(CUnit *a1);
void AI_orderLurkerBurrow(CUnit *a1);
extern int (__stdcall*AI_EnterBunker)(int);
extern int (__stdcall*AI_MakePatrol)(int);
signed int AI_Defender_Bunker_Behaviour(__int16 a1, CUnit *a2);
char AI_RespondToCloaked(CUnit *a1, CUnit *a2);
char IssueCaptainUnitOrder(int order_id, CUnit *a2, int a3);
signed int sub_43CA30(CUnit *a1);
signed int sub_43CB00(CUnit *a1);
int sub_43CC40(AiCaptain *a1);
void prepSuicide(CUnit *a1);
extern char (__stdcall*AI_CaptainUpdate_Type3)(AiCaptain *a1);
extern void (__stdcall*AI_OrderToDestination)(CUnit *a1, signed int order, int a3, int a4);
char AI_ManageMilitaryController(CUnit *a1);
char sub_43DA20(AiCaptain *a1, CUnit *a2, int a3);
int sub_43DB10(CUnit *a1, int a2);
signed int AI_TransportAction(CUnit *a1);
int sub_43DD20(AiCaptain *a1);
extern int (__fastcall*sub_43DDE0)(CUnit *a1, AiCaptain *a2);
signed int sub_43DE40(AiCaptain *a1);
extern int (__stdcall*AIUnloading)(int);
extern int (__stdcall*AI_SendSuicide)(int);
extern int (__stdcall*AI_TrainingBroodling)(CUnit *a1, CUnit *a2);
signed int sub_43E2E0(AiCaptain *a1, int a2, unsigned int a3);
signed int sub_43E400(CUnit *a1, CUnit *a2);
CUnit *sub_43E580(AiCaptain *a1, AiCaptain *a2, CUnit *a3, int a4, int a5);
unsigned int sub_43E670(AiCaptain *a1);
int sub_43E760(unsigned __int16 *a1, AiCaptain *a2, int a3);
extern int(*AI_SuicideControl)();
extern int (__stdcall*AI_BuildBunker)(int, int);
extern char (__stdcall*AI_CaptainUpdate_Military12)(AiCaptain *a1);
extern char (__stdcall*AI_CaptainUpdate_Military89)(AiCaptain *a1);
extern char (__stdcall*AI_CaptainUpdate_Type7)(AiCaptain *a1);
int sub_43F100(AiCaptain *a1, WORD *a2, int a3, unsigned int a4);
extern void (__fastcall*WpnHit)(CUnit *a1, CUnit *a2, int unknown_flag, int a4);
extern int (__stdcall*sub_43F990)(int);
void AI_CaptainTownUpdate(int a1, int player_id);
extern int (__fastcall*compareGeneralTarget)(CUnit *a1, CUnit *a2);
extern void (__cdecl*AIScriptLoopEnd)();
CUnit *interceptorTargets(CUnit *a1);
CUnit *getMaelstromTarget(CUnit *result);
void getTargetSomething(CUnit *a1);
extern void (__stdcall*AI_AttackUnit)(CUnit *a1);
extern int(*SetAttackPriorityUnit)();
extern BOOL (__fastcall*isDisabledAndOwnedProc)(CUnit *a1, int unit_type);
extern int(*RndGetAtkPriorityUnit)();
extern BOOL (__fastcall*AIUnitCanEnterBunkerProc)(CUnit *a1, CUnit *a2);
extern int (__stdcall*sub_440240)(int, int, int);
CUnit *IterateAllScannerSweeps(int (__fastcall *a1)(CUnit *a1, int a2), int a2);
extern int(*compareUnitToUnitTypeProc)();
extern int (__fastcall*GetBestSCVForRepairProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*buildingCanConnectToAddonProc)(CUnit *a1, CUnit *a2);
extern int (__thiscall*sub_440410)(CUnit *this_);
extern CUnit *(__stdcall*GetDisabledUnitInRange)(int unit_type, int a2);
CImage *sub_440480(CUnit *a1);
CUnit *connectAddonCheck(CUnit *a1);
void GetStaticMinRange(CUnit *a1);
extern CUnit *(__stdcall*GetAttackTargetFromPriority)(CUnit *a1, int a2);
CUnit *sub_440720(Box16 *a1, unsigned __int16 a2);
CUnit *sub_440740(CUnit *a1);
extern int(*AI_AssignBestUnitRepairSCV)();
extern bool (__fastcall*AI_RecallRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_RestorationRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_RestorationRequirementsProc2)(CUnit *a1, CUnit *a2);
extern int (__fastcall*IsUnitVisibleIteratorProc)(CUnit *a1, int a2);
extern int (__fastcall*powerupCanBePickedUpProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*isUnitTypeOwnerAllied)(CUnit *unit, UnitType unit_type);
extern int(*sub_4409D0)();
extern int (__fastcall*AI_targetEnemyProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*unitShieldsClumpInAreaAccumulatorProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*unitEnergyClumpInAreaAccumulatorProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*getEnemyClumpValueProc)(CUnit *a1, CUnit *a2);
CUnit *IsUnitInUnsafeRegion(CUnit *a1);
extern int(*AI_AssignBestRestorationTarget2)();
CUnit *AI_AssignBestRestorationTarget(CUnit *a1);
extern int (__stdcall*isCurrentOrderTargetUnitAllied)(int);
extern int (__fastcall*AIEnemyOrganicUnitHPAccumulatorProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AIAllyUnitHPAccumulatorProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AIEnemyUnitHPAccumulatorProc)(CUnit *a1, CUnit *a2);
signed int AI_TargetUnitIsWorthHitting(CUnit *a1, CUnit *a2);
extern int (__fastcall*SpiderMine_EnemyProc)(CUnit *a1, CUnit *a2);
extern int(*sub_440F10)();
extern int(*sub_440F50)();
extern int (__thiscall*sub_440F80)(CUnit *this_);
extern int (__fastcall*returnCargoToBestDepotProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*FindNearestEnemyAndClumpProc)(CUnit *a1, CUnit *a2);
bool *checkArbiterCloakingRange(CUnit *a1, unsigned __int16 a2);
int RevealUnits(CUnit *a1);
extern int (__fastcall*Medic_HealTargetProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AIsiegeTankCheckUnitCanBeAttackedProc)(CUnit *a1, CUnit *a2);
CUnit *FindBestReturnCargoTarget(CUnit *a1);
CUnit *AI_AcquireNearestEnemyTarget(CUnit *a1);
extern int (__fastcall*AI_EMPShieldRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_EMPEnergyRequirementsProc)(CUnit *a1, CUnit *a2);
extern int(*AI_IrradiateRequirementsProc)();
extern int(*AI_LockdownRequirementsProc)();
extern int (__fastcall*AI_NukeRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_EnsnareRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_PlagueRequirementsProc)(CUnit *a1, CUnit *a2);
extern int(*canHitUnit)();
extern int (__fastcall*AI_PsiStormRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_StasisRequirementsProc)(CUnit *a1, CUnit *a2);
extern signed int (__fastcall*AI_OpticalFlareRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_ParasiteRequirementsProc)(CUnit *a1, CUnit *a2);
extern int(*AI_MindControlRequirementsProc)();
extern int(*AI_FeedbackRequirementsProc)();
extern signed int (__fastcall*AI_MaelstromRequirementsProc)(CUnit *a1, CUnit *a2);
extern signed int (__fastcall*AI_DisruptionWebRequirementsProc)(CUnit *a1, CUnit *a2);
extern int(*AI_BroodlingRequirementsProc)();
extern int(*AI_YamatoRequirementsProc)();
int unitGetAttackPriorityFor(CUnit *a1, CUnit *a2);
int sub_442210(CUnit *a1, CUnit *a2);
extern int (__stdcall*AI_FindBestEnemyClump)(int, int);
extern bool *(__stdcall*MedicHeal_TargetAcquire)(CUnit *a1);
extern BOOL (__fastcall*AI_SiegedTankCanAttackUnitNear)(int a1, CUnit *a2);
extern int (__fastcall*AI_SCVBestRepairProc)(CUnit *a1, CUnit *a2);
bool *AI_AssignBestEMPTarget(CUnit *a1, int a2);
extern int (__fastcall*AI_DefensiveMatrixRequirementsProc)(CUnit *a1, CUnit *a2);
CUnit *AI_AssignBestIrradiateTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestLockdownTarget(int a1, CUnit *a2);
extern int(*AI_AssignBestNukeTarget)();
CUnit *AI_AssignBestEnsnareTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestPlagueTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestDarkSwarmTarget(int a1, CUnit *a2);
extern int (__fastcall*AI_HallucinationRequirementsProc)(CUnit *a1, CUnit *a2);
CUnit *AI_AssignBestPsiStormTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestStasisTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestOpticalFlareTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestParasiteTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestBroodlingTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestMindControlTarget(CUnit *a1);
CUnit *AI_AssignBestFeedbackTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestMaelstromTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestDisruptionWebTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestYamatoTarget(int a1, CUnit *a2);
extern int (__fastcall*getStandardAttackTargetProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*findClosestMineralPatchproc)(CUnit *a1, CUnit *a2);
extern CUnit *(__thiscall*getNextNearestResource)(CUnit *this_, int a2);
int getRandomAttackTarget(CUnit *a1, CUnit *a2);
CUnit *ChooseAttackTarget(CUnit *a1);
CUnit *AI_SCV_FindBestRepairUnit(CUnit *a1);
CUnit *AI_AssignBestDefensiveMatrixTarget(int a1, CUnit *a2);
CUnit *AI_AssignBestHallucinationProc(int a1, CUnit *a2);
extern int (__fastcall*findClosestMineralPatchprocEx)(CUnit *a1, CUnit *a2);
extern int (__stdcall*getNextNearestMineralsEx)(int, int);
int j_getRandomAttackTarget(CUnit *a1, CUnit *a2);
void CheckUnitVisibility(CUnit *a1);
extern int(*sub_443410)();
extern int(*sub_443440)();
extern int(*sub_443470)();
extern int(*sub_4434A0)();
extern int(*sub_4434E0)();
extern int(*sub_443500)();
extern int(*sub_443520)();
extern int(*sub_443530)();
extern int(*sub_443540)();
extern int(*sub_443550)();
extern int(*sub_443560)();
extern int(*sub_443570)();
extern int(*getNextEmptyBaseLocation)();
extern int(*sub_4435D0)();
extern int(*sub_4435E0)();
extern int(*nullsub_21)();
extern _DWORD (__stdcall*trimPlacement)(Position);
extern unsigned int (__stdcall*excludePlacementSpotsDifferentHeight)(const void *a1, Position y);
signed int reserveOnPlacemap(int a1, int a2, unsigned int a3, unsigned int a4, int a5, unsigned __int16 a6, int a7, Position a8);
extern int (__stdcall*excludeNonAIOwnedSpots)(int, int);
extern int (__stdcall*excludePlacementSpotsOutsideRegion)(int a1, Position position);
extern int(*AI_GetNumWorkersForMinerals)();
extern int(*AI_AlliesWatchInit)();
extern int (__stdcall*getClosestBaseFromStartLocation)(int, int);
extern unsigned int (__stdcall*reserveTurretPlacementPosition)(const void *a1, int a2, Position a3, __int16 a4, unsigned int a5);
extern unsigned int (__stdcall*excludeAddonBuildLocations)(unsigned __int16 a1, const void *a2, int a3, Position a4);
extern unsigned int (__stdcall*reserveBuildingOnPlacemap)(unsigned __int16 a1, int a2, Position a3);
signed int reserveStaticBuildingOnPlacemap(CUnit *a1, int a2, int a3, Position a4, int a5);
extern int (__stdcall*isRegionTraversable)(int);
extern int (__stdcall*BWFXN_getTileDistance)(int x, int y, int x2, int y2);
extern int (__stdcall*getBunkerPlacementRegion)(int, int);
extern int(*AI_GetNumDesiredWorkersForBase)();
extern int (__stdcall*sub_444460)(int, int, int, int);
extern int(*sub_4445E0)();
extern int (__stdcall*GetSecondHatcheryBuildLocation)(int, int, int);
extern int (__stdcall*sub_4447D0)(int, int x, int y);
extern int (__stdcall*sub_444850)(int, int, int, int, int, int);
extern int (__stdcall*reservePylonPlacementPosition)(int, int, int);
extern unsigned int (__thiscall*reservePlayerUnitsOnPlacement)(void *this_, const void *a2, int a3, Position a4);
extern void (__fastcall*reserveStructureSpacing)(int a1, int a2, const void *a3, int a4, Position a5);
extern int (__stdcall*excludePlacementSpotsTooFar)(int, int);
extern int (__stdcall*DoAreaFixupsForEnemy)(int, int, int);
extern int (__stdcall*compareBases)(int, int, int, int);
extern int (__stdcall*sub_4450E0)(int, int, int);
extern int (__stdcall*ReassignAllCaptainsInRegions)(int, int, int);
extern int (__stdcall*getNextBaseLocationID)(int, int);
extern int(*RecountBaseLocationStats)();
BOOL sub_445820(int y, CUnit *a2, int x, int a4, int a5);
signed int sub_445930(CUnit *a1);
extern int (__stdcall*sub_445AA0)(int);
extern int (__stdcall*sub_445B00)(int, int, int);
extern int (__stdcall*sub_445BA0)(int, int, int);
int getBuildPlacementInfo(unsigned int a1, int a2, int a3, int a4, Position a5);
extern int (__stdcall*sub_445E80)(int, int);
unsigned int AIReservePlacementData(void *unit_type, char *a2, int a3, Position a4, unsigned int a5);
extern int(*sub_446350)();
extern signed int (__thiscall*AIManageBuildingPlacement)(CUnit *this_, signed int a2, Position a3, int a4, unsigned int a5);
extern int (__stdcall*AIBuildAtLocation)(int, int);
extern int (__stdcall*_AIBuildAtLocation)(int, int);
extern int(*sub_446AE0)();
extern int(*AI_SetGenCmd)();
extern int(*AI_GiveMoney)();
extern int (__stdcall*sub_446B80)(char);
extern int(*AI_SetTargetExpansion_Off_SubAttacks)();
extern int(*sub_446BC0)();
extern int(*sub_446BE0)();
extern int (__stdcall*sub_446C10)(char);
extern int(*sub_446C30)();
extern int(*sub_446C50)();
extern int(*sub_446C70)();
extern int(*sub_446C90)();
extern int(*sub_446CB0)();
extern int(*sub_446CD0)();
extern int(*sub_446CF0)();
extern int (__stdcall*sub_446D00)(__int16);
extern int(*sub_446D20)();
extern int(*AI_Creep)();
extern int(*sub_446D60)();
extern int(*sub_446D70)();
extern int(*sub_446DB0)();
extern int(*sub_446DE0)();
extern int(*sub_446DF0)();
extern int(*sub_446E10)();
extern int(*sub_446E30)();
bool IsNukeTimerReady(int player_id);
extern int(*sub_446E80)();
extern int (__stdcall*sub_446EA0)(char);
extern int(*sub_446EC0)();
extern int (__stdcall*sub_446ED0)(__int16);
extern int(*sub_446EF0)();
extern int(*sub_446F10)();
extern int(*sub_446F30)();
extern int(*sub_446F50)();
extern int(*sub_446F70)();
extern int(*sub_446F90)();
extern int(*sub_446FA0)();
extern int(*sub_446FC0)();
extern int(*sub_446FE0)();
extern int(*sub_447000)();
extern int (__stdcall*sub_447010)(char);
extern int(*sub_447030)();
extern int(*AIClearUnitTypeFromAttackGroup)();
extern int(*AI_AttackTimerDecrement)();
extern int(*sub_4470D0)();
extern int(*sub_447100)();
extern int(*sub_447120)();
extern int(*sub_447130)();
extern int(*sub_447140)();
extern int(*sub_447150)();
extern int(*sub_447170)();
extern int(*sub_447180)();
extern int(*sub_4471A0)();
extern int(*sub_4471E0)();
extern int(*sub_447220)();
extern int(*AI_AttackAdd)();
extern int(*sub_4472A0)();
extern int(*sub_4472C0)();
extern int(*sub_4472F0)();
extern int(*sub_447300)();
extern int(*sub_447310)();
extern int(*sub_447320)();
extern int(*sub_447330)();
extern int(*sub_447340)();
extern int(*sub_447350)();
extern int(*sub_447360)();
extern int(*AI_HasNoDefenseBuild)();
extern int(*AI_DefenseClear_aa)();
extern int(*AI_DefenseClear_ga)();
extern int(*AI_DefenseClear_ag)();
extern int(*AI_DefenseClear_gg)();
extern int(*AI_DefenseSet)();
extern int(*sub_447530)();
extern int(*sub_447570)();
extern int(*sub_447580)();
extern int(*getAIRequestedBuildType)();
extern int (__stdcall*sub_4475B0)(int);
extern int(*sub_447650)();
extern int(*sub_447670)();
extern int(*initAIControllerData)();
extern int(*UpdateTownPriorities)();
extern int (__stdcall*sub_447780)(int);
extern int(*nullsub_22)();
extern void (__fastcall*sub_4477C0)(int a1, CUnit *a2);
extern int(*sub_447810)();
bool isAIAllowedToBuild(int player_id, UnitType unit_type);
extern int(*sub_447880)();
extern int(*sub_4478A0)();
extern int(*sub_4478C0)();
extern int(*sub_4478E0)();
extern int(*sub_447900)();
extern int(*sub_447920)();
extern int(*sub_447940)();
extern int(*sub_447960)();
char AI_MergeMorph(UnitType unit_type, int a2, char a3, char a4, int a5);
extern int(*nullsub_23)();
int sub_447A70(CUnit *a1);
extern int(*sub_447AF0)();
char AIGetMultiCost(int a1, int a2, int a3, int a4, char a5, int arg_4);
void AI_HarassFactor(int a1, int a2);
extern int (__stdcall*AI_Reserve)(int);
extern int (__stdcall*AI_ReserveCost)(int);
extern int (__stdcall*ReadAIBankerData)(FILE *);
extern int (__stdcall*WriteAIControllerData)(FILE *);
extern int (__stdcall*sub_448160)(int);
extern int(*sub_4481A0)();
extern int(*sub_4481B0)();
extern int (__stdcall*sub_4481C0)(int, int, int);
extern int(*sub_448220)();
extern int (__thiscall*ReadAIScriptControllerData)(FILE *);
extern int (__stdcall*sub_4483D0)(int);
extern int (__stdcall*sub_448400)(int);
extern int (__stdcall*AI_MergeMorphSwitch)(int);
extern int (__stdcall*sub_4485B0)(int, int);
extern int(*sub_448630)();
int sub_4486C0(int a1, Tech a2);
extern int (__stdcall*sub_448750)(char);
extern int (__fastcall*hasResourcesForUnit)(UnitType a1, int a2, int a3);
extern int(*sub_448890)();
extern int(*AI_UpdateControllerTimers)();
extern int (__thiscall*sub_4489E0)(HWND hDlg);
extern int(*cleanBNImages)();
extern int (__stdcall*BattleErrorDialog)(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType);
extern int(*sub_449030)();
extern int(*sub_449060)();
extern int(*GetBNIconImageRect)();
extern int(*LoadBNIcons)();
extern int (__stdcall*sub_449140)(HWND hWnd, char *a3, int a4);
extern int (__stdcall*sub_449190)(int a1, int a2, int a3, int a4);
extern int(*sub_4491E0)();
extern int (__stdcall*BNBlitToWindow)(int, int a5, int);
extern int(*sub_449390)();
extern int (__stdcall*ParseSCIcon)(int, int, int);
extern int (__stdcall*DrawChannelUser_maybe)(LPCSTR lpString, int, char, int);
extern int (__stdcall*BattleGetErrorString)(int, int, int, int, int, char *dest, size_t size_);
extern int (__stdcall*BattleUpdateIcons)(int, int, LPCSTR lpString, int, int, char, int, int, int, COLORREF color);
extern int (__stdcall*GetObjectHeight)(HGDIOBJ h);
extern int (__stdcall*addItemProc)(LPARAM, LPARAM lParam, int);
extern int(*sub_44A250)();
extern int(*sub_44A2B0)();
extern int (__stdcall*sub_44A380)(HWND hWnd);
extern int (__stdcall*sub_44A410)(HWND hWnd);
extern int (__stdcall*sub_44A560)(LPARAM, LPARAM lParam, char);
extern int (__stdcall*_ShowWindow)(int, HWND hWnd, int);
extern int (__stdcall*updateFont)(HWND hWnd);
extern int(*sub_44A730)();
extern int(*sub_44A7E0)();
extern int(*sub_44A7F0)();
extern int(*sub_44A800)();
extern int(*sub_44A810)();
extern int (__stdcall*sub_44A820)(HWND hWnd);
extern int (__stdcall*sub_44AB40)(int, int, int);
extern int (__stdcall*sub_44ABB0)(LPARAM lParam, int, int, int);
extern int(*sub_44AC00)();
extern int(*BnetMapBrowse_DrawItem)();
extern int(*sub_44AF10)();
LRESULT sub_44B030(HWND a1);
extern int (__stdcall*BNET_GetLastGameSpeed)(HWND hWnd);
HWND InitBnetMapListBox(LPARAM listbox_handle, HWND hWnd);
extern int (__stdcall*sub_44B240)(int, int, int, int);
int InitBnetCreateGameScreen(HWND parent_dlg, HWND hWnd);
extern int(*sub_44BA90)();
extern int (__stdcall*gluBN_CREATE_BROWSE_Proc)(HWND hDlg, UINT Msg, WPARAM wParam, LPARAM lParam);
extern int (__stdcall*gluBN_CREATE_GAME_Proc)(HWND hDlg, UINT Msg, WPARAM wParam, LPARAM lParam);
extern int (__stdcall*BattleMakeCreateGameDialog)(int, int, int, int, int, int);
extern int(*BNProfileImageCleanup_0)();
extern int(*BNProfileImageCreate)();
extern int (__stdcall*sub_44CEB0)(HWND hWnd);
extern int(*BNProfileImageCleanup)();
extern int(*CreateFontHandle)();
extern int (__thiscall*sub_44D050)(int a4);
extern int (__stdcall*sub_44D0C0)(int);
extern int(*sub_44D100)();
extern int(*sub_44D120)();
extern int (__stdcall*sub_44D140)(HWND hDlg);
extern int (__stdcall*SaveProfileChanges)(HWND hDlg);
extern int (__thiscall*sub_44D540)(char *, int);
extern int(*sub_44D5B0)();
extern int (__thiscall*gluBN_PROFILE_LinkHandler)(LPCSTR lpszString, int, int, int);
extern int(*sub_44D740)();
extern int(*gluBN_PROFILE_Description)();
extern int (__stdcall*BattleDrawProfileInfo)(int, int, int, int, int, int, int, int, int, int, int);
extern int (__stdcall*DLG_PROFILE_Proc)(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
extern int (__stdcall*BattleMakeProfileDialog)(int, int, int, int, int, int, int, int, int, int);
extern int(*sub_44E400)();
void sub_44E420(CheatHashMaybe *result, CheatHashMaybe *a2);
extern int(*sub_44E4A0)();
extern int(*sub_44E510)();
unsigned int makeHash(int a1, CheatHashRelated *a2, int a3);
char *sub_44E780(CheatHashRelated *a1, _WORD *a2);
extern int (__stdcall*sub_44E8D0)(int);
extern int (__stdcall*sub_44E950)(int);
extern int(*sub_44E970)();
extern int(*sub_44E9B0)();
extern bool (__fastcall*gluPortrait_Update)(dialog *dlg, struct dlgEvent *evt);
extern int(*sub_44EA80)();
extern int(*sub_44EAA0)();
int gluRdy_Portrait_Destroy(dialog *a1, dialog *a2);
extern int (__stdcall*sub_44EB90)(dialog *a1);
extern int (__stdcall*sub_44EC90)(dialog *a1);
void sub_44ED80(dialog *a1);
void StartUnitPortrait(dialog *a1);
extern int (__stdcall*sub_44EE40)(__int16);
extern int(*videoSpeakingPortraitLoop)();
extern int (__stdcall*sub_44EED0)(int);
void gluRdy_Portrait_InitChildren(dialog *a1);
extern bool (__fastcall*gluRdy_Portrait)(dialog *dlg, dlgEvent *evt);
extern int (__stdcall*LoadBriefingFrameImages)(int);
extern int(*loadPortdataDAT)();
extern int(*sub_44F4C0)();
extern int(*getHumansOnTeam)();
extern int(*sub_44F590)();
extern int (__thiscall*LeagueStats)(char *string2);
extern int(*sub_44F600)();
extern int(*sub_44F640)();
extern int(*sub_44F680)();
extern int(*sub_44F6B0)();
extern int(*sub_44F6C0)();
extern int (__stdcall*sub_44F6D0)(char, char);
extern int(*resetPlayerLobbySlotInfo)();
extern int(*sub_44F7B0)();
extern int(*sub_44F860)();
extern int (__stdcall*slotUpdate)(int);
extern int (__stdcall*sub_44F8D0)(int, int);
extern int (__stdcall*sub_44FA60)(int);
extern void (__fastcall*sub_44FAC0)(dialog *dlg, int x, int y, rect *dst);
extern int(*sub_44FC20)();
extern int (__stdcall*sub_44FCD0)(int, int);
extern void (__stdcall*LockLobbySlots)(dialog *a1);
extern void (__cdecl*sub_44FEE0)();
void sub_44FF20(dialog *a1);
extern int(*sub_44FF30)();
extern int(*sub_44FF50)();
extern int(*getPlayerCaps)();
extern int(*sub_4500D0)();
extern int(*updateDownloadPercentages)();
extern int(*sub_4502F0)();
extern void (__fastcall*sub_450330)(dialog *dlg, int x, int y, rect *dst);
extern void (__thiscall*sub_4503A0)(dialog *this_, int a2, int a3);
extern int(*sub_4503D0)();
extern bool (__fastcall*sub_4503F0)(dialog *dlg, dlgEvent *evt);
void sub_450420(dialog *a1);
extern bool (__fastcall*sub_450470)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*sub_4504A0)(dialog *a1, dlgEvent *a2);
void sub_450560(dialog *a1, int a2);
extern int (__stdcall*sub_450650)(int);
extern int (__stdcall*createOwnerDropdown)(int, int);
extern bool (__fastcall*sub_450A60)(dialog *dlg, dlgEvent *evt);
void CreateRaceDropdown(dialog *a1, Race race);
extern int(*sub_450C00)();
signed int playerOwnerDropdownCommands(dialog *a1, unsigned __int8 a2);
extern bool (__fastcall*playerOwnerDropdownLoop)(dialog *dlg, dlgEvent *evt);
extern int (__stdcall*playerOwnerDropdownCreate)(dialog *a1, int, int, int, char, int);
extern int(*sub_451370)();
extern int(*sub_4513A0)();
extern void **(__stdcall*playerOwnerDropdownCreate2)(dialog *a1);
extern void (__stdcall*dropdownUpdate)(LobbySlot *a1, int a2, int a3, char a4, int a5, int a6);
void sub_451940(LobbySlot *a1, int a2, int a3, char a4);
void sub_451AA0(LobbySlot *a1, int a2, int a3, int a4);
extern int (__stdcall*sub_451D40)(int);
extern int (__stdcall*sub_451FB0)(int);
extern int (__stdcall*sub_452250)(dialog *a1);
extern int(*sub_452300)();
extern int(*sub_452310)();
extern int(*MakeGamePublic)();
extern int(*_swapPlayers)();
extern int (__stdcall*sub_452370)(char);
extern int(*sub_4523C0)();
extern int(*sub_452410)();
extern int(*_startGame)();
BOOL sub_452530(char *a1);
extern int(*sub_452570)();
extern int(*sub_452590)();
extern int(*sub_4525A0)();
extern int (__stdcall*sub_4525C0)(int);
extern int(*BanPlayerSlot)();
extern int(*CloseSlot)();
extern int(*OpenSlot)();
extern int (__stdcall*MakeComputerSlot)(int);
extern int(*sub_452900)();
signed int j_JoinNetworkGame(GameData *a3);
signed int Begin_BNET(Char4 network_provider_id);
extern int(*sub_452A70)();
extern int(*sub_452A90)();
extern int (__stdcall*sub_452AB0)(int);
char *GetBattleNetOption(char *a1, BNetGateways *a2);
extern int(*sub_452BA0)();
const char *sub_452BD0(int a1, BNetGateways *a2);
void *OverwriteBNGatewayList(BNetGateways *a1);
extern BOOL (__stdcall*LoadDefaultGatewayList)(BNetGateways *a1);
char *sub_452EC0(BNetGateways *a1);
extern int (__stdcall*sub_452F00)(int);
extern int (__stdcall*sub_452F40)(char *);
extern BNetGateways *(__stdcall*sub_452F80)(BNetGateways *a1, int a2);
void LoadBNGatewayList(BNetGateways *a1);
extern int(*sub_453150)();
extern int(*sub_453170)();
extern int(*sub_4531A0)();
char sub_4531F0(CUnit *a1);
void setRepulseAngle(int a1, CUnit *a2);
CUnit *removeRepulseTile(CUnit *result);
signed int sub_453420(CUnit *a1);
void sub_4535A0(CUnit *a1, int a2);
extern int (__cdecl*sub_453680)(const void *, const void *);
extern int (__cdecl*sortRules)(const void *, const void *);
extern int(*sub_453700)();
extern int (__stdcall*sub_453710)(int);
extern int(*LeaderBoardSorting)();
extern int(*sub_453800)();
extern int(*sub_453890)();
extern int(*updateLeaderboardSorting)();
extern int (__stdcall*sub_453AE0)(int, int);
int sub_453BA0(const void *a1, size_t a2, const void *a3, size_t size_);
extern int (__stdcall*sha1)(char *source, int);
extern int (__stdcall*parseLocalSBigBuffer)(int, int, int, void *str, size_t size_, void *, size_t);
extern int (__fastcall*refundTech75percent)(unsigned __int8 a1, int a2, Tech a3);
int sub_453D90(unsigned __int8 a1, Tech tech);
extern bool (__fastcall*UnitIsOfType)(CUnit *unit, UnitType unit_type);
u8 *Unit_RefundPartialTechnology(CUnit *a1);
void Unit_RefundFullTechnology(int a1, CUnit *a2, int a3);
extern int(*getUpgradeGasCost)();
extern int(*getUpgradeOreCost)();
extern int(*getUpgradeTimeCost)();
u8 getArmorCount(CUnit *a1);
extern bool (__fastcall*UnitIsUltralisk)(CUnit *unit, UnitType unit_type);
extern bool (__fastcall*UnitIsVulture)(CUnit *unit, UnitType unit_type);
extern int (__stdcall*refundUpgrade75percent)(char);
extern int (__stdcall*refundUpgradeFull)(char);
void Unit_RefundPartialUpgrade(CUnit *a1);
void Unit_RefundFullUpgrade(CUnit *a1);
int UpdateSpeed(CUnit *a1);
extern int(*sub_454360)();
int ApplySpeedUpgradeFromUnitType(CUnit *a1);
void ApplySpeedUpgradeFromUpgradeType(__int16 a1, CUnit *unit);
u8 orders_Upgrade(CUnit *a1);
u8 orders_ResearchTech(CUnit *a1);
extern int(*BeginUpgrade)();
signed int BeginResearch(Tech tech, CUnit *a2);
extern int(*sub_454C80)();
BOOL UnitIsIrradiatable(CUnit *a1);
extern int(*sub_454D00)();
void RemoveMaelstrom(CUnit *a1);
void RemoveLockdown(CUnit *a1);
void IrradiateHit(CUnit *target, CUnit *attacker, char attacking_player);
void ApplyIrradiate(CUnit *unit);
void RemoveMatrixFrom(CUnit *a1, signed int damage);
char CreateDefensiveMatrix(CUnit *a1);
u8 ApplyDefensiveMatrix(CUnit *a1);
extern char (__stdcall*orders_DefensiveMatrix)(CUnit *a1);
void OpticalFlareHit(CUnit *a1, char attacking_player);
int RestoreHit(CUnit *a1);
int LockdownHit(CUnit *a1, unsigned __int8 a2);
void SetMaelstromTimer(CUnit *a1, unsigned __int8 time);
u8 sub_455460(CUnit *a1);
int sub_455480(CUnit *a1);
void StimpackSFXRand(CUnit *unit);
extern void(*sub_455500)();
extern int (__fastcall*irradiateUnitDamageProc)(CUnit *a1, CUnit *a2);
extern void (__thiscall*IrradiateDamageLoop)(CUnit *this_);
extern int (__stdcall*OrderAcquire_Nothing)(int, int, int);
signed int CanRClickGround_maybe(CUnit *a1);
int DoesAcceptRclickCommands(CUnit *a1);
extern char (__fastcall*getGenericUnitIdleOrder)(int a1, CUnit *a2);
signed int OrderAcquire_genericRighClickHarvestProc(CUnit *a1, CUnit *a2);
extern int (__stdcall*OrderAcquire_genericReturnToIdleProc)(int, int, int);
extern signed int (__thiscall*OrderAcquire_genericIdleUnitProc)(CUnit *this_, int a2, int *a3, __int16 a4);
extern int (__stdcall*OrderAcquire_genericRighClickHarvestIdleProc)(int, int, int);
extern signed int (__stdcall*ShowRClickErrorIfNeeded)(CUnit *a1);
extern int (__thiscall*OrderAcquire_genericRightClickUnitProc)(CUnit *this_, int a2, CUnit **a3, __int16 a4);
extern int (__thiscall*OrderAcquire_genericRightClickUnitProc2)(CUnit *this_, int a2, int a3, __int16 a4);
bool sub_455F20(CUnit *a1, int a2, __int16 a3, __int16 a4, unsigned __int16 a5);
extern void (__stdcall*sub_4560D0)(signed int a1, signed int a2, int a3, signed int a4, char a5);
void CMDACT_RightClick(dlgEvent *a1);
int sub_456490(int a1, __int16 a2, CUnit *a3);
extern void (__thiscall*input_Game_RightMouseClick)(dlgEvent *this_);
extern int(*sub_456630)();
extern int(*sub_456680)();
extern char (__fastcall*sub_4566B0)(int a1, CUnit *a2);
extern int (__thiscall*sub_456730)(CUnit *this_);
int sub_4567C0(CUnit *a1);
extern int(*sub_4568B0)();
extern void (__fastcall*statdata_UnitWireframeUpdate)(dialog *dlg, int x, int y, rect *dst);
dialog *sub_456A30(dialog *result);
extern signed int (__fastcall*statdata_UnitWireframeInteract)(dialog *a1, dlgEvent *a2);
extern int(*load_WireframeGRP)();
extern int(*sub_456AE0)();
extern int(*ProgressBar_Destroy)();
extern bool (__fastcall*statdata_ProgressBarUpdate)(dialog *dlg, struct dlgEvent *evt);
extern int(*sub_456C10)();
extern int(*sub_456C20)();
signed int sub_456C30(dialog *a1);
char sub_456D30(dialog *a1);
extern int (__stdcall*statdata_LabelUnknownUpdate)(int, int);
extern void (__fastcall*statdata_Unknown)(dialog *a1, dlgEvent *a2);
extern int(*sub_456EF0)();
extern char (__thiscall*statdata_UnitWireframeSelectUpdate)(dialog *this_, int a2, int a3);
extern void (__fastcall*statdata_UnitWireframeTransUpdate)(dialog *dlg, int x, int y, rect *dst);
extern int(*sub_4571B0)();
void DLGsetProgressBarValue(dialog *a1, __int16 a2, __int16 a3);
void sub_457250(dialog *a1, __int16 a2, __int16 a3);
void sub_4572F0(dialog *a1);
void sub_457310(dialog *a1);
int CreateContextHelpFromDialog(dialog *a1, char *a2);
extern int(*sub_457390)();
extern unsigned int (__stdcall*CMDACT_CancelGeneric)(dialog *a1);
extern void (__fastcall*statdata_buttonUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*statdata_iconOverlayUpdate)(dialog *dlg, int x, int y, rect *dst);
extern int(*sub_457540)();
extern int(*sub_457550)();
extern int(*sub_457560)();
extern int(*sub_457570)();
extern int(*sub_457580)();
extern int(*sub_457590)();
int drawCancelUpgradeContextHelp(dialog *a1);
extern void (__stdcall*statdatalUserInteract)(dialog *a1);
char drawCancelUnitContextHelp(dialog *a1);
int drawUnloadUnitContextHelp(dialog *a1);
void *DlgButton_Create(dialog *a1);
void statdataMouseOverInteract(dialog *a1, dialog *a2);
void sub_457DE0(dialog *a1, struct dlgEvent *a2);
void statdata_Destroy(dialog *a1, struct dlgEvent *a2);
extern signed int (__fastcall*statdata_UnitWireframeTransit)(dialog *a1, dlgEvent *a2);
extern signed int (__fastcall*statdata_buttonInteract)(dialog *a1, dlgEvent *a2);
extern void (__cdecl*sub_457FE0)();
void ProgressBar_Create(dialog *a1);
extern void(*sub_458120)();
extern bool (__fastcall*statdata_ProgressBarInteract)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*StatusScreenButton)(dialog *a1, dialog *a2);
extern bool (__fastcall*statdata_UnitWireframeSelection)(dialog *dlg, dlgEvent *evt);
int statdata_extendedCtrlID(dialog *a1);
extern bool (__fastcall*statdata_dlg_Interact)(dialog *dlg, dlgEvent *evt);
extern int(*load_Statdata_BIN)();
extern int(*sub_4586E0)();
extern int(*sub_4586F0)();
extern void (__fastcall*ConsoleDlgUpdateCB)(dialog *dlg, int x, int y, rect *dst);
extern int (__stdcall*setDefaultTooltipInfo)(__int16, __int16, __int16, __int16, __int16);
extern int(*sub_458850)();
extern int (__thiscall*sub_4588C0)(dialog *this_);
extern void (__fastcall*statbtn_Btn_Update)(dialog *dlg, int x, int y, rect *dst);
int statBtn_dlg_CharPress(dlgEvent *a1);
extern int(*sub_458BB0)();
extern int(*updateButtonSetEx)();
extern int(*free_cmdIcons)();
extern int(*sub_458D50)();
extern int(*updateButtonSet)();
void sub_458E70(dialog *a1);
extern int (__stdcall*sub_458E90)(int);
extern int (__stdcall*sub_458EF0)(int);
extern int (__stdcall*CreateTooltip)(char *a1);
extern int(*CreateUpgradeLevelTooltip)();
extern int(*sub_4591D0)();
extern int(*resetTooltipInfo)();
void getTooltipInfo(dialog *a1, dialog *a2);
void sub_4596A0(dialog *a1);
extern void (__cdecl*sub_459770)();
void sub_4597C0(dialog *a1, struct dlgEvent *a2);
void statBtn_dlg_MouseMove(dialog *a1, struct dlgEvent *a2);
extern bool (__fastcall*statbtn_BIN_ReplayProgressbar)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*statbtn_Btn_Interact)(dialog *dlg, dlgEvent *evt);
extern int(*updateCurrentButtonset)();
extern int(*statbtn_BIN_CustomCtrlID)();
extern int(*BTNSACT_ChangeButtons)();
extern bool (__fastcall*statbtn_DLG_Interact)(dialog *dlg, dlgEvent *evt);
extern int(*load_statbtn_BIN)();
extern int (__stdcall*sub_459D90)(int);
extern int(*sub_459DC0)();
extern int(*sub_459E00)();
extern int(*sub_459EC0)();
extern int (__stdcall*sub_459EF0)(int);
const char *SendMapNameData(MapDownload *a1, int a2);
extern int (__stdcall*sub_45A010)(char);
extern int(*Download_maybe)();
extern int(*sub_45A0B0)();
extern int(*dataXFer_0x05)();
extern int (__stdcall*dataXFer_0x03)(int);
extern int(*dataXFer_0x02)();
extern int(*openMapFile)();
extern int (__stdcall*dataXFer_0x04)(int, int);
extern int (__stdcall*fd_user)(int);
extern int (__stdcall*sub_45A520)(int, int);
extern int (__stdcall*dataXFer_0x01)(int, int a1);
extern int(*sub_45A840)();
extern int(*sub_45A860)();
extern int(*sub_45A890)();
extern int(*sub_45A8B0)();
extern int(*sub_45A900)();
extern int(*sub_45A920)();
extern int (__fastcall*sub_45A950)(size_t size_, char *dest);
extern int (__thiscall*sub_45A970)(char *source);
extern int(*sub_45A990)();
extern int (__stdcall*sub_45A9B0)(char);
extern int (__stdcall*sub_45AB20)(char, char);
extern int(*sub_45ABA0)();
extern int (__fastcall*sub_45ABE0)(size_t size_, char *dest);
extern signed int (__thiscall*sub_45AC10)(u8 *this_);
extern int(*GetEmptiestTeam)();
extern int(*updatePlayerForce)();
extern int(*GetFreeSlotFromEmptiestTeam)();
void sub_45AE20(int a1);
BOOL isAIScriptNameValid(int player, int a2);
int *AI_RunAIScript(Location *a1, int a2, int a3, int a4);
extern int(*AISCRIPT_Get_u32)();
extern int(*AISCRIPT_Get_u16)();
extern int(*AISCRIPT_Get_u8)();
extern int(*sub_45B050)();
extern int(*nullsub_24)();
extern int(*sub_45B080)();
extern int(*AI_GetNuclearSilo)();
extern int (__stdcall*getStandardUnitCount)(char);
int ParseAIScriptName(int a1, int *a2);
extern int (__stdcall*sub_45B1D0)(int);
extern int(*AI_FindSuitableUnit)();
extern int (__stdcall*AI_GuardResources)(int, int);
extern int (__stdcall*AI_ExpandAt)(int, int, int);
extern int (__stdcall*AI_Expand)(int, int);
extern int (__stdcall*AIScript_CreatePanicThread)(int, int, int);
extern int(*load_AIScript_BIN)();
void AI_CreateNuke(CUnit *a1);
void AI_StartShareTown(int player_id);
extern int (__stdcall*AIScript_RunScriptOpcodes)(_DWORD a1);
extern void(*AIScriptLoop)(void);
extern int(*isValidMorph)();
extern int(*isRectOutOfScreen_fixup)();
int isMorphing(CUnit *a1);
extern int (__stdcall*sub_45CD50)(int, int, int, int, int);
void updateNewUnitVision(UnitType a0, int pos_x, int pos_y);
char orders_DroneStartBuild(CUnit *a1);
extern signed int (__stdcall*sub_45D040)(CUnit *a1);
extern char (__stdcall*orders_Morph2)(CUnit *a1);
void ZergPlaceBuildingCntd(CUnit *a1);
char orders_ZergBuildSelf(CUnit *a1, int a2);
CImage *DroneMorphExtractor(CUnit *a1);
extern int (__stdcall*DroneMorphStandard)(int);
extern CUnit *(__stdcall*ZergUnitBirth)(CUnit *a1);
extern char (__fastcall*ZergPlaceBuilding)(__int16 a1, int a2, CUnit *a3);
char orders_Build5(CUnit *a1);
char orders_ZergBirth(CUnit *a1);
char orders_Morph1(CUnit *a1);
extern int (__stdcall*orders_DroneBuild)(CUnit *a1);
extern int(*sub_45E310)();
u16 setBuildingSelPortrait(UnitType a1);
extern int(*statport_alloc)();
extern int (__stdcall*setLastEventPosition)(int);
extern int(*sub_45E3E0)();
__int16 sub_45E400(Bitmap *a1, int a2, char a3);
extern int (__stdcall*rgbValue)(int);
extern int (__thiscall*sub_45E4C0)(HANDLE video, int a2);
extern int(*sub_45E560)();
extern int (__stdcall*sub_45E570)(char);
extern int(*GameTalkingPortrait_CB)();
extern int (__stdcall*statPortBtnUpdate)(int, int);
extern int(*clearSelectionPortrait)();
extern int(*sub_45E770)();
extern int (__stdcall*displayIdlePortrait)(__int16);
extern int (__stdcall*displayTalkingPortrait)(__int16);
extern int(*sub_45E9A0)();
extern int(*sub_45E9C0)();
signed int sub_45E9F0(dlgEvent *a1);
void displayUpdatePortrait(WORD a1, CUnit *a3, __int16 a4);
extern int(*sub_45EB80)();
extern int(*updateSelectedUnitPortrait)();
extern int (__thiscall*sub_45EC40)(dialog *a1);
extern int(*sub_45ED90)();
signed int DisplayTalkingPortrait_maybe(int x, int a2, unsigned __int16 unit_type, int y);
extern bool (__fastcall*statPortBtnInteract)(dialog *dlg, dlgEvent *evt);
extern int(*sub_45EF50)();
int *DoUnitEventNotify(CUnit *a1, int a2, char a3, int a4, int *a5, unsigned int a6);
dialog *statport_Buttonpress(dialog *a1);
extern bool (__fastcall*statport_Dlg_Interact)(dialog *dlg, struct dlgEvent *evt);
extern int(*loadPortdata_BINDLG)();
extern int(*CommandAt)();
extern int(*sub_45F7F0)();
void IncreaseUnitCountsAtLocation(CUnit *result);
__int16 IncrementUnitCountForAllLoadedUnits(CUnit *a1);
int isUnitAtHeight(CUnit *a1, char location_flags);
extern int (__stdcall*KillRemoveUnits_Force)(int, int, int);
extern int (__stdcall*KillRemoveUnits_AllPlayers)(int, int, int);
extern int (__stdcall*KillRemoveUnits_NeutralPlayers)(int, int, int);
extern int (__stdcall*KillRemoveUnits_Allies)(int, int, int);
extern int (__stdcall*KillRemoveUnits_Foes)(int, int, int);
extern int (__stdcall*KillRemoveUnits_NonAlliedVictoryPlayers)(int, int, int, int);
extern int (__stdcall*getForcePlayers)(int, int);
extern int (__stdcall*GetAllPlayers)(int, int, int);
extern int (__stdcall*GetNeutralPlayers)(int, int, int);
extern int (__stdcall*GetAllies)(int, int, int);
extern int (__stdcall*GetFoes)(int, int, int);
extern int (__stdcall*GetNonAlliedVictoryPlayers)(int, int, int);
extern __int16 (__fastcall*sub_45FE40)(int a1, CUnit *a2);
extern int(*increaseHangerCountsAtLocation)();
extern int (__thiscall*isUnitOwnedByPlayerEx)(int player, CUnit *a2);
extern int (__stdcall*Score)(int);
extern int (__stdcall*Opponents)(int);
extern int (__stdcall*Deaths)(int);
extern int (__stdcall*Kill)(int);
extern int (__stdcall*Accumulate)(int);
extern int (__stdcall*Command)(int);
extern __int16 (__thiscall*IncreaseCompletedUnitCountsAtLocation)(CUnit *this_);
extern int (__fastcall*TrgBringProc)(CUnit *a1, int a2);
extern int(*Bring)();
extern int(*sub_460A80)();
extern int (__fastcall*sub_460A90)(dialog *a1);
extern int(*sub_460B00)();
int sub_460B20(dialog *a1);
int sub_460BB0(dialog *a1, dialog *a2);
bool spdDlgDestroy(dialog *a1, dlgEvent *a2);
extern void (__thiscall*sub_460C80)(dialog *this_);
extern bool (__fastcall*snd_SoundCheckbox)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*snd_SoundSlider)(dialog *dlg, dlgEvent *evt);
extern int(*snd_dlg_UserCTRLID)();
extern int(*spdDlgCreate)();
extern bool (__fastcall*snd_dlg_BINDLG_Main)(dialog *dlg, dlgEvent *evt);
extern void(*sub_460F10)();
extern int(*sub_460F20)();
extern int(*lmissionDlgActivate)();
extern int(*sub_460F70)();
extern void (__cdecl*sub_460FA0)();
int *lmissionDlgCreate(dialog *a1);
extern int(*sub_461160)();
extern bool (__fastcall*lmission_DLG_Interact)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*wmission_BINDLG_Main)(dialog *dlg, dlgEvent *evt);
extern int(*nullsub_25)();
extern int(*sub_4616E0)();
extern int(*sub_4616F0)();
extern int(*isSaveGameTimerReady)();
extern int(*sub_461750)();
extern int (__stdcall*sub_461760)(int);
extern int (__stdcall*SaveGame_Constructor_0)(int);
dialog *sub_4618F0(dialog *result);
extern int (__thiscall*sub_461940)(char *source);
extern int(*sub_461980)();
extern int (__thiscall*sub_461A90)(dialog *this_);
bool DLG_loadsave_Destroy(dialog *a1, char *a2, dlgEvent *a3);
extern bool (__fastcall*loadSave_Delete)(dialog *dlg, dlgEvent *evt);
char loadsave_editbox_onCharEvt(dlgEvent *a1, dialog *a2);
extern bool (__fastcall*loadsave_EditBoxInteract)(dialog *dlg, dlgEvent *evt);
int sub_461D80(dialog *a1);
extern bool (__fastcall*loadsave_ListBox)(dialog *dlg, dlgEvent *evt);
char DLG_loadsave_Create(dialog *dlg, dlgEvent *a2);
extern bool (__fastcall*DLG_LoadGame_Interact)(dialog *a1, dlgEvent *a2);
extern void(*loadSaveGameBIN)();
extern int(*LoadGame_DlgCreate)();
extern int(*okBIN)();
extern int(*savegameBIN)();
extern int (__stdcall*sub_4622A0)(int, int);
void sub_462310(dialog *a1);
dialog **sub_4623C0(dialog *dlg);
void DLG_Loadsave_Activate(dialog *dlg);
extern bool (__fastcall*savegameBIN_DLG_Interact)(dialog *a1, dlgEvent *a2);
extern void (__cdecl*savegameMenu)();
extern int (__stdcall*AI_CreateGuard)(__int16, int);
extern int(*RemoveAllGuards)();
extern int(*sub_462760)();
extern int(*nullsub_26)();
extern int(*sub_4627C0)();
extern int(*sub_4627D0)();
extern int(*nullsub_27)();
extern int(*sub_4627F0)();
extern int (__stdcall*SetDesiredAIControllerDestination)(__int16, __int16);
extern int(*sub_462860)();
extern int (__stdcall*sub_462880)(int);
extern int(*sub_462900)();
extern int (__thiscall*IsAtHome)(CUnit *this_);
extern int (__stdcall*sub_462960)(CUnit *a1);
extern int(*initDetailFinder)();
extern int (__stdcall*AI_PlaceGuard)(int);
signed int AI_Guard_AttackTarget_Proc(CUnit *a1, int a2);
void sub_463040(CUnit *unit);
extern int (__stdcall*sub_4630C0)(int);
extern int(*sub_4632F0)();
extern int(*getSiegeModeUnitType)();
extern int(*findAddonOwner)();
CUnit *GetLoadedSilo(CUnit *ghost, int a2, CUnit *ghost_);
extern int(*sub_4633B0)();
void sub_4633D0(CUnit *a1);
CUnit *j_secondaryOrd_Cloak(CUnit *result);
extern int(*sub_463420)();
char setPathingFromUnitElevation(CUnit *a1);
extern int(*setGroundBuildingPathing)();
int AI_OrderHeal(CUnit *a1, CUnit *a2);
extern signed int (__fastcall*liftoffCheck)(CUnit *a1, CUnit *a2);
int orders_MedicHeal2(CUnit *a1);
int orderReturnToIdle(CUnit *a1);
extern char (__stdcall*orders_HealMove)(CUnit *a1);
int orders_Medic(CUnit *a1);
BOOL sub_463A10(UnitType a1, CUnit *a2);
char doMedicHeal(CUnit *a1, CUnit *a2);
void completeAddon(CUnit *a1, CUnit *a2);
char CheckCreateAddon(CUnit *a1);
extern signed int (__fastcall*SiegeTank_SelfDestructProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*Proc_UnitSelfDestructingCB)(CUnit *a1, CUnit *a2);
char orders_MedicHoldPosition(CUnit *a1);
char orders_MedicHeal1(CUnit *a1);
BOOL SiegeTank_UnderBuilding_GlitchPrevention(CUnit *a1);
extern CUnit *(__thiscall*DestroyUnitsUnderLandingSite)(CUnit *this_);
char orders_BuildingLand(CUnit *a1);
extern int(*bldgLiftoff)();
int orders_BuildingLiftoff(CUnit *a1);
char orders_TankMode(CUnit *a1);
char orders_SiegeMode(CUnit *a1);
char orders_NukeTrack(CUnit *a1);
char orders_PlaceScanner(CUnit *a1);
char orders_PlaceMine(CUnit *a1, int a2);
extern int (__stdcall*sub_465200)(int, int);
extern int(*getHangerTrainCount)();
extern int(*Unit__GetHangerUnitType)();
extern int(*convertCurrentOrderToCarrierReaverFightOrder)();
extern Order (__thiscall*convertCurrentOrderToCarrierReaverIdleOrder)(CUnit *this_);
extern char (__thiscall*getMaxHangerSpace)(CUnit *this_);
extern int (__thiscall*unitIsCarrierReaverSecondaryOrderState2)(CUnit *this_);
extern int (__stdcall*isDistanceGreaterThanPathDistanceToOrderTarget)(int);
extern int (__stdcall*orders_ReaverStop)(CUnit *a1);
char returnAllInterceptors(CUnit *a1);
char orders_ReaverAttack1(CUnit *a1);
void setInterceptorsOnStandby(CUnit *a1);
signed int returnInterceptorIfCannotAttack(CUnit *a1);
char orders_CarrierAttack1(CUnit *a1);
signed int carrierReaverIdle(CUnit *a1, CUnit *a2, int a3, int a4);
extern int (__stdcall*getNextStrafePosition)(int);
char orders_StrafeUnit2(CUnit *a1);
char orders_StrafeUnit(CUnit *a1);
char killAllHangerUnits(CUnit *a1);
extern int(*sub_466270)();
extern int(*addHangerUnit)();
int sub_466440(CUnit *a1);
char orders_Reaver(CUnit *a1, CUnit *a2);
char secondaryOrd_TrainFighter(CUnit *a1);
extern int (__stdcall*setRallyPosition)(__int16, __int16);
extern int(*decrementRemainingBuildTime)();
extern int(*sub_466990)();
extern signed int (__fastcall*getQueuedUnitCount)(int a1, CUnit *a2);
int getRemainingBuildTimePercentage(CUnit *a1);
extern int (__thiscall*sub_466A30)(CUnit *this_);
char refundQueueSlot(signed int a1, CUnit *a2);
extern int(*setRallyUnit)();
signed int AIGetQueuedCount(CUnit *a1, int a2);
int getRepairInfo(CUnit *a1, int a2, int a3, int a4);
extern int(*refundLastSlot)();
int refundAllQueueSlots(CUnit *a1);
extern int (__stdcall*verifyResources)(int);
extern int (__stdcall*ord_repair_subtract)(__int16);
signed int sub_467030(CUnit *a1);
int orders_ResetCollision1(CUnit *a1);
signed int HasMoneyCanMake(int a1, CUnit *a2, UnitType a3);
extern int (__stdcall*sub_4672F0)(int, char, int);
char SetUnitHp(CUnit *a1, signed int a2);
char sub_4673C0(CUnit *a1, int a2);
char orders_Repair1(CUnit *a1);
char orders_TerranBuildSelf(CUnit *a1);
CUnit *CreateUnitOnGeyser(CUnit *a1, unsigned __int8 a2);
int buildingAddon(CUnit *a1, int a2, int a3);
char orders_SCVBuild2(CUnit *a1);
extern void (__cdecl*orders_SCVBuild)(CUnit *a2);
CUnit *attemptTrainHatchUnit(UnitType unit_type, CUnit *a2, int a3);
extern int (__fastcall*Base_CancelStructure)(CUnit *a1, int a2);
void sub_468670(CUnit *a1);
extern int (__stdcall*sub_4686D0)(int);
extern int(*sub_468730)();
extern int(*sub_468770)();
extern int(*sub_4687F0)();
extern int(*sub_468800)();
void setResourceCount(CUnit *this_);
extern int(*unit_isMineralField)();
int UnitIsGasBuilding(CUnit *a1);
BOOL UnitIsResource(CUnit *unit);
extern int(*sub_468910)();
extern BOOL (__thiscall*unit_isGeyserUnitEx)(CUnit *this_, CUnit *a2);
extern int(*sub_468970)();
extern int(*sub_468A20)();
extern CUnit *(__thiscall*sub_468A60)(CUnit *this_);
char *setGatheringFlags(CUnit *a1);
extern signed int (__stdcall*sub_468B00)(CUnit *a1, CUnit *a2, Position *a3, Position a4);
signed int sub_468C70(CUnit *a1, CUnit *a2);
signed int sub_468D10(CUnit *a1, CUnit *a2);
char sub_468DB0(CUnit *a1);
CUnit *sub_468E40(CUnit *result, int a2);
int orders_HarvestOreInterrupted(CUnit *a1);
int orders_HarvestWTF(CUnit *a1);
extern int(*sub_468EF0)();
char orders_CanHarvestMinerals(CUnit *a1);
char orders_MoveToHarvestMinerals(CUnit *a1);
char CheckDepletedGas(CUnit *a1, char a2);
char sub_4696D0(CUnit *a1, CUnit *a2);
void orders_HarvestingMinerals(CUnit *a1);
char orders_EnterExitGas(CUnit *a1);
unsigned int finderIdxFromValue_binary_search(int a1, UnitFinderData *a2, int a3);
extern int(*isUnitInBoundsOfOtherUnit)();
extern int(*nullsub_28)();
extern int(*sub_469BF0)();
extern int(*assignUnitSorting_Y)();
extern int(*assignUnitSorting_X)();
extern int(*SortTopBottom)();
void *sortLeftRight(void *result, signed int a2, UnitFinderData *a3);
extern int(*setUnitSorting_Y)();
void *setUnitSorting_X(void *result, UnitFinderData *a2, int a3);
void updateBuildingLandFog2(CUnit *unit, __int16 x, __int16 y);
int sub_469F40(CUnit *a1);
void updateBuildingLandFog(CUnit *a1, __int16 x, __int16 y);
void sub_469FE0(CUnit *a1);
int updateUnitSortingInfo(int result, CUnit *a2, int a3);
signed int sortUnit(CUnit *a1);
unsigned int updateUnitOrderFinder(CUnit *a1);
void updateUnitSorting(CUnit *a1);
extern int(*sub_46A5E0)();
extern int(*sub_46A5F0)();
extern int(*sub_46A600)();
extern int (__stdcall*sub_46A620)(char);
extern int(*sub_46A630)();
signed int UMAtMoveTarget(CUnit *a1, int a2);
extern int(*sub_46A690)();
void UMFailedPath(CUnit *this_);
extern int(*sub_46A700)();
int sub_46A720(int a1, CUnit *a2);
extern char (__thiscall*sub_46A740)(CUnit *this_);
extern int(*setArchonWarpPathing)();
signed int UMForceMoveFree(CUnit *a1);
signed int UMDormant(CUnit *a1);
int DestinationAndCollisionCheck(CUnit *a1, int a2);
signed int UMSlidePrep(CUnit *a1);
signed int UMNewMoveTarget(CUnit *a1);
signed int UMUIOrderDelay(CUnit *a1);
extern int (__stdcall*UMScoutPath)(int);
signed int UMFaceTarget(CUnit *a1);
extern int(*sub_46AD90)();
signed int UMTerrainSlide(CUnit *a1);
signed int UMFixTerrain(CUnit *a1);
signed int UMSlideFree(CUnit *a1);
signed int UMWaitFree(CUnit *a1);
int UMMoveToLegal(CUnit *a1);
int UMFlyer(CUnit *a1);
void sub_46B500(CUnit *a1);
signed int UMGetFree(CUnit *a1);
signed int UMLumpWannabe(CUnit *a1);
signed int UMAtRest(CUnit *a1);
signed int UMFollowPath(CUnit *a1);
extern int(*sub_46BBA0)();
signed int UMRepathMovers(CUnit *a1, int a2);
signed int UMRepath(CUnit *a1);
signed int UMTurnAndStart(CUnit *a1);
signed int UMStartPath(CUnit *a1);
signed int UMCheckIllegal(CUnit *a1);
int UMTurret(CUnit *a1, int a2);
char _SetMoveTarget_xy(CUnit *a1);
signed int UMFixCollision(CUnit *a1);
signed int UMRetryPath(CUnit *a1);
signed int UMInitialize(CUnit *a1);
void Unit_ExecPathingState(CUnit *a1);
extern int (__stdcall*sub_46C6E0)(int, int);
extern int(*waitLoop)();
extern int(*sub_46C770)();
extern signed int (__stdcall*AddBriefingTrigger)(BriefingEntry *a1);
extern int (__thiscall*BRF_RectLoop2)(dialog *a1);
extern int(*BRF_RectLoop1)();
extern int(*textScrollLoop)();
extern int(*CreateSkipTutorialButton)();
extern int(*HidePortrait)();
extern void (__thiscall*sub_46CA90)(void *this_, dialog *a2);
extern signed int (__stdcall*sub_46CBC0)(dialog *a1);
extern int(*updateMissionObjectives)();
void BRF_displayText(char *a1, unsigned int a2);
extern int (__stdcall*ShowPortrait)(__int16);
void briefingFramesCleanup(dialog *a1);
extern int (__stdcall*SpeakingPortrait)(int);
char BriefingStart(dialog *a1, int a2);
int sub_46D160(dialog *a1);
extern void (__thiscall*MissionBriefingLoop)(dialog *this_);
extern int(*sub_46D1F0)();
extern int (__stdcall*sub_46D200)(int a1);
u32 sub_46D220(dialog *a1);
extern int(*sub_46D340)();
signed int sub_46D3C0(dialog *a1);
extern int(*parseOrdersDatReqs)();
extern void (__cdecl*parseTechUseData)();
extern int(*parseTechResearchData)();
extern int(*parseUpgradeData)();
signed int parseRequirementOpcodes(int a1, int a2, CUnit *a3, Tech2 a4, int a5, int a6);
int OrderAllowed(CUnit *a1, unsigned __int16 order, int a3);
bool CanUseTech(CUnit *unit, Tech2 tech_id, int player_id);
int ReasearchAllowed(Tech2 a1, int a2, CUnit *a3);
int UpgradeAllowed(unsigned __int16 a1, int player_id, CUnit *a3);
extern int(*sub_46E0E0)();
extern int(*sub_46E0F0)();
extern int(*parseUnitsDatReqs)();
extern int(*TTBaseUnitType)();
signed int TTAllowed(UnitType unit_type, CUnit *a2, int player_id);
int CHK_PerformVCODcheck(PlayerInfo *lobby_players, unsigned int a2, int a3, signed int a4);
extern int(*nullsub_29)();
extern int(*nullsub_30)();
extern int(*sub_46E920)();
extern int(*sub_46E990)();
extern int(*nullsub_31)();
extern int(*sub_46EA20)();
extern int(*nullsub_32)();
extern int (__stdcall*loadSaiPaths)(int);
extern int(*prepContourInfoForSaving)();
extern int(*sub_46ED60)();
extern int(*unit_isUnselectable)();
extern int(*sub_46EE70)();
extern int(*refreshDragSelectBox)();
extern void (__thiscall*input_dragSelect_MouseMove)(dlgEvent *this_);
extern void (__cdecl*DisableDragSelect)();
void getTargettingErrorString(int a1, int a2, CUnit *a3);
extern int (__stdcall*sub_46F040)(int, int);
extern int (__stdcall*SortAllUnits)(int, int, int);
extern int (__stdcall*sub_46F290)(int, int, int);
extern int(*sub_46F380)();
extern int (__stdcall*FindUnitAtPoint)(int, int);
void sub_46F5B0(int esi0, int a1, int a2, CUnit *a3, signed int a4);
extern int (__stdcall*UI_doSelectUnits_IfAltNotHeld)(int, int);
extern void (__stdcall*getSelectedUnitsInBox)(Box16 *a1);
extern void (__fastcall*getSelectedUnitsAtPoint)(int a1, int a2);
extern void (__thiscall*input_dragSelect_MouseBtnUp)(dlgEvent *);
extern void (__thiscall*input_Game_LeftMouseClick)(dlgEvent *);
extern void (__cdecl*BWFXN_drawDragSelBox)();
extern int(*sub_4700A0)();
extern int(*sub_4700B0)();
extern int(*sub_4700C0)();
extern int(*sub_470100)();
extern int(*sub_470120)();
extern int(*updatePlayerOwnerInternal)();
extern int (__stdcall*bootPlayer)(int);
extern int (__stdcall*ForceNameTransfer)(int);
extern int (__thiscall*LOBSEND_0x50)(unsigned int playerID);
extern int(*LOBSEND_DataRequest)();
extern int (__stdcall*LOBSEND_ForceNames)(unsigned int playerID);
extern int (__stdcall*LOBSEND_SendMapData)(int, int, char);
extern int (__stdcall*lobbyChat_4D)(int);
extern int (__stdcall*lobbyChat_4C)(int);
extern int (__stdcall*onPlayerJoin)(int);
extern int (__stdcall*playerForceDataTransfer)(int data, int net_player);
extern int(*LobbyRecv)();
extern int(*sub_470BB0)();
extern int(*sub_470BC0)();
extern int(*sub_470BD0)();
char *getPlayerName(unsigned __int8 player);
extern int(*getPlayerFlags)();
extern int(*sub_470C30)();
extern int (__stdcall*sub_470C40)(int, int);
extern int(*sub_470C90)();
extern int(*isValidSlot)();
extern int(*sub_470CE0)();
extern int(*sub_470CF0)();
extern int (__stdcall*SetPlayerData)(char, __int16, __int16, __int16);
extern int(*sub_470D80)();
extern int (__stdcall*swapPlayers)(char, char);
extern int (__stdcall*SetSlotOwner)(char, char);
extern int(*sub_470E30)();
extern int(*sub_470E60)();
extern int (__stdcall*sub_470EA0)(char);
int createUnknownConfirmationBuffer(int player);
int createGameSlotModBuffer(PlayerInfo *a1);
extern int(*createMapDownloadPercentBuffer)();
extern int(*sub_471050)();
extern int(*sub_471080)();
extern int(*sub_471090)();
extern int(*clearGameNextMenu)();
extern int(*sub_471260)();
extern int(*CreateGameInitBuffer)();
extern int (__stdcall*RECV_raceChange)(int, int);
extern int (__stdcall*RECV_PlayerVersion)(int);
extern int(*RECV_GameSlotMod)();
extern int (__stdcall*RECV_SlotChange)(int);
extern int (__stdcall*RECV_ForceChangeUMS)(int, int);
extern int (__stdcall*RECV_ForceChangeMelee)(int);
extern int(*sub_471840)();
extern int (__stdcall*RECV_SwapPlayers)(int);
extern void (__cdecl*ProgressCountdown)();
extern int(*JoinGame)();
extern int(*sub_471CD0)();
extern int (__stdcall*versionCheck)(int, int playerid, int);
extern BOOL (__stdcall*createVersionBuffer)(__int16 net_player_flags, __int16 net_player_x4, __int16 protocol_version, char save_player_unique_id, char save_player_id, int save_hash, BOOL create);
extern int (__stdcall*RECV_StartGame)(int);
extern int(*RECV_SetRandomSeed)();
extern int(*sub_4721E0)();
extern int(*replaceNewlines)();
extern int(*hex_to_int)();
extern int (__stdcall*sub_4722C0)(char *buff);
extern int(*sub_472500)();
extern int(*sub_472570)();
extern int(*sub_472720)();
extern int(*sub_472750)();
extern int(*initializeProviderVersion)();
extern int (__stdcall*Ban_Constructor)(char *source);
extern int(*sub_4728E0)();
extern int(*sub_4728F0)();
extern int(*dataXFer_0x06)();
extern int(*sub_472940)();
extern int(*sub_4729E0)();
extern int(*sub_4729F0)();
extern int(*dataXFer_0x00)();
int IsDownloadComplete(MapDownload *a2);
extern const char *(__stdcall*UserInfo_Constructor)(MapDownload *a1, int a2);
extern int(*sub_472BA0)();
extern MapDownload *(__stdcall*sub_472C10)(MapDownload **a1);
extern int(*sub_472D50)();
extern int(*killTimerFunc)();
extern void (__stdcall*TimerFunc)(HWND, UINT, UINT, DWORD);
extern int(*SetTimerFunc)();
void SetFogMask(int a1, int a2, int a3, int x, int y);
void AddFogMask(int a1, int a2, int some_flags_maybe, int x, int y);
extern int(*sub_472F00)();
extern int(*sub_472F20)();
extern BOOL (__fastcall*sub_472F40)(__int16 a1, __int16 a2, MegatileFlags a3, MegatileFlags a4);
BOOL getActiveTileFlag(__int16 x, __int16 y, MegatileFlags a3, MegatileFlags a4);
extern int(*sub_472FD0)();
extern int(*sub_472FF0)();
int canPlaceCreepBuildingAt(unsigned __int8 player_id, __int16 a2, __int16 a3, int a4, int a5, int a6, int a7);
extern int (__stdcall*canPlaceNydusBuildingAt)(int, int, int, int, int);
extern int (__stdcall*sub_473290)(int, int, int);
extern int (__stdcall*sub_4732C0)(int, int, int);
int j_canUnitTypeFitAt(signed int a1, UnitType a2, __int16 a3);
extern int (__stdcall*sub_473300)(int, int, int, char, char);
extern int(*sub_473410)();
extern unsigned __int32 (__thiscall*UnitIsResourceContainer)(CUnit *this_);
extern int (__stdcall*sub_4734B0)(__int16);
extern signed int (__thiscall*IsAccessibleForHarvest)(CUnit *this_);
extern int (__stdcall*sub_473720)(int, int, int, int, int, int, int, int, int);
extern int (__stdcall*canPlacePoweredBuildingAt)(__int16, __int16);
extern int(*sub_473970)();
extern int(*PlaceBuildingResourceRestrictionCheck)();
extern int (__stdcall*canPlaceStandardBuildingAt)(int, int, int, int, int, int);
extern int (__stdcall*sub_473BD0)(int, int, int);
extern int (__stdcall*vespeneGeyserPlacebox)(int, int, int, int);
extern int (__stdcall*sub_473EF0)(int, int, int);
extern signed int (__stdcall*canBuildOnTileLocation)(CUnit *a1, int a2, int a3, __int16 a4, int a5, int a6, int a7, int a8, int a9);
extern int (__stdcall*sub_4741A0)(int, int, int, int);
extern int(*AssignSecondaryOrderNoParam)();
extern int(*sub_4742B0)();
COrder *removeOrderFromUnitQueue(COrder *result, CUnit *a2);
char playSubunitIscript(CUnit *a1, Anims a2);
extern int(*sub_4743C0)();
extern int(*setSecondaryOrder)();
extern COrder *(__fastcall*sub_474400)(CUnit *a1, Order order);
COrder *j_removeOrderFromUnitQueue(COrder *result, CUnit *a2);
extern int(*sub_4744D0)();
extern int(*sub_4744F0)();
signed int sub_474500(CUnit *a1, UnitType unit_type);
void unknownSpecialOrder(u16 a1, Order a2, COrder *a3, CUnit *a4, Position a5, CUnit *a6);
COrder *QueueOrderEx(Order a1, COrder *a2, CUnit *a3, u16 dx0, Position a4, CUnit *a5);
signed int sub_4746D0(CUnit *a1, char a2, UnitType a3, int a4);
extern void(*_orderSelfSpecial)();
extern void (__stdcall*sub_474790)(__int16, __int16);
extern void (__stdcall*sub_4747C0)(Position a5, CUnit *a6);
char *sub_4747E0(CUnit *a1, Order a2, COrder *a3, CUnit *a4);
Order order(int a1, CUnit *a2, Order a3, Position a4, CUnit *a5, u16 a6);
extern void (__stdcall*sub_4748E0)(__int16, __int16);
extern void (__stdcall*sub_474910)(u16 dx0, __int16, __int16);
extern void (__stdcall*sub_474980)(Position a4, CUnit *a5);
extern void(*QueueOrder)();
char *sub_4749D0(Order a1, CUnit *a2);
char *sub_474A20(Order a1, __int16 a2, __int16 a3, CUnit *a4);
void moreOrdersFML(CUnit *a1, CUnit *a2, Order a3);
COrder *sub_474AF0(Order a1, CUnit *a2, Position a3, CUnit *a4);
extern int (__thiscall*orderImmediate)(CUnit *this_);
void queueNewOrder(COrder *result, __int16 a2, __int16 a3, CUnit *a4, Order a5, CUnit *a6, u16 a7, Position a8, CUnit *a9);
void orderInterrupt(CUnit *unit, Order order_id, Position a3, CUnit *a4);
extern void (__stdcall*_doOrder)(CUnit *a1, Order order_id, __int16 x, __int16 y, int a5);
extern Order (__stdcall*sub_474CB0)(CUnit *a1, Order order_id, u16 a3, __int16 pos_x, __int16 pos_y, int a6);
extern Order (__fastcall*_order)(int a1, CUnit *a2, Order order_id, Position a4, CUnit *a5, int a6);
Order issueQueuedOrderTarget(CUnit *a1, CUnit *a2, Order order_id, int a4);
extern Order (__fastcall*__order)(Order order_id, CUnit *a2, int a3);
signed int isOrderValid(char a1, CUnit *a2, CUnit *a3, int a4);
void sub_474FB0(CUnit *a1, Order order_id, u16 a3, __int16 pos_x, __int16 pos_y);
extern void (__thiscall*PrepareForNextOrderFunc)(CUnit *this_);
void sub_475220(CUnit *a1, Order order_id, Position position, CUnit *a4, u16 a5);
void OrderToPos(CUnit *a1, Order order_id, __int16 pos_x, __int16 pos_y);
void UnitOrderTo(CUnit *unit, CUnit *target, Order order_id);
void orderComputer_cl(CUnit *a1, Order order_id);
char sub_475350(CUnit *a1, __int16 a2, __int16 a3);
extern char (__thiscall*toIdle)(CUnit *this_);
void ISCRIPT_NoBrkCodeEnd(CUnit *a1, int a2);
char actUnitReturnToIdle(CUnit *a1);
void OrderQueuedCommand(__int16 a1, __int16 a2, Order a3, COrder *a4, CUnit *a5, CUnit *a6, u16 a7, Position a8, CUnit *a9);
void ExecuteQueuedOrder(__int16 a1, __int16 a2, u16 a3, CUnit *a4, _DWORD a5, int a6, Order order, CUnit *a8, Position a9, CUnit *a10);
extern int (__stdcall*sub_4756B0)(int, int, int);
extern int (__stdcall*sub_4756E0)(int, int);
void RemoveUnit(CUnit *a1);
extern int(*nullsub_33)();
extern int(*nullsub_34)();
int UnitIsInvincible(UnitType unit_type);
extern u8 (__thiscall*UnitGetAirWeapon)(CUnit *this_);
int getUnitMaxWpnRange(CUnit *a1, WeaponType weapon_type);
extern void (__fastcall*incrementUnitKillCount)(CUnit *a1);
int sub_4759F0(CUnit *a1);
extern int(*sub_475A00)();
signed int hasGrndWeaponGraphic(CUnit *a1);
signed int unitHasNoMainOrderType(CUnit *a1);
extern int(*sub_475A70)();
extern WeaponType (__thiscall*getGroundWeaponType)(CUnit *this_);
extern char (__thiscall*UnitGetGrndWeapon)(CUnit *this_);
extern int(*sub_475AF0)();
extern int(*sub_475B40)();
int orders_Guard(CUnit *a1);
signed int unitIsPositionInAttackAngle(int a1, int a2, CUnit *a3, unsigned __int8 a4);
int unitCanAttackGroundType(UnitType unit_type, CUnit *a2);
int CanWeaponTargetUnit(WeaponType weaponId, CUnit *target, CUnit *attacker);
unsigned int getUpgradedWpnCooldown(WeaponType a1, CUnit *a2);
int getUpgradedDamageAmtForGUI(int weapon_type, CUnit *a2);
int getUnitDamageBonus(CUnit *a1, WeaponType weapon_type);
int getDamageAmtForGUI(CUnit *a1, int weapon_type);
extern int (__stdcall*sub_475F50)(int, int);
char GetUnitAckRangeUpgrade(CUnit *a1);
extern signed int (__thiscall*AI_UnitCanAttack)(CUnit *this_);
int getUnitMissChance(CUnit *a1);
extern int (__stdcall*sub_4762C0)(int, int, int);
extern int(*isTargetWithinMinMovementRange)();
signed int isUnitTargetOutOfMaxRange(CUnit *a1, CUnit *a2);
int isUnitTargetInsideMinRange(CUnit *unit, CUnit *target);
void IgnoreAllScriptAndGotoIdle(CUnit *a1);
unsigned int weaponBehaviourCanHitTargetCheck(CUnit *target, CUnit *attacker);
extern int(*sub_476610)();
signed int sub_476640(CUnit *a1, WeaponType weapon_type);
extern int(*sub_4766F0)();
signed int unitCanAttackTarget(CUnit *a1, CUnit *a2, int a3);
int isUnitInWeaponRange(CUnit *a1, CUnit *a2);
signed int isBunkerBusy(int a1, CUnit *a2);
BOOL IsBetterTarget_maybe(CUnit *old_target, CUnit *unit, CUnit *new_target);
__int64 sub_476A50(CUnit *a1, CUnit *a2);
BOOL sub_476C50(CUnit *a1, CUnit *a2);
signed int doWeaponIscript(CUnit *a1, WeaponType a2, int a3, Anims a4);
void sub_476D30(CUnit *a1);
void AskForHelp(CUnit *enemy, CUnit *unit);
CUnit *getWeaponBeginIscript(CUnit *result, Anims a2);
int SetAttackTarget(CUnit *a1, CUnit *a2, int a3, int a4);
extern int(*sub_4770E0)();
extern signed int (__thiscall*AI_AggressiveUnitTask)(CUnit *this_, int a2, int a3, signed int a4);
extern void (__thiscall*holdPositionProc)(CUnit *this_, CUnit *a2);
void ReactToHit(CUnit *attacker, CUnit *target);
int orders_TurretGuard(CUnit *a1);
char orders_TurretAttack(CUnit *a1);
char orders_AttackFixedRange(CUnit *a1, int a2);
extern int (__stdcall*sub_477F10)(int);
void appyBunkerWeaponAnimation(CUnit *a1);
char orders_Patrol(CUnit *a1, CUnit *a2);
BOOL sub_478370(CUnit *a1, int a2, Order a3);
signed int OrderAttackBehaviour(CUnit *unit);
char orders_SapUnit(CUnit *a1);
char orders_SapLocation(CUnit *a1, int a2);
bool attackApplyCooldown(CUnit *a1);
char orders_AttackMoveEP(CUnit *a1);
char orders_HarassMove(CUnit *a1, int a2);
char orders_AttackMove(CUnit *a1);
extern char (__stdcall*orders_NukeGround)(CUnit *a1);
extern int (__stdcall*BWFXN_KillUnitTarget)(CUnit *a1);
void DoWeaponHit(CUnit *target, CUnit *attacker, int show_attacker);
int attackOverlayAndNotify(CUnit *a1, CUnit *a2, unsigned __int8 weapon_type, char a4);
void DamageUnitHp(s32 a1, CUnit *a2, CUnit *a3, int player_id, int a5);
unsigned int DoWeaponDamage(unsigned int result, CUnit *a2, WeaponType weapon_type, unsigned int a4, char a5, CUnit *a6, int a7);
int WeaponBulletShot(CBullet *bullet, CUnit *target, unsigned int dmg_divide);
void ISCRIPT_AttackMelee(CUnit *a1);
int orders_AttackUnit(CUnit *a1);
void ISCRIPT_UseWeapon(CUnit *a1, WeaponType weapon_type);
void FireUnitWeapon(CUnit *unit, u8 weapon_id);
void ISCRIPT_CastSpell(CUnit *a1, int weapon_id);
void ISCRIPT_AttackWith(CUnit *attacker, bool is_ground_weapon);
extern int (__stdcall*sub_479DD0)(__int16, __int16);
extern int (__stdcall*sub_479E00)(__int16, __int16);
extern int(*sub_479E30)();
extern int(*nullsub_35)();
extern int(*minorUnpackSharedSaveData)();
int minorPackSharedSaveData(CBullet *a1);
extern int (__stdcall*sub_479F70)(int, int);
extern int(*unitOrderMoveToTargetUnitResetOrderState)();
extern int(*unitOrderMoveToTargetUnit)();
CSprite *sub_47A010(char a1, __int16 a2, char player_id, CUnit *unit, FlingyID flingy_id, int a6);
extern int(*nullsub_36)();
extern int(*image_Insert)();
extern int(*sub_47A090)();
extern int(*sub_47A0B0)();
extern int(*sub_47A0F0)();
extern int (__stdcall*sub_47A120)(int, int, int);
extern int (__stdcall*sub_47A350)(int, int, int, int, int);
extern int (__stdcall*sub_47A4E0)(int, int, int, int, int);
extern int (__stdcall*sub_47A670)(int);
extern int (__stdcall*sub_47A6E0)(int);
extern int (__stdcall*sub_47A750)(int);
extern int(*sub_47A7C0)();
extern int(*sub_47A7E0)();
extern int(*sub_47A800)();
extern __int16 (__fastcall*imageRenderFxn11_0)(int a1, int a2, int a3, int a4, CUnit *a5);
extern int(*sub_47AAC0)();
extern int (__stdcall*sub_47AAF0)(int);
void sub_47AB40(LO_Overlays *a1, signed int a2);
extern int(*sub_47ABB0)();
void *readImageFile_lowMem(int *grp_file_arr, unsigned __int16 *images_tbl, int image_id, int a4, int a5, _DWORD *a6);
void *readImageFile(int overlay_index, unsigned __int16 *a2, int image_id, HANDLE hFile, int a5, _DWORD *a6);
extern int (__stdcall*loadImagesData_lowMem)(int, int, int, int, int, int);
extern int (__stdcall*loadImagesData)(int, int, int, int, int, int);
extern int(*unit_isRefineryUnit)();
extern int(*sub_47B000)();
extern int(*sub_47B030)();
extern int(*unitIsFloorTrap)();
extern char *(__fastcall*getUnitNameStatString)(UnitType unit_type);
extern int(*sub_47B0F0)();
extern int(*sub_47B120)();
char unitGetRace(CUnit *a1);
u32 UpdateHPGain(CUnit *a1);
extern int(*CUnitToUnitID)();
CUnit *unitIDtoUnitMemFast(CUnit *a1);
extern int(*unitIDtoCUnit)();
UnitType getLastQueueSlotType(CUnit *a1);
extern int(*sub_47B2C0)();
BOOL Unit_IsFactoryBuilding(CUnit *a1);
extern int (__stdcall*increaseUpgradeLevel)(int, __int16, char, char);
extern int (__stdcall*researchTech)(int, __int16, char, char);
BOOL BWFXN_IsCritter(CUnit *a1);
BOOL UnitIsRescuableOrUnknown0(CUnit *a1);
__int16 Thg2SpecialDIsableUnit(CUnit *a1);
extern const char *(__thiscall*UnitGetName)(CUnit *this_);
unsigned int GetModifiedUnitSpeed(unsigned int result, CUnit *a2);
extern int(*sub_47B660)();
char updateBuildingConstructShieldsAmount(CUnit *a1);
char hasOverlay(CUnit *a1);
extern int(*unitIsEnemy)();
extern BOOL (__thiscall*unit_IsStandardAndMovable)(CUnit *this_);
int unitLurkerIsNotIdle(CUnit *a1);
extern unsigned int (__thiscall*getModifiedUnitTurnRadius)(CUnit *this_);
extern unsigned int (__thiscall*getModifiedUnitAcceleration)(CUnit *this_);
extern int (__fastcall*GetUnitSpeed)(int a1, CUnit *a2);
extern int(*isUnitEnemyOf)();
void DisableDoodadState(CUnit *a1);
void EnableDoodadState(CUnit *a1);
int orders_WatchTarget(CUnit *a1);
void ToggleDoodadState(CUnit *a1);
char orders_CloseDoor(CUnit *a1);
char orders_OpenDoor(CUnit *a1);
char orders_HideTrap(CUnit *a1, int a2);
char orders_JunkYardDog(CUnit *a1);
int orders_Critter(CUnit *a1);
char orders_StayInRange(CUnit *a1);
void GiveAllUnitPropertiesToPlayerAndMakeIdle(CUnit *a1, int a2);
char GiveUnitToNeutral(CUnit *a1, int a2);
extern int(*nullsub_37)();
extern int(*sub_47CC20)();
extern int(*sub_47CC30)();
extern int(*sub_47CC40)();
extern int(*CMDACT_GameHash)();
extern int(*saveMinimapCounts)();
extern int (__stdcall*GameHash)(int);
extern int(*CreateResourcesHash)();
extern int(*sub_47CDA0)();
extern int(*CMD_GameHash)();
extern int(*CreateMaskHash)();
extern int(*sub_47CE90)();
extern int(*CreateUnitsHash)();
extern int(*CreateHash)();
extern int(*UpdateGameHash)();
extern int(*resetGameValues)();
extern int(*nullsub_38)();
extern int(*nullsub_39)();
extern int(*nullsub_40)();
extern int(*nullsub_41)();
extern int(*nullsub_42)();
extern int(*nullsub_43)();
extern int(*nullsub_2)();
extern int(*sub_47D180)();
extern int(*sub_47D190)();
extern int(*sub_47D1B0)();
extern int(*sub_47D1E0)();
extern int (__stdcall*isTileVisible)(int, int);
extern int (__stdcall*isCreepCovered)(int, int);
extern int(*sub_47D2C0)();
extern int(*sub_47D300)();
extern int(*sub_47D320)();
extern int(*sub_47D370)();
extern int(*sub_47D3C0)();
extern int(*sub_47D400)();
extern int(*sub_47D460)();
extern int(*sub_47D500)();
extern int(*sub_47D540)();
extern int(*sub_47D5F0)();
extern int(*sub_47D660)();
extern int(*sub_47D730)();
extern int (__stdcall*sub_47D770)(CUnit *a1);
extern int (__stdcall*sub_47D860)(int, int, CUnit *);
extern int(*sub_47D920)();
extern char (__stdcall*RecheckSurrondingCreepDisappearance)(int x, int y);
extern int (__stdcall*sub_47DD60)(int);
signed int sub_47DE40(int a1, int a2, int eax0, UnitType a3);
extern signed int (__stdcall*sub_47DF90)(CUnit *a1);
extern int (__stdcall*sub_47E100)(int);
extern char (__stdcall*sub_47E2D0)(int x, int y, int a3, unsigned __int16 a4, int a5);
extern int(*InitializeRandomizerInfo)();
extern int (__thiscall*sub_47E440)(dialog *this_);
extern void (__fastcall*sub_47E480)(dialog *a1, int a2);
extern void (__fastcall*sub_47E590)(dialog *dlg, int x, int y, rect *dst);
void *sub_47E630(dialog *a1, dlgEvent *a2);
extern unsigned int (__fastcall*tips_PrevNext)(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*tips_ShowAtStartup)(dialog *dlg, dlgEvent *evt);
char tips_BinDLG_CustomCtrlID(dialog *a1);
extern bool (__fastcall*TIPS_BINDLG)(dialog *dlg, dlgEvent *evt);
void loadTips_BINDLG(int a1);
extern int(*sub_47EA50)();
extern int (__stdcall*sub_47EA60)(int, int);
extern int(*GetScrollSpeed)();
extern int(*CenterCursorGameScreen)();
void assignCenterViewProc(int a1, int a2, int (*a3)(void));
extern int(*sub_47EBB0)();
extern int(*sub_47EBC0)();
extern int(*refreshStars)();
extern int(*drawStars)();
extern int(*getScreenMoveState)();
extern int(*PollInput)();
extern int(*loadParallaxStarGfx)();
extern int (__thiscall*getLastWhisperPlayerIDIfStrEqual)(size_t, char *, int);
extern int (__fastcall*verifyChatCommand)(size_t, char *, int, int);
extern int(*sub_47F580)();
extern int(*LeagueChatFilter)();
extern int (__stdcall*AUTBNETMESSAGE)(int);
extern void (__stdcall*BWFXN_GlobalPrintText)(s_evt *evt);
extern int (__stdcall*sendWhisper)(char *source);
extern signed int (__stdcall*chatCommandFilter)(char *text);
extern int(*maskSomething0)();
extern int(*maskSomething2)();
extern int (__stdcall*fogGraphicSomething)(int, int, int);
extern int(*fogGraphicSomething_0)();
extern int(*ResetFogSomething)();
extern u32 (__fastcall*gndSightCB_Edge)(int megatile_x, int megatile_y, SightStruct *a3, MegatileFlags *a4, MegatileFlags a5, int a6);
extern int (__fastcall*gndSightCB_Inside)(int a1, int a2, SightStruct *a3, MegatileFlags *a4, unsigned int a5, MegatileFlags a6);
extern _DWORD *(__fastcall*airSightCB_Edge)(int megatile_x, int megatile_y, SightStruct *a3, MegatileFlags *a4, int a5, int a6);
extern int (__fastcall*airSightCB_Inside)(int a1, int a2, SightStruct *a3, MegatileFlags *a4, unsigned int a5, MegatileFlags a6);
extern int(*DestroyFogSightData)();
extern int(*sub_480410)();
extern int(*sub_480430)();
extern int(*j_maskSomething2)();
extern int(*maskSomething1)();
extern int(*sub_4805D0)();
extern int (__stdcall*updateFog)(int, int);
int revealSightAtLocation(int sight_range, unsigned int vision_mask, signed int x, signed int y, int reveal_from_air);
extern int(*sub_4807F0)();
extern int(*RemoveFoWCheat)();
extern int(*updateAllFog)();
extern int(*sub_480960)();
extern int (__stdcall*GetKeyRandomizerSequence)(int);
extern void (__thiscall*saveColorSettings)(bool exit_code);
extern int (__thiscall*sub_480AE0)(dialog *this_);
extern int(*sub_480B20)();
extern int(*sub_480B30)();
void sub_480B90(dialog *a1);
int sub_480BD0(dialog *a1);
extern int(*loadColorSettings)();
void video_Cancel(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*video_PortraitRadioBtns)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*video_CCyclingCheckbox)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*video_GammaSlider)(dialog *dlg, dlgEvent *evt);
void video_CustomCTRLID(dialog *a1);
void video_Main(dialog *a1);
void video_OK(dialog *a1);
extern bool (__fastcall*video_BINDLG_Main)(dialog *dlg, dlgEvent *evt);
extern void (__cdecl*sub_481060)();
extern void (__thiscall*DestroyHelpContext)(bool exit_code);
extern int (__stdcall*ContextHelpUpdateProc)(int, int);
extern int (__stdcall*sub_481160)(Bitmap *a1);
extern int (__stdcall*BitContextHelpSurface)(int);
extern int (__stdcall*sub_481260)(int, __int16);
extern int(*sub_481310)();
extern int(*sub_481320)();
extern int(*CreateHelpContext)();
extern int(*refreshSelectionScreenEx)();
extern int(*refreshSelectionScreen)();
int CreateContextHelp(int a1, int a2, char *a3);
extern int(*sub_481690)();
extern int (__stdcall*md5_ctx_init)(int);
extern int (__stdcall*DecryptKey)(int);
extern void (__thiscall*SaveCPUThrottleOption)(bool exit_code);
extern int(*speedOptnsScreenScrollSliders)();
u32 createUpdateSpdOptionsScrollers(dialog *a1);
extern int(*sub_481CF0)();
bool destroySpdDlg(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*spd_speedSlider)(dialog *dlg, struct dlgEvent *evt);
extern bool (__fastcall*spd_CPUThrottleCheckbox)(dialog *dlg, dlgEvent *evt);
extern int(*sub_481E60)();
extern int(*copyOptionsInfoToDialog)();
int *CMDACT_GameSpeed(dialog *a1);
extern bool (__fastcall*spd_dlg_Interact)(dialog *dlg, dlgEvent *evt);
extern void(*sub_482070)();
extern int (__stdcall*SAI_PathCreate_Sub3_1_1_0_0)(int);
char *SAI_PathCreate_Sub3_1_1_1(SAI_Paths *a1, SaiRegion *a2);
extern signed int (__stdcall*SAI_PathCreate_Sub3_1_1_0)(SAI_Paths *a1, int a2, SaiRegion *a3);
int SAI_PathCreate_Sub3_1_1(SAI_Paths *a1);
extern int (__stdcall*sub_482890)(int);
int SAI_PathCreate_Sub3_1_0(SAI_Paths *a1);
extern int(*sub_482A80)();
extern int (__stdcall*SAI_PathCreate_Sub3_0_2)(int, int, __int16);
extern int (__stdcall*SAI_PathCreate_Sub3_0_1)(int);
extern int(*sub_482CC0)();
extern int (__fastcall*SAI_PathCreate_Sub3_1_2_0)(SAI_Paths *a1, int a2, int a3);
int SAI_CreateRegionGroupings(SAI_Paths *a1);
extern void (__stdcall*SAI_PathCreate_Sub3_2)(SAI_Paths *a1);
extern void (__stdcall*SAI_PathCreate_Sub3_3)(SAI_Paths *a1);
int SAI_PathCreate_Sub5(SaiRegion *a1);
extern void (__cdecl*FreeSAI_Paths)();
extern void (__cdecl*AllocateSAI_Paths)();
extern int(*SAI_PathCreate_Sub3_4)();
extern int (__stdcall*SAI_PathCreate_Sub3_0_0)(int, int, __int16);
int SAI_PathCreate_Sub3_1(int a1, SAI_Paths *a2);
extern int(*sub_483BD0)();
extern __int16 (__thiscall*CreateUIUnreachableRegion)(SAI_Paths *this_);
int SAI_PathCreate_Sub1(MegatileFlags *a1);
extern void (__cdecl*freeSaiPaths)();
int SAI_PathCreate_Sub3_0(SAI_Paths *a1, int a2, DWORD dwProcessId);
int SAI_PathCreate_Sub3(PathCreateRelated *a1, SAI_Paths *a2);
extern int (__stdcall*SAI_PathCreate)(MegatileFlags *a1);
extern void (__thiscall*nullsub_3)(dlgEvent *);
extern int(*saveScreenLocation)();
extern void (__thiscall*input_Game_LeftMouseBtnDwn)(dlgEvent *);
extern void (__thiscall*_input_Game_Idle)(dlgEvent *);
extern void (__thiscall*input_Game_MiddleMouseBtnUp)(dlgEvent *);
extern int (__stdcall*resetGameInputProcs)(__int16);
extern void (__thiscall*input_MiddleBtnScreenMove_MouseMove)(dlgEvent *);
extern int(*recallScreenLocation)();
extern void (__thiscall*input_Game_MiddleMouseBtnDwn)(dlgEvent *);
extern void (__thiscall*input_standardSysHotkeys)(dlgEvent *this_);
extern void (__thiscall*input_targetOrder_RightMouseClick)(dlgEvent *);
extern void (__thiscall*input_placeBuilding_RightMouseClick)(dlgEvent *);
extern void (__thiscall*input_Game_RightMouseBtnDwn)(dlgEvent *);
extern void (__thiscall*input_Game_UserKeyPress)(dlgEvent *);
extern void (__thiscall*CMDACT_Hotkey)(dlgEvent *);
extern void(*SetInGameInputProcs)();
extern int(*sub_484D90)();
extern int(*getPlayerCountInForce)();
extern int(*sub_484DF0)();
extern int(*sub_484E20)();
extern int(*sub_484E50)();
extern int(*sub_484E80)();
extern int(*sub_484E90)();
extern int(*sub_484EF0)();
extern int(*sub_484F20)();
extern int(*gameIsTeamGame)();
extern int (__stdcall*GetMainPlayerForTeam)(char);
char getOpenObsPlayerCount(char a1);
unsigned int getNextActivePlayer(unsigned int *a1);
extern int(*getTeamString)();
extern int(*sub_485130)();
extern int(*randomizeTeamGame)();
extern int(*sub_4855E0)();
extern int(*illegalTeamCheck)();
extern int (__stdcall*sub_4857B0)(char);
extern int(*sub_485820)();
extern int(*sub_485860)();
extern int(*sub_4858B0)();
extern int(*sub_485900)();
extern int(*sub_485920)();
extern int(*sub_485930)();
extern int (__stdcall*isStringValid)(int, int);
extern void (__cdecl*BWFXN_sendTurn)();
extern int(*GameKeepAlive)();
void newGame(int is_in_game);
extern int(*BWFXN_QueueCommand)();
extern int(*sub_485C70)();
extern int(*sub_485CC0)();
extern int (__stdcall*sub_485CE0)(char);
extern int (__stdcall*SendTextMessage)(int player, int a2, int);
void CMDRECV_SetLatency(int a1);
extern int (__stdcall*SendTextMessagePrivate)(int);
extern int (__stdcall*SendTextMessagePublic)(int);
extern void (__cdecl*RecvMessage)();
extern int (__stdcall*LOBBYCLASS2_RECV)(int, int playerid);
extern int(*Cls2RecvFrom)();
extern int(*RecvSaveTurns)();
extern int(*ParseGameRecvInfo)();
extern int(*gameLoopTurns)();
extern int(*replayLoop)();
extern int(*BriefingLoopTurns)();
extern int(*nullsub_44)();
extern int(*sub_4872B0)();
extern int(*sub_4872C0)();
extern int(*isValid)();
extern int(*isNull)();
extern int(*sub_4872F0)();
extern int(*sub_487310)();
int sub_487320(int result);
extern int(*sub_487330)();
extern int(*sub_487340)();
extern int (__stdcall*sub_487350)(int);
extern int (__stdcall*sub_4873E0)(int);
int *initializeThingyArray(unsigned __int16 count, CThingy **a2, CThingy **a3, CThingy *a4, int (__thiscall *a5)(void *));
extern int(*packThingyData)();
extern int(*unpackThingyData)();
extern int (__stdcall*sub_487690)(CThingy *a1);
bool isThingyOnMap(signed int a1, signed int a2, CThingy *a3);
void sub_4878F0(CThingy *a1);
extern void (__cdecl*initializeThingyArrays)();
CThingy *sub_487A10(int a1, int a2);
extern int (__fastcall*sub_487A90)(CUnit *a1, __int16 a2);
extern int (__stdcall*getPlacementRestrictionsFromSpriteID)(int, int, int);
extern int (__stdcall*sub_487C70)(int, int, int, int);
extern int(*CThingyIsVisible)();
extern int(*sub_487D90)();
extern int (__fastcall*readThingyArray)(int a1, int a2, FILE *a3, CThingy *a4, int a5);
extern int (__stdcall*writeThingys)(FILE *a1, CThingy *a2, __int16 a3);
extern int (__stdcall*sub_487FD0)(__int16);
void sub_488020(CThingy *a1, MenuPosition a2);
extern void (__cdecl*BWFXN_drawAllThingys)();
BOOL sub_4881E0(char player_id, int a2, int position_x, int a4, unsigned __int16 position_y);
CThingy *CreateThingy(int sprite_id, int position_x, unsigned __int16 position_y, char playerID);
extern int(*sub_488310)();
int sub_488350(_DWORD a1);
extern int (__stdcall*sub_488410)(__int16 a1, CSprite *a2);
void updateThingys(MenuPosition a1);
extern void (__cdecl*InitializeThingyArray)();
void GroundAttackInit(__int16 a1, __int16 a2);
extern int(*sub_4886E0)();
extern int(*sub_4886F0)();
extern int(*sub_488710)();
extern int(*sub_488750)();
extern int(*isSinglePaused)();
extern int(*BWFXN_IsPaused)();
extern void (__stdcall*TickCountSomething)(int a1);
extern void(*PauseGame_maybe)(void);
extern int(*sub_488880)();
extern int(*sub_4888A0)();
extern int(*getSuppliesUsed)();
extern int(*getSuppliesAvailable)();
extern int(*sub_488960)();
extern int(*getSuppliesMax)();
extern int(*getSuppliesRemaining)();
void incrementUnitDeathScores(unsigned int player_id, CUnit *a2);
void incrementUnitScores(CUnit *a1, int a2);
void incrementUnitScoresEx(int a1, CUnit *a2, int a3);
extern int(*sub_488F50)();
extern int(*sub_488F60)();
extern int(*sub_488F70)();
extern int(*sub_488F80)();
extern void (__cdecl*InitializeUnitCounts)();
extern int(*nullsub_45)();
extern int(*nullsub_46)();
extern int(*sub_4890F0)();
extern int(*sub_489100)();
extern int(*sub_489110)();
extern int(*sub_489120)();
char ExecuteTriggerActions(TriggerListEntry *a1);
signed int ExecuteTriggerConditions(TriggerListEntry *a1);
extern int(*sub_489250)();
extern int(*sub_489270)();
extern int(*sub_489280)();
extern int(*sub_489290)();
extern int(*sub_4892A0)();
extern int(*sub_4892B0)();
extern int(*sub_4892C0)();
extern int(*sub_4892D0)();
extern int(*sub_4892E0)();
extern int(*sub_4892F0)();
char GetEndgameState(int player);
void SetEndgameState(int player, EndgameState new_endgame_state);
extern int(*sub_489330)();
extern int(*isPlayerIDValidForScoreChange)();
extern int(*nullsub_47)();
extern int(*sub_4893A0)();
extern int(*resetTriggerProperties)();
extern int(*sub_489410)();
extern int(*TimerTick)();
void executeGameTrigger(TriggerList *a1);
extern int(*defCenterViewProc)(void);
extern signed int (__stdcall*AddGameTrigger)(Trigger *a1);
extern int(*setTriggerPlayerActivityState)();
extern int (__stdcall*ReadTriggerNodeData)(FILE *);
extern int (__stdcall*WriteTriggerData)(FILE *);
extern int(*initializeTriggerInfo)();
extern int(*UpdateCountdownTimer)();
void countdownTimersExecute(unsigned int a2);
extern void(*keyPress_Escape)();
extern void(*AnnouncePlayerEliminated)();
extern int(*ApplyPlayerLeftRoutine)();
extern int (__stdcall*Game_PlayerDropped)(int);
extern int (__stdcall*Game_PlayerLeft)(int);
extern int(*endgameCheck)();
extern void (__cdecl*load_endmission)();
extern char (__stdcall*BWFXN_ExecuteGameTriggers)(signed int dwMillisecondsPerFrame);
CBullet *sub_48A530(CBullet *result);
extern int(*sub_48A550)();
void BulletBehaviour_Instant(CBullet *bullet);
void j_BulletBehaviour_ReAssign(CBullet *a1, CUnit *a2, int a3);
extern int(*sub_48A610)();
extern int(*sub_48A650)();
extern int(*sub_48A670)();
extern int(*nullsub_48)();
extern void (__cdecl*InitializeBulletArray)();
extern int(*nullsub_49)();
extern int(*reorderBulletArrayReferences)();
extern int (__stdcall*unpackBulletData)(int);
int packBulletData(CBullet *a1, int a2);
void assignWpnData(CBullet *result, BulletState a2);
extern CBullet *(__thiscall*BWFXN_clearUnitTarget)(CUnit *this_);
extern int(*sub_48ACA0)();
int GetUnitBulletDamage(CUnit *a1, CBullet *a2);
extern BOOL (__thiscall*isUnitDistanceWithin)(CUnit *this_, CBullet *a2, unsigned int splash_radius);
extern int (__stdcall*ReadBulletsArray)(__int16);
extern int (__stdcall*WriteBullets)(FILE *);
extern int (__thiscall*FindNextBounceTargetProc)(CUnit *this_);
extern signed int (__fastcall*AirSplashProc)(CUnit *a1, CBullet *a2);
CUnit *FindNextBounceTarget(CBullet *a1);
int ProgressBulletMovement(CBullet *a1);
void BulletBehaviour_Bounce(CBullet *a1);
void BulletBehaviour_Fly(CBullet *a1);
char BulletBehaviour_Area(CBullet *a1);
void BulletBehaviour_Follow(CBullet *a1);
int Splash(CBullet *a1, CUnit *a2);
extern int (__fastcall*SplashProc)(CUnit *a1, CBullet *a2);
extern int (__fastcall*AirSplashProc2)(_DWORD, _DWORD);
extern int (__fastcall*LurkerSplashProc)(_DWORD, _DWORD);
extern void (__stdcall*CBullet_Damage)(CBullet *a1);
extern void (__thiscall*BulletBehaviour_Persist)(CBullet *this_);
void BulletBehaviour_ReAssign(CBullet *a1);
signed int InitializeBullet(CUnit *a1, __int16 a2, char player_id, CBullet *a4, int weapon_type, int a6, int a7);
CBullet *CreateBullet(CUnit *a1, int weapon_id, int a3, __int16 a4, char a5, int a6);
extern int(*ImageDrawingBulletDrawing)();
extern int(*sub_48C4A0)();
extern int(*sub_48C4B0)();
extern int(*sub_48C4D0)();
extern COrder *(__fastcall*createOrder)(Order a1, u16 a2, Position a3, struct CUnit *a4);
extern void (__cdecl*InitializeOrderArray)();
extern int(*sub_48C720)();
extern int(*nullsub_50)();
extern int(*sub_48C740)();
extern int(*unpackOrderData)();
extern int(*packOrderData)();
extern int(*sub_48C9F0)();
extern int(*sub_48CA00)();
extern void (__cdecl*CancelTargetOrder)();
extern int (__stdcall*sub_48CA90)(int, __int16);
extern int (__stdcall*sub_48CAC0)(int);
extern void (__cdecl*j_CancelTargetOrder)();
extern int(*issueTriTargetOrder)();
extern int(*sub_48CB50)();
extern int(*nullsub_51)();
void updateTextDisplay(signed int line_number);
extern void (__cdecl*refreshGameTextIfCounterActive)();
void setUnitStatTxtErrorMsg(char *message);
extern void (__cdecl*refreshGameTextIfFlagIsSet)();
void PrintText(const char *text, u8 color, int tick_count, char flags);
extern int(*resetTextAndLineData)();
void showStatTxtToPlayer(char *result, int player);
void createTextMessageWithTimer(const char *text_message, int display_time);
extern int(*sub_48CF40)();
extern int(*BWFXN_DrawHighTarget)();
int InfoMessage(int timeout_ms, char *text);
extern int (__stdcall*UnitPlacementError)(int);
void BWFXN_PrintText(int player, char *string, int replay_recorded_message);
extern int(*freePlaceboxBuffer)();
extern int(*sub_48D5A0)();
extern int(*sub_48D5B0)();
extern int (__stdcall*placebuildingUpdateProc)(int, int);
signed int InitPlacementBoxPos_maybe(int a2);
extern int(*sub_48D700)();
int getUnitPlaceboxSize(UnitType a1, int a2, int a3);
char sub_48D7B0(int a2);
extern int (__stdcall*sub_48D7F0)(int);
extern int(*sub_48D910)();
extern int(*placeBuildingMsg)();
extern int(*refreshLayer3And4)();
char sub_48DA30(UnitType a1);
extern int (__stdcall*sub_48DAF0)(int a1, UnitType a2);
extern int (__thiscall*CMDRECV_PlaceBuildingAllowed)(CUnit *a2);
extern int (__stdcall*sub_48DCD0)(int);
extern int(*UpdatePlacementStateForPlacementBox_maybe)();
extern int(*_PlaceBuildingAllowed)();
extern char (__fastcall*refreshScreen)();
void sub_48DE70(CUnit *a1, Order a2, int a3, UnitType a4);
extern int(*sub_48DFF0)();
extern void (__stdcall*cmdRECV_PlaceBuildingNormal)(int a1, Order a2, int unit_type);
extern int (__stdcall*cmdRECV_PlaceBuildingAddon)(int, int, int);
extern int (__stdcall*cmdRECV_PlaceBuilding)(int);
extern int(*placebuildingRefineryCheck)();
extern void (__stdcall*doPlacebuildingChecking)(CUnit *a1);
extern int(*refreshPlaceBuildingLocation)();
extern int(*placebuildingRefineryProc)();
extern void (__cdecl*placebuildingNormalProc)();
extern int (__stdcall*input_placeBuilding_Click_Notify)(char);
extern int(*sub_48E5A0)();
extern void (__thiscall*input_placeBuilding_LeftMouseClick)(dlgEvent *);
extern int (__stdcall*sub_48E640)(char);
extern int(*pracebuildingProc)();
extern int (__stdcall*issuePlacebuildingOrder)(char);
extern int(*getSfxPanFromXDistance)();
extern int(*sub_48E8C0)();
extern int(*getSfxVolumeFromScreenDistance)();
int rndGetSfxBetween(SfxData a1, SfxData a2);
extern int(*input_Game_Idle)();
extern int(*resetUnitAttackNotifyTimer)();
extern unsigned int (__fastcall*sub_48EA00)(SfxData a1);
SfxData getUnitPissSfxOrBldgWhatSfx(UnitType unit_type, int a2);
extern SfxData (__fastcall*GetRndYesSfx)(UnitType a1);
extern int(*resetAllUnitAttackNotifyTimersInRange)();
extern int(*unitCanPlaySFX)();
extern int(*sub_48EB90)();
extern int(*MuteUnitSpeech_maybe)();
extern int (__stdcall*playUnitSFX)(int, int, int);
int PlaySound(SfxData sfxId, CUnit *sourceUnit, int a3, signed int a4);
void ShowErrorMessageWithSfx(int playerId, __int16 statTxtId, SfxData sfxId);
extern int(*sub_48EEF0)();
void get_statTxt_Str_0(int player, CUnit *unit, int a3);
extern int(*playBuildPlacementSound_0)();
void playUpgradeCompleteSound(CUnit *a1);
void playResearchCompleteSound(CUnit *a1);
extern void (__stdcall*doAttackNotifyEvent)(CUnit *a1);
void PlayBuildingCompleteSound(CUnit *a1);
void playMorphingCompleteSound(CUnit *a1);
void PlayWorkerActionSound(CUnit *a1);
int *playBuildingLandSound(CUnit *a1);
void playBuildPlacementSound(CUnit *a1);
void PlayBuildingLiftoffSound(CUnit *a1);
extern char (__stdcall*selectBuildingSFX)(CUnit *a1);
extern void (__stdcall*LoadRaceSFX)(char a1);
extern int(*prepareMessageTeamFilter)();
extern int(*prepareMessageAllyFilter)();
void msgfltr_OK(dialog *result);
extern int (__stdcall*sub_490000)(int);
extern int(*sub_4900A0)();
u32 sub_4900C0(dialog *a1, int player_id);
char sub_490110(dialog *a1);
void sub_4901A0(dialog *a1, int player_id);
extern void (__fastcall*cbForceEntryUpdateFxn)(dialog *dlg, int x, int y, rect *dst);
void updateForceNamesAndCallbacks(dialog *a1, int player_id);
extern int (__thiscall*sub_490300)(dialog *this_);
extern void (__thiscall*sub_490570)(dialog *this_);
extern bool (__fastcall*allyfltr_VisionBox)(dialog *dlg, dlgEvent *evt);
char sub_4908E0(struct dlgEvent *a1, dialog *a2);
extern bool (__fastcall*allyfltr_AllianceBox)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*msgfltr_SendToText)(dialog *dlg, struct dlgEvent *evt);
char sub_490A50(dialog *a1);
extern bool (__fastcall*allyfltr_AllyVictoryBox)(dialog *dlg, dlgEvent *evt);
void AllyFltr_CustomCtrlID(dialog *a1);
extern int (__fastcall*msgfltr_EditBox)(dialog *dlg, struct dlgEvent *evt);
void msgfltr_MainBox(dialog *a1);
extern int(*sub_490E70)();
void sub_490E90(dialog *a1);
extern bool (__fastcall*msgfltr_Main)(dialog *dlg, dlgEvent *evt);
extern void(*sub_490FC0)();
void CMDACT_AllyVisionPair(int a1, dialog *a2);
extern bool (__fastcall*allyFltr_Main)(dialog *dlg, dlgEvent *evt);
extern void(*MinimapControl_ShowAllianceDialog)();
extern int(*sub_491450)();
CUnit *Unit__SpendEnergy(CUnit *result, __int16 energy);
extern int (__stdcall*Unit__HasEnergy)(int, __int16);
signed __int16 getSpecialOrderErrorStatstring(int tech, UnitType unit_type);
extern int(*sub_491520)();
extern int (__stdcall*writeBurrowedUnitIndex)(FILE *);
extern int(*sub_491670)();
extern int(*sub_4916A0)();
extern signed int (__thiscall*IsUnitCloaking)(CUnit *this_);
void secondaryOrd_Cloak(CUnit *result);
BOOL unitHasStatusEffect(CUnit *a1);
signed int BWFXN_GetMaxEnergy(CUnit *a1);
CImage *sub_491A30(CUnit *a1);
char getCloakingTech(CUnit *a1);
signed __int16 getCloakingSomething(CUnit *a1);
extern int (__fastcall*sub_491AE0)(int a1, CUnit *a2);
void ApplyCloakingOrder(CUnit *result);
extern int(*sub_491BF0)();
extern int(*GetDarkArchonEnergy)();
void secondaryOrd_CloakNearbyUnits(CUnit *a1);
extern int(*CanCastOrderedSpellNow)();
__int16 getTargetUnitAbilityErrorStatString(CUnit *a1, char player_id, int tech);
signed int getOrderTargetErrorString(Tech2 tech, CUnit *a2, UnitType a3, CUnit *a4, __int16 a5, int a6, int a7);
signed int canCastSpell_0(CUnit *a1);
int RemoveOverlaysBetween(unsigned int a1, CUnit *a2, unsigned int a3);
signed int SpellOrder_MoveTowardsTarget(int range, CUnit *a2);
extern int (__stdcall*OrderedSpell_ProgressMoving)(int);
signed int SpellOrder(int default_error_str, CUnit *a2, Tech2 tech, int a4, int a5);
char orders_Spell(CUnit *a1);
void EMPShockwaveHit(__int16 x, __int16 y, CUnit *attacker);
int FreezeUnit(CUnit *a1);
u8 ApplyUnitEffects(CUnit *a1);
extern int(*sub_492E80)();
extern int(*updateBurrowingCloakingUnits)();
char updateUnitStatusTimers(CUnit *a1, int a2);
CUnit *removeFromPsiProviderList(CUnit *result);
extern int(*sub_493160)();
extern int(*MergeUnitStatusEffects)();
extern int(*sub_493290)();
extern int(*sub_4932C0)();
void secondaryOrd_ShieldBatteryRecharging(CUnit *a1);
extern void(*initializePsiFieldData)(void);
extern int(*ApplyRechargeShields)();
signed int unitCanRechargeShields(CUnit *a1, CUnit *a2);
extern int(*RemoveAllPylonAuras)();
extern int(*createPylonAura)();
extern int (__stdcall*unitHasPower)(int, int, char);
extern void (__cdecl*updateUnitPower)();
extern int (__fastcall*orderAllMoveToRechargeShieldsProc)(CUnit *unit, CUnit *target);
char Orders_HarvestInterrupt(int a1, int a2, CUnit *a3);
char orders_RechargeShields2(CUnit *a1);
int orders_cloakNearbyUnits(CUnit *a1);
char orders_CompletingArchonSummon(CUnit *a1);
extern signed int (__thiscall*sub_493BF0)(CUnit *this_);
char PrepareUnitMoveClearRefs(CUnit *unit, bool hideUnit);
char orders_RechargeShields1(CUnit *a1);
char orders_InitPsiProvider(CUnit *a1);
extern int(*CreateAllPylonAuras)();
extern int(*hideAllPsiFields)();
void RefreshRevealUnitAfterMove(CUnit *unit);
void doRecallMoveUnit(CUnit *unit, CUnit *a2);
extern int (__fastcall*recallUnitsCB)(CUnit *a1, CUnit *a2);
extern void (__stdcall*orders_Recall)(CUnit *a1);
char orders_WarpingDarkArchon(CUnit *a1);
char orders_WarpingArchon(CUnit *a1);
extern int(*nullsub_52)();
extern int(*sub_494AC0)();
extern int(*sub_494AE0)();
extern int (__stdcall*sub_494B10)(int);
extern int(*sub_494B40)();
void AttackFlyToTarget(CBullet *bullet, int x, int y);
extern int(*setSecondaryWaypoint)();
extern int(*sub_494BD0)();
extern int(*sub_494BF0)();
int arctangent(int slope);
extern int(*sub_494C60)();
extern int (__stdcall*sub_494C70)(int);
extern int (__stdcall*packFlingyData)(int);
extern int(*initializeFlingyArray)();
extern int(*sub_494ED0)();
extern int(*sub_494F20)();
extern int (__fastcall*sub_494F60)(CFlingy *a1, int a2);
extern int (__thiscall*getFlingyHaltDistance)(CFlingy *this_);
extern int(*sub_494FE0)();
void ProgressMovementFlag(CUnit *result);
CUnit *Unit_MatchVelocityWithDirection(CUnit *result);
extern int(*SetUnitMovementSpeed)();
extern int(*sub_495200)();
CBullet *ChangeMovePos(CBullet *result, int y, int x);
extern int(*sub_495290)();
extern int(*sub_4952C0)();
signed int GetAngle(int x_start, int y_start, int x_end, int y_end);
extern int(*sub_495350)();
extern int(*packUnpackFlingyData)();
extern int(*sub_495400)();
char sub_495580(CUnit *a1);
extern int(*sub_495590)();
extern int(*AppearOnTarget)();
CUnit *uflunstableRandomize(CUnit *result);
int sub_4956C0(CUnit *a1);
extern int(*setResourceGatheringFlags)();
int Unit_AssignNextWP(CUnit *a1);
void sub_4958C0(CBullet *a1);
__int32 sub_495980(unsigned __int8 a1, int a2, CUnit *a3);
extern int(*sub_495A10)();
extern int (__stdcall*ReadFlingyArray)(FILE *);
extern int (__stdcall*WriteFlingys)(FILE *);
unsigned __int8 sub_495CB0(CFlingy *a1);
int sub_495E80(unsigned __int8 a1, CUnit *a2);
int sub_495EE0(CUnit *a1);
CUnit *turnUnit(CUnit *result, char a2);
void sub_495F90(CUnit *a1);
extern signed int (__stdcall*sub_496030)(CUnit *a1);
extern int(*sub_496140)();
extern int(*_turnGraphic)();
extern int(*sub_496190)();
signed int sub_4961B0(CUnit *a1);
void UpdateImage(CUnit *a1, int a2);
void UpdateImages(int a1);
CSprite *sub_496360(int flingyID, __int16 a2, int position_y, CUnit *a4, char a5, char a6);
CUnit *ISCRIPT_CreateFlingy(char a1, __int16 a2, int a3, FlingyID flingy_id);
extern int(*sub_496520)();
extern int(*sub_496560)();
extern int(*sub_4965A0)();
extern int (__stdcall*sub_4965D0)(int);
extern int(*sub_4967A0)();
extern int(*centerviewUnitGroup)();
extern int (__stdcall*sub_496940)(char);
extern int (__stdcall*selectUnitGroup)(char);
extern int (__stdcall*selectSingleUnitFromID)(int);
extern int(*sub_496E90)();
extern int(*nullsub_53)();
extern int(*sub_496EB0)();
extern int(*sub_496ED0)();
extern int (__stdcall*sub_496EE0)(int, int);
extern int(*clearUnitSprites)();
extern int(*sub_496F80)();
extern int(*sub_496FB0)();
extern int (__stdcall*sub_496FC0)(int, int);
extern int(*EnableVisibilityHashUpdate)();
extern int(*isImageRefreshable)();
extern int(*refreshImage)();
extern int (__stdcall*sub_4970F0)(int);
extern void (__cdecl*createUnitBuildingSpriteValidityArray)();
extern int(*initializeSpriteArray)();
extern int(*unpackSpriteData)();
extern void (__thiscall*packSpriteData)(CSprite *this_);
extern int(*sub_497400)();
void setAllImageGroupFlagsPal11(CSprite *a1);
CImage *getSpriteUnderlay(CSprite *a1, unsigned int a2, unsigned int a3);
char refreshAllVisibleImagesAtScreenPosition(CSprite *a1, char a2);
extern int(*refreshGrpImage)();
char removeSelectionCircleFromSprite(CSprite *a1);
extern char (__thiscall*removeSelectionCircle)(CSprite *this_);
char removeSelectionCircleAndHPBar(CSprite *a1);
extern int(*sub_497690)();
extern int(*sub_4976A0)();
extern int(*sub_4976B0)();
char refreshAllVisibleSprites(CSprite *a1);
extern int(*refreshCarryableSprite)();
extern int(*getSpriteRect)();
void playIdleIscript(CSprite *a1);
void spriteToIscriptLoop(CSprite *a1);
void sub_497A10(CSprite *a1, __int16 a2, signed __int16 a3);
extern int(*sub_497B20)();
int SpriteDestructor(CSprite *a1);
extern int(*sub_497C10)();
extern int(*UpdateVisibilityHash)();
extern int(*drawImage)();
extern int(*sub_497D60)();
extern int(*sub_497D80)();
extern int(*sub_497DA0)();
int setSpriteColoringData(CSprite *a1, unsigned __int8 a2);
signed int sub_497E10(CSprite *a1, int a2, int a3);
int updateSpriteFlagOnPalette(CSprite *a1);
void makeSpriteVisible(CSprite *a1);
extern int(*sub_497F80)();
extern int(*sub_497FA0)();
int sub_497FD0(char a1, CSprite *a2, unsigned __int8 a3, char a4);
int sub_4980F0(CSprite *a1);
extern int(*Sprite_SetVerticalOffset)();
char sub_498170(CSprite *a1);
extern int(*updateCarryableSpriteFlag)();
extern int (__stdcall*sub_498220)(int, int);
extern int (__stdcall*sub_498260)(int);
extern int (__stdcall*DoVisibilityUpdate)(int, int);
CSprite *refreshSpriteData(CSprite *result);
extern int(*sub_498450)();
extern int (__stdcall*unknownColorShiftSomething)(char);
extern int (__stdcall*ReadSpritesArray)(FILE *);
extern int (__stdcall*writeSprites)(FILE *);
extern int(*RemoveAllSelectionCircles)();
void sub_498A10(CSprite *a1);
void UpdateSpriteImagesForCloak(CSprite *a1);
CSprite *sub_498B20(CSprite *result, char a2);
void sub_498B50(CSprite *a1, unsigned __int8 a2);
extern int(*SetAllSpriteImageOverlaysDirection)();
int drawSprite(CSprite *a1);
void refreshImageRange(int result, unsigned int a2);
extern int(*BWFXN_updateImageData)();
extern void (__cdecl*BWFXN_drawAllSprites)();
CImage *sub_498D70(CSprite *a1, char a2, char a3, char a4);
CImage *CreateImageOverlay(CSprite *a1, char a2, char a3, char a4);
CImage *CreateOverlay(CSprite *a1, char a2, char a3, char a4);
CImage *sub_498F40(CSprite *a1, int a2, char a3, char a4, unsigned int a5);
signed int initSpriteData(unsigned __int16 a1, int a2, char a3, unsigned __int16 a4, CSprite *a5);
CSprite *createSprite(int a1, int position_x, unsigned __int16 position_y, char player_id);
extern CSprite *(__stdcall*sub_499210)(CSprite *a1);
CImage *sub_499380(CSprite *a1, int a2);
extern CImage *(__stdcall*CreateDamageOverlay)(CSprite *a1);
extern unsigned __int16 (__stdcall*CreateBuildingFlames)(CSprite *a1);
int CreateSpriteEx(int result, CSprite *a2, unsigned __int8 a3, int a4, int a5, char a6);
void sub_499730(CSprite *a1);
extern int (__stdcall*sub_499770)(int);
char sub_4997A0(int a1, CSprite *a2, int a3);
int CreateLandingDustOverlays(CSprite *a1);
int CreateLiftoffDustOverlays(CSprite *a1);
char sub_499860(CImage *a1, CSprite *a2);
extern void (__cdecl*InitializeSpriteArray)();
extern int (__stdcall*CreateDashedSelection)(int);
extern void (__cdecl*CreateAllSelectionCircles)();
char ReplaceSpriteOverlayImage(CSprite *a1, int a2, char a3);
extern void (__thiscall*playSpriteIscript)(CSprite *this_, Anims a2, int a3);
extern int(*sub_499D40)();
extern int (__stdcall*GameResultText)(int, int, int);
extern int(*sub_499E00)();
extern int(*GetLeagueTimestamp)();
int createLeagueFile(char *a1);
extern int (__stdcall*StoreString)(char *source);
extern int(*sub_49A060)();
extern int(*IsHumanPlayerOnSameTeam)();
extern int (__stdcall*sub_49A170)(int);
extern int(*nullsub_54)();
extern int(*isRgnIdNeighbor)();
extern int(*isSelectedUnitGroupEnabled)();
extern int(*sub_49A320)();
signed int compareUnitRank(int a1, CUnit *a2, CUnit *a3);
signed int sub_49A410(CUnit *a1, Order a2);
signed int sub_49A480(Order a1, CUnit *a2);
extern int (__stdcall*sub_49A500)(int, int);
extern int(*sub_49A740)();
extern int(*sub_49A7C0)();
signed int sub_49A7F0(CUnit *a1);
extern CUnit *(__cdecl*GetActivePlayerNextSelectionFunc)();
extern int(*sub_49A8B0)();
extern int (__stdcall*sub_49A8C0)(int);
extern char (__stdcall*sub_49AB00)(__int16 a1, __int16 a2, CUnit *a3, __int16 a4, Order a5, char a6);
void CreateNewUnitSelectionsFromList(CUnit **a1, int unit_count);
extern signed int (__stdcall*selectMultipleUnitsFromUnitList)(int a1, CUnit *a2, char a3, int a4);
extern int(*sub_49AF80)();
extern int (__stdcall*sub_49AFE0)(char);
extern int(*sub_49B010)();
extern int(*sub_49B020)();
extern int(*sub_49B030)();
extern int(*sub_49B050)();
extern int(*sub_49B060)();
extern int(*getColourID)();
extern int (__stdcall*setPlayerColours)(int);
extern int(*sub_49B1C0)();
char sub_49B1E0(CUnit *a1);
unsigned int sub_49B280(CUnit *a1);
char AI_CloakUnit(CUnit *a1);
extern int (__stdcall*sub_49B320)(char);
extern int (__stdcall*RandomizePlayerColours)(int);
unsigned int sub_49B410(CUnit *a1);
void DoCloak(CUnit *a1, SfxData sfx_id);
extern int(*initializePlayerColours)();
void PlaySoundFromDirect(CUnit *a1, SfxData sfx_id);
extern int(*sub_49B690)();
extern int(*setAlliance)();
extern int (__stdcall*sub_49B8D0)(int, int);
u8 drawMegatileImageData(int megatile, int framebuf_position, int x, int y);
extern int(*sub_49BB50)();
extern int(*sub_49BB90)();
extern int (__stdcall*sub_49BC20)(int x, int y, int a3, int a4);
extern int (__stdcall*UpdateTileCacheOnXScreenMovement)(int, int);
extern int (__stdcall*UpdateTileCacheOnYScreenMovement)(int, int);
extern int(*sub_49BF20)();
extern int(*sub_49BF70)();
extern int(*sub_49BFA0)();
extern int(*BWFXN_UpdateScreenPosition)();
extern int(*moveToXScrIncrease)();
extern int(*moveToXScrDecrease)();
extern int(*moveToYScrIncrease)();
extern int(*moveToYScrDecrease)();
char BWFXN_MoveScreen(unsigned int a1, unsigned int a2);
extern int(*updateActiveTileInfo)();
unsigned int drawScreenRowTiles(int a1, TileID *a2, MegatileFlags *a3, int a4, int a5);
extern int(*BWFXN_drawMapTiles)();
extern int(*sub_49C870)();
extern int (__stdcall*sub_49C890)(int);
extern int (__stdcall*getRegionNeighborsFromId)(int);
extern int(*sub_49C8F0)();
extern int(*sub_49C900)();
extern int(*sub_49C930)();
extern int(*sub_49C950)();
extern int(*sub_49C980)();
extern int (__stdcall*SAI_GetRegionIdFromPx)(int);
unsigned __int16 GetRegionIdAtPosEx(signed int x, signed int y);
extern int(*getRegionCenterFromId)();
extern int (__stdcall*getRegionCenterFromId2)(int, int);
extern int(*sub_49CAE0)();
extern int(*sub_49CB10)();
unsigned __int16 getRegionIdFromUnit(CUnit *a1);
BOOL HasPathToPos(CUnit *a1, signed int y, signed int x);
BOOL HasPathToTarget(CUnit *a1, CUnit *a2);
extern int(*sub_49CC10)();
extern int(*sub_49CC30)();
extern void (__cdecl*savePlayerSlotTypesAndRace)();
extern int(*sub_49CCA0)();
extern int (__fastcall*airTrainingProc)(CUnit *a1, CUnit *a2);
signed int sub_49CDC0(__int16 a1, __int16 a2, CUnit *a3, int a4, __int16 a5, __int16 a6, int a7);
bool CheckUnitCollisionPos(__int16 *move_area, CUnit *unit, Position *inPos, Position *outPos, bool hideErrorMsg, int flags);
extern int (__thiscall*SelfDestructCB)(CUnit *this_);
int sub_49D660(CUnit *a1);
extern void (__stdcall*CreateInitialOverlord)(unsigned __int8 player_index);
CUnit *CreateInitialMeleeWorker(Race race, unsigned __int8 player_index);
void CreateInitialMeleeBuildings(int race, unsigned __int8 player_index);
extern int(*CreateInitialTeamMeleeUnits)();
extern void (__cdecl*CreateInitialMeleeUnits)();
CUnit *sub_49DC20(CUnit *result);
CUnit *sub_49DC60(CUnit *result);
CUnit *CListPushBackUsedUnitEntry(CUnit *result);
CUnit *CListPushBackHiddenUnitEntry(CUnit *result);
CUnit *sub_49DD20(CUnit *result);
CUnit *sub_49DD60(CUnit *result);
CUnit *sub_49DDB0(CUnit *result);
CUnit *CListRemoveEmptyUnitEntry(CUnit *result);
CUnit *CListRemoveHiddenUnitEntry(CUnit *result);
CUnit *CListRemoveUsedUnitEntry(CUnit *result);
extern int (__stdcall*get_zero)(int, int, int);
CUnit *GetFirstPlayerUnit(int player_id);
extern int(*isUnitTypeAtPositionInBounds)();
extern int(*sub_49DF70)();
extern int(*sub_49DF80)();
extern int(*sub_49DF90)();
extern int(*sub_49DFA0)();
extern int(*sub_49DFB0)();
extern int(*sub_49DFC0)();
extern int(*sub_49DFD0)();
extern int(*sub_49DFE0)();
extern int(*sub_49DFF0)();
extern int(*sub_49E000)();
extern int(*ReassignTargetAcquisitionRange)();
u16 GetOrderEnergyCost(Order order);
extern int(*sub_49E1E0)();
extern int(*InitializeEmptyUnitsLinkedListRef)();
extern int(*sub_49E260)();
CUnit *sub_49E290(CUnit *result);
CUnit *sub_49E2D0(CUnit *result);
extern int(*uselessIterateUnitsAndOrdersDatLoadTables)();
CUnit *removeUnitFromList(CUnit *a1);
CUnit *sub_49E3F0(CUnit *result);
extern void (__fastcall*sub_49E4E0)(CUnit *a1, char player_id);
extern void (__stdcall*displayLastNetError)(unsigned __int8 player_id);
extern COrder *(__thiscall*sub_49E590)(CUnit *this_, CUnit *a2);
extern int (__stdcall*ReadUnitDataInfo)(FILE *, int);
extern int (__stdcall*ReadUnitDataInfoEx)(FILE *, int);
extern int (__stdcall*sub_49E8A0)(int);
CSprite *selectNewGUIUnitPortrait(int a1, CUnit *a2, CSprite *a3);
signed int sub_49EC30(CUnit *a1);
signed int sub_49ECF0(CUnit *a1, __int16 a2, UnitType unit_type, int a4, char a5);
int sub_49EF90(CUnit *a1);
extern char (__thiscall*sub_49EFA0)(CUnit *this_, int player_id, int a3);
int sub_49F170(CUnit *a1, UnitType a2);
extern void (__cdecl*resetOrdersUnitsDAT)();
char UnitDestructor_SpecialCases(CUnit *a1);
int sub_49F6A0(CUnit *a1, UnitType a2);
char sub_49F7A0(CUnit *a1);
int sub_49F860(CUnit *a1, UnitType a2);
int updateUnitStrengthAndApplyDefaultOrders(CUnit *a1);
void sub_49FD00(CUnit *result, CSprite *a2, int a3);
__int16 killAllLoadedUnits(CUnit *a1);
u8 replaceUnitWithType(CUnit *a1, UnitType a2);
signed int sub_4A0080(CUnit *a1);
void updateUnitStatsFinishBuilding(CUnit *a1);
signed int sub_4A0320(UnitType a1, CUnit *a2, int a3, __int16 a4, int a5);
CUnit *UnitConstructor(UnitType unit_type, int position_x, int position_y, int player_id);
int _UnitDestructor(CUnit *a1);
extern int (__thiscall*UnitDestructor)(CUnit *this_);
CUnit *CreateUnit(UnitType unit_type, int position_x, int position_y, int player_id);
extern int (__stdcall*AI_CreateUnit)(UnitType a0, int a4);
extern int(*sub_4A0E10)();
extern int (__stdcall*AI_Alliance)(char);
extern int(*sub_4A0EB0)();
extern int (__stdcall*getClosestEnemyUnitToRegionPlayer)(int, int, int);
extern int (__stdcall*sub_4A1060)(__int16);
extern int(*sub_4A10A0)();
extern int(*sub_4A10B0)();
signed int sub_4A10C0(CUnit *a1);
extern void(*j_calculateUnitStrengths)(void);
extern int(*SaveWriteAIData)();
int isTargetAIControlled(CUnit *a1, CUnit *a2);
extern int(*LoadGameAI)();
bool CanCastSpellOrder(CUnit *unit, Tech2 tech_id, Order order_id);
void AI_DecloakAfterNuke(CUnit *a1);
bool AiCastSpellOrder(CUnit *unit, CUnit *target, Order order, u8 aiActionFlag);
extern int(*sub_4A13B0)();
signed int AI_CastSpellBehaviour(CUnit *a1, int unknown_flag);
void orders_Neutral(CUnit *a1);
char orders_AIPatrol(CUnit *a1);
extern int(*RemoveAIControl)();
extern int(*sub_4A1EA0)();
char orders_RescuePassive(CUnit *a1);
extern int(*AI_SwitchRescue)();
extern int(*sub_4A2370)();
extern int (__stdcall*AI_Move_DT)(signed int y, signed int x);
signed int AI_UnitBehaviour(CUnit *a1);
void AI_TrainingUnit(CUnit *a1, CUnit *a2);
extern int(*sub_4A2AF0)();
extern int(*AI_Loop)();
extern int(*sub_4A2B20)();
extern int(*sub_4A2B60)();
extern int (__stdcall*sub_4A2B90)(int);
extern int(*sub_4A2BC0)();
extern int(*sub_4A2BD0)();
extern void(*TickCounterInit)(void);
extern int (__stdcall*randomizePlayerValues)(int);
extern int(*getElapsedGameTimeSeconds)();
void updateDropCountdownTimerTxt(dialog *a1);
extern int(*sub_4A2D40)();
extern int(*UpdateNetTimeoutPlayers)();
extern int(*updateCountdownDropTimer)();
extern int(*GetPlayerNames)();
extern int(*j_GetPlayerNames)();
extern int(*sub_4A3140)();
extern int(*dropTimerProc)();
extern bool (__fastcall*Timeout_BINDLG)(dialog *dlg, struct dlgEvent *evt);
extern void(*loadTimeoutDlg)();
extern int(*timeoutProcDropdown)();
extern void (__stdcall*MinimapPing_maybe)(unsigned __int16 pos_x, unsigned __int16 pos_y, char a3);
extern void (__fastcall*MiniMapUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__cdecl*CreateMinimapSurface)();
extern int(*sub_4A3790)();
extern int (__stdcall*sub_4A37A0)(int, int);
extern int(*sub_4A3870)();
extern int(*sub_4A39D0)();
extern int (__stdcall*sub_4A39E0)(int);
extern void (__cdecl*sub_4A3A00)();
extern void (__cdecl*minimapVisionUpdate_192_256)();
extern void (__cdecl*minimapVisionUpdate_96_128)();
extern void (__cdecl*minimapVisionUpdate_64)();
extern int(*sub_4A3D40)();
__int16 getMinimapCursorPos(int *a1, int *a2);
extern int(*sub_4A3E00)();
void killMinimapPreviewDlg(dialog *a1);
extern void(*minimapGameResetMouseInput)();
extern void (__fastcall*MinimapImageUpdate)(dialog *dlg, int x, int y, rect *dst);
void drawUnitBox(char color, unsigned int x, unsigned int y, unsigned __int8 a4, unsigned __int8 a5, char a6);
extern void (__cdecl*sub_4A4150)();
extern void (__cdecl*minimapSurfaceUpdate_192_256)();
extern void (__cdecl*minimapSurfaceUpdate_96_128)();
extern void (__cdecl*minimapSurfaceUpdate_64)();
extern void (__cdecl*setMapSizeConstants)();
extern void (__fastcall*drawMinimapUnitBox)(int player_id);
extern void(*drawMinimapUnitBox2)();
extern void(*drawAllMinimapUnitBoxes)();
extern int(*sub_4A49F0)();
extern int(*updateMinimapPositioninfoProc)();
extern int(*drawAllMinimapBoxes)();
extern int (__thiscall*drawShowHideTerrainContextHelp)(dialog *this_);
extern void(*sub_4A4CA0)();
extern int(*sub_4A4CB4)();
int minimapGameUpdate(dialog *a1);
void minimapGameMouseUpdate(dialog *a1, dialog *a2);
extern void(*Minimap_TimerRefresh)();
extern int(*updateMinimapSurfaceInfoProc)();
extern int(*updateMinimapSurfaceInfo2Proc)();
extern int(*playerInfoSomethingTvBProc)();
extern char (__thiscall*drawStatLBBtnsContextHelp)(dialog *this_);
extern void(*sub_4A51D0)();
extern int(*nullsub_70)();
extern int(*minimapPreviewUpdateState)();
void Minimap_InitVisionButton(dialog *a1);
extern int (__stdcall*MinimapGameRightclickEventMoveto)(int);
void MinimapGameClickEvent(dlgEvent *a1, dialog *a2);
void minimapPreviewMouseUpdate(dialog *a1, struct dlgEvent *a2);
char minimap_dlg_MouseMove(dialog *a1, struct dlgEvent *a2);
void minimap_dlg_Activate(dialog *a1);
extern unsigned int (__fastcall*MinimapButton_EventHandler)(dialog *a1, dlgEvent *a2);
void MinimapGameTargetOrder(dlgEvent *a1);
extern signed int (__fastcall*MinimapImageInteract)(dialog *dlg, dlgEvent *evt);
dialog *updateMinimapPreviewDlg(dialog *a1);
extern bool (__fastcall*MiniMapPreviewInteract)(dialog *dlg, dlgEvent *evt);
extern int(*load_gluMinimap)();
extern int(*load_MinimapPreview)();
extern int(*sub_4A5E30)();
extern int(*getMusicVolume)();
extern int(*stopMusic)();
extern void (__stdcall*FadeMusicProc)(HWND, UINT, UINT, DWORD);
extern int(*sub_4A60D0)();
extern int(*sub_4A6100)();
void PlayMusic(MusicTrack a1);
extern int(*playNextMusic)();
extern int(*playRadioFreeZerg)();
void DLGMusicFade(MusicTrack music_track);
extern int(*sub_4A6390)();
extern int (__stdcall*sub_4A63A0)(int, int, int);
int GetMapNameOrdering(const char *filename, char *other);
extern int(*sub_4A6580)();
void **mapEntry_Append(MapDirEntry *a1);
extern int (__stdcall*mapEntryAdd)(MapDirEntry *entry);
extern int(*cleanupBNListboxData)();
signed int sub_4A68D0(GameData *a1, unsigned __int8 game_speed);
extern int(*sub_4A6A00)();
LRESULT GetMapDirListIndex(const char *filename, LRESULT (__stdcall *a2)(LPARAM a1, LPARAM lParam, char a3));
int GetMapDirEntryInformation(MapDirEntry *entry, int a2);
extern int(*LoadRecentMapsCombobox)();
extern int (__stdcall*fileExt)(char);
MapDirEntry *save_Recent_Map_Data(MapDirEntry *result);
extern int (__stdcall*getMapListEntryCount)(int, int, char *);
extern int (__stdcall*sub_4A7540)(MapDirEntry *a1);
int FullyLoadMapDirEntry(MapDirEntry *a1);
void sub_4A79D0(MapDirEntry *a1);
int LoadReplayMapDirEntry(MapDirEntry *replay);
extern void (__stdcall*sub_4A7F50)(HWND, UINT, UINT, DWORD);
extern int(*sub_4A7FC0)();
signed int sub_4A8050(MapDirEntry *a1, char *source, int a3, unsigned int a4, unsigned __int8 a5, char *dest);
signed int LoadScenarioSingle(char *a1, int a2, const char *a3, unsigned __int8 game_speed);
extern int (__stdcall*sub_4A8710)(char *source);
int sub_4A8790(DWORD a1, CHAR *esi0, char *a2);
BOOL sub_4A8850(char *a1);
FILE *CreateCharacterFile(CharacterData *a1);
int LoadCharacterData(CharacterData *character_data, char *source);
FILE *verifyCharacterFile(CharacterData *a1, const char *player_name);
extern int (__stdcall*enumFiles)(int);
extern int(*sub_4A8B70)();
int getPlayerForce(unsigned __int8 player_id);
extern int(*sub_4A8BB0)();
extern int(*sub_4A8BC0)();
extern int(*sub_4A8BD0)();
extern int(*sub_4A8BF0)();
extern int(*sub_4A8C10)();
extern int(*sub_4A8C20)();
extern int(*sub_4A8C40)();
extern int(*sub_4A8C60)();
extern int(*sub_4A8C70)();
extern int(*sub_4A8CA0)();
extern int(*getOpenSlotCount)();
extern int(*getNumOpenSlots)();
extern int(*getComputerSlotCount)();
extern int(*initializeSlots)();
extern int(*sub_4A8DB0)();
extern int(*setAllValidPlayerOwnersToOpen)();
extern int(*sub_4A8E10)();
extern int(*sub_4A8E30)();
extern int (__stdcall*sub_4A8E50)(int);
extern int (__stdcall*sub_4A8F30)(int);
extern int(*sub_4A9010)();
extern int (__stdcall*sub_4A9130)(char);
extern int(*sub_4A91E0)();
extern int(*getTotalValidSlotCount)();
extern void (__cdecl*InitializeLoadedGameSlots)();
extern int (__stdcall*GetRandomRace)(int);
extern int(*randomizePlayerPositions)();
extern int(*sub_4A99C0)();
extern int(*sub_4A9A10)();
extern void (__cdecl*BWFXN_RandomizePlayerRaces)();
extern int(*randomizeForces)();
extern void (__cdecl*RandomizeSlotsForcesColors)();
extern int(*sub_4AA190)();
extern int(*sub_4AA4B0)();
extern int(*sub_4AA620)();
extern int(*sub_4AA880)();
extern int(*sub_4AA890)();
extern int(*sub_4AA8A0)();
extern int(*sub_4AA8B0)();
extern int(*sub_4AA8C0)();
extern int(*sub_4AA8D0)();
extern int(*sub_4AA8E0)();
extern int(*sub_4AA900)();
extern int(*sub_4AA910)();
extern int(*sub_4AA920)();
extern int(*sub_4AA930)();
extern int(*sub_4AA960)();
extern int(*sub_4AA990)();
extern int(*isGameTypeSpecial)();
extern int(*IsLeagueGametype)();
extern int (__stdcall*sub_4AA9F0)(char);
BOOL IsScenarioGame(GameData *a1);
extern int(*sub_4AAA40)();
extern int(*sub_4AAA50)();
extern int(*sub_4AAA60)();
extern int(*sub_4AAA70)();
extern int(*sub_4AAA80)();
extern int(*sub_4AAA90)();
extern int(*sub_4AAAA0)();
extern int(*sub_4AAAB0)();
extern int(*sub_4AABA0)();
extern int(*sub_4AABB0)();
extern int(*sub_4AABD0)();
extern int(*sub_4AABF0)();
extern int(*sub_4AAC60)();
GotFileValues *sub_4AAC90(__int16 a1, char a2, char a3);
extern int (__stdcall*sub_4AACC0)(char);
extern int(*sub_4AAD00)();
extern int(*getGameTypeString)();
extern int(*sub_4AAD80)();
extern int(*sub_4AADA0)();
signed int sub_4AADF0(GotFileValues *got_template_values, char *template_label, char a3, TemplateConstructor template_constructor, char *template_name, int a6);
int sub_4AAE20(char *a1, unsigned int *a2, _BYTE **a3, unsigned int a4);
extern void (__stdcall*eventSetGameType)(s_evt *evt);
extern int(*sub_4AAF30)();
extern int(*sub_4AAF50)();
extern int(*sub_4AAFA0)();
extern int(*sub_4AAFF0)();
extern int(*sub_4AB050)();
extern void (__thiscall*DestroyGameTemplates)(bool exit_code);
extern int(*sub_4AB0B0)();
extern int(*sub_4AB0E0)();
extern int(*sub_4AB110)();
extern void (__stdcall*Template_Constructor)(char *template_name, char *template_label, GotFileValues *a3, void *a4);
extern int(*beginComputerAIScriptExecution)();
extern int (__stdcall*sub_4AB310)(int, int);
extern int (__stdcall*IsBNetGame)(int);
extern Trigger *(__stdcall*loadTRGFile)(const char *a1);
int sub_4AB6C0(GotFileValues *a1, size_t a2, int a3, char *buff);
GotFileValues *readTemplate(char *template_name, char *got_template_name, char *got_template_label);
extern int(*InitUseMapSettingsTemplate)();
extern signed int (__stdcall*LoadGameTemplates)(TemplateConstructor template_constructor);
extern int(*sub_4AB970)();
extern void(*sub_4ABA20)();
extern int(*chooseTRGTemplate)();
extern int (__stdcall*sub_4ABC90)(LPCSTR lpszString, int nFit, int);
extern int (__stdcall*sub_4ABF50)(HGDIOBJ h);
extern int (__thiscall*BNLoadImage)(char *fileName, HWND hWnd, HRGN a2, int a4, int a5, int, int);
extern int (__stdcall*sub_4AC250)(int, wchar_t *);
extern int(*sub_4AC2E0)();
extern int (__stdcall*BattleGetCursor)(int, int, int, int, int);
extern int (__stdcall*BattleGetResource)(int, int, int size_, void *buffer, int buffersize_, int width, int height, int depth);
extern int(*sub_4ACD30)();
extern int (__stdcall*DrawTextConstructor)(HDC hdc);
extern int(*sub_4ACE20)();
extern int(*sub_4ACF20)();
extern int (__stdcall*sub_4AD040)(int);
extern int (__stdcall*BattlePlaySound)(int, int, int);
extern int (__stdcall*sub_4AD0E0)(LPCSTR lpText, LPCSTR lpCaption);
extern int(*sub_4AD110)();
extern int(*sub_4AD140)();
extern int(*initializeProviderStruct)();
extern int(*SelectGame)();
extern int(*loadMenu_gluBNRes)();
extern int (__thiscall*sub_4AD390)(dialog *this_);
extern int(*sub_4AD3E0)();
extern int(*sub_4AD400)();
dialog *sub_4AD440(dialog *result);
signed int sub_4AD460(dialog *dlg);
extern int(*sub_4AD560)();
signed int sub_4AD5B0(dialog *a1);
void sub_4AD640(dialog *a1);
extern void (__fastcall*gluCustm_ListboxEntryUpdate)(struct dialog *dlg, u8 selectedIndex, rect *dstRect, int x, int y);
extern int(*sub_4AD850)();
extern int (__stdcall*HideShowDlgCallback)(int, int, int);
extern void (__fastcall*gluCustm_UpdateCB)(dialog *dlg, int x, int y, rect *dst);
int gluCustm_initSwish(dialog *a1);
extern int(*sub_4ADB10)();
void sub_4ADD90(int a1, dialog *a2);
extern int (__stdcall*sub_4ADEA0)(int, int, int, int);
extern int (__stdcall*AddMapToList_CB)(int, int, int);
void gluCustm_raceDropdown(dialog *a1);
extern void (__fastcall*sub_4ADFE0)(dialog *dlg, __int16 a2);
extern int(*sub_4AE1E0)();
extern int (__stdcall*sub_4AE1F0)(int, int, int, int);
dialog *sub_4AE250(dialog *result);
extern int(*sub_4AE320)();
BOOL sub_4AE3C0(dialog *a1);
extern int (__stdcall*sub_4AE420)(int, dialog *a1, char *string);
void gluCustm_typeDropdown(dialog *a1);
extern bool (__fastcall*gluCustm_SubType)(dialog *dlg, dlgEvent *evt);
void sub_4AE790(dialog *a1);
extern int (__stdcall*sub_4AE830)(int);
extern bool (__fastcall*gluCreate_GameSpeed_Slider)(dialog *dlg, dlgEvent *evt);
void *SingleMakeCreateGameDialog(dialog *a1);
extern bool (__fastcall*gluCustm_RaceSlot)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*gluCustm_PlayerSlot)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*gluCustm_Player1)(dialog *dlg, dlgEvent *evt);
extern int(*sub_4AEE40)();
extern int(*sub_4AEEB0)();
extern void (__stdcall*sub_4AEED0)(dialog *a1);
extern bool (__fastcall*gluCustm_GameListboxUpdate)(dialog *dlg, dlgEvent *evt);
extern void (__cdecl*InitGlueMapListBox)();
extern int(*gluCustmLoadMapFromList)();
void sub_4AF400(dialog *a1);
extern bool (__fastcall*gluCustm_GameType)(dialog *dlg, dlgEvent *evt);
char gluCustm_CustomCtrl_InitializeChildren(dialog *a1);
extern bool (__fastcall*gluCustm_Interact)(dialog *dlg, struct dlgEvent *evt);
int loadMenu_gluCustm(int is_multiplayer);
extern int (__stdcall*sub_4AF8E0)(char *source, int, int, int, int);
extern int (__stdcall*joinModemGame)(char *gameName);
extern int (__stdcall*Device_Constructor)(DWORD, DWORD, DWORD, DWORD);
extern int (__fastcall*callback)(DWORD, DWORD, DWORD);
extern void (__thiscall*sub_4AFAD0)(dialog *this_);
int sub_4AFB60(dialog *a1);
extern void (__fastcall*sub_4AFBF0)(dialog *dlg, int x, int y, rect *dst);
extern void (__thiscall*sub_4AFC60)(dialog *this_, dialog *a2);
int sub_4AFD80(dialog *a1);
int sub_4AFE30(dialog *a1);
void sub_4AFEA0(dialog *a1, dialog *a2);
__int16 sub_4AFF50(dlgEvent *a1, dialog *a2);
int sub_4B0010(dialog *a1);
int sub_4B0070(dialog *a1);
extern DWORD (__fastcall*sub_4B0140)(dialog *a1, int a2);
int sub_4B01F0(dialog *a1);
int sub_4B02F0(dialog *a1);
extern bool (__fastcall*sub_4B03C0)(dialog *dlg, dlgEvent *a2);
void gluModem_CustomCtrlID(dialog *a1);
extern bool (__fastcall*glumodemlist_loop)(dialog *dlg, struct dlgEvent *evt);
extern bool (__fastcall*gluModemStatusDlgProc)(dialog *dlg, dlgEvent *evt);
extern void (__stdcall*PhoneNumber_Constructor)(dialog *a1);
int sub_4B07C0(dialog *a1);
u32 sub_4B0970(dialog *a1);
extern int(*sub_4B0AC0)();
void sub_4B0AE0(dialog *a1);
extern int(*load_gluATZoneList)();
extern int(*load_gluModemList)();
extern bool (__fastcall*gluModemEntry_loop)(dialog *dlg, dlgEvent *evt);
int InitializeModem(int a1, int a2, Char4 a3);
extern int (__stdcall*load_gluModemStatus)(dialog *a1);
void DeleteGluModemEntry(dialog *a1);
extern void (__stdcall*load_gluModemEntry)(int);
extern void (__stdcall*AU_PHONENUMBER)(dialog *arg0);
extern bool (__fastcall*gluModem_Main)(dialog *dlg, struct dlgEvent *evt);
extern int(*loadMenu_gluModem)();
extern int(*sub_4B1B30)();
signed int verifyCheatCode(const void *a1, CheatFlags *game_cheats);
signed int campaignTypeCheatStrings(const char *a2);
int makeCheatHash(const char *cheat, __int64 *a2);
int cheatActivation(int result, int a2);
signed int _radioFreeZergCheat(const void *a2, CheatFlags *cheat_flags);
signed int CommandLineCheatCompare(CheatFlags *game_cheats, const char *a2);
extern unsigned int (__fastcall*sub_4B24B0)(dialog *a1, dlgEvent *a2);
extern int(*gluCmpgnBtn_UpdateTimer)();
extern void (__thiscall*gluCmpgnBtn_InitTimer)(dialog *this_);
extern void (__fastcall*gluCmpgnBtn_BtnLightupUpdate)(dialog *dlg, int x, int y, rect *dst);
extern bool (__fastcall*gluCmpgn_CampaignButton)(dialog *dlg, dlgEvent *evt);
int sub_4B26B0(dialog *a1);
extern int(*sub_4B26E0)();
BOOL sub_4B27A0(int race);
extern int (__stdcall*sub_4B2810)(int);
extern bool (__fastcall*gluCmpgn_Main)(dialog *dlg, dlgEvent *evt);
extern int(*loadMenu_gluCmpgn)();
extern int(*sub_4B2A50)();
extern int(*resourceScoreCalc)();
extern int(*structureScoreCalc)();
extern int(*unitScoreCalc)();
extern int(*overallScoreCalc)();
extern int(*sub_4B2BD0)();
extern int(*sub_4B2D10)();
extern int (__stdcall*sub_4B2D20)(__int16, __int16);
extern int(*sub_4B2D50)();
extern int(*sub_4B2DA0)();
extern int (__stdcall*sub_4B2DE0)(char);
extern int(*sub_4B2DF0)();
BOOL sub_4B30A0(dialog *dlg);
extern int (__stdcall*sub_4B3140)(int);
extern int (__stdcall*sub_4B31C0)(int, int);
extern int (__stdcall*endgameData)(char *, size_t, char *buff, size_t size_);
extern int (__stdcall*sub_4B34D0)(int, int);
int sub_4B3600(dialog *a1, int a2, int a3, int a4);
extern int (__thiscall*DLG_GlueScoreFillEnd)(dialog *this_);
extern void (__thiscall*sub_4B3820)(dialog *this_, int a2, int a3);
extern void (__fastcall*sub_4B38A0)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*sub_4B3A40)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*sub_4B3B80)(dialog *dlg, int x, int y, rect *dst);
extern void (__stdcall*sub_4B3BC0)(dialog *a1);
extern bool (__fastcall*gluScore_PlayerRaceIcon)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*gluScore_PlayerScoreTotal)(dialog *dlg, dlgEvent *evt);
extern int(*sub_4B42D0)();
int DLG_GlueScoreFill(dialog *a1);
int sub_4B4520(dialog *a1);
int sub_4B4600(dialog *a1);
extern bool (__fastcall*gluScore_Tab)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*gluScore_SaveReplay)(dialog *dlg, dlgEvent *evt);
int gluScore_CustomCtrlID(dialog *dlg);
extern bool (__fastcall*gluScore_Main)(dialog *dlg, struct dlgEvent *evt);
extern int(*loadMenu_gluScore)();
extern bool (__fastcall*sub_4B4E20)(dialog *dlg, struct dlgEvent *evt);
extern int(*sub_4B4E70)();
extern int(*sub_4B4EE0)();
extern int (__thiscall*sub_4B4F10)(dialog *dlg, int y, rect *dst);
extern bool (__fastcall*gluExpCmpgn_CampaignButton)(dialog *dlg, dlgEvent *evt);
extern char (__cdecl*sub_4B5050)();
BOOL sub_4B5110(int race);
extern signed int (__stdcall*sub_4B5180)(dialog *a1);
extern bool (__fastcall*gluExpCmpgn_CustomCtrlID)(dialog *dlg, struct dlgEvent *evt);
extern void(*loadMenu_gluExpCmpgn)();
extern int(*sub_4B53C0)();
extern int(*sub_4B53D0)();
extern int (__thiscall*LoadPCXFromResource)(LPCSTR lpName, int, int, int);
extern int (__thiscall*sub_4B5500)(LPCSTR lpName, int amount, int, int);
extern int (__stdcall*sub_4B55A0)(int);
void sub_4B5640(dialog *a1);
extern int(*sub_4B5770)();
extern void (__fastcall*sub_4B5790)(dialog *dlg, int x, int y, rect *dst);
int sub_4B57B0(dialog *a1);
extern bool (__fastcall*gluOK_Dlg_Interact_CB)(dialog *dlg, struct dlgEvent *evt);
extern int(*sub_4B59A0)();
bool sub_4B5B20(const char *a1);
extern int(*sub_4B5CC0)();
extern int(*sub_4B5E80)();
extern int(*sub_4B5EB0)();
extern int(*sub_4B5EC0)();
extern u32 (__thiscall*sub_4B5EF0)(dialog *this_);
extern int (__stdcall*SaveGame_Constructor)(int);
int sub_4B6180(dialog *a1);
u32 sub_4B61C0(dialog *a1);
extern int(*DeleteSavedGame)();
extern bool (__fastcall*gluLoad_List)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*gluLoad_Main)(dialog *dlg, struct dlgEvent *evt);
extern void(*loadMenu_gluLoad)();
BOOL sub_4B6530(CampaignMenuEntry *a1, unsigned int a2);
void gluHist_Activate(dialog *result);
int sub_4B65D0(dialog *a1);
extern int(*sub_4B6610)();
extern int(*sub_4B6640)();
extern int(*sub_4B6650)();
void sub_4B6660(dialog *a1);
extern int(*sub_4B67A0)();
extern int(*sub_4B67D0)();
extern void (__fastcall*sub_4B67F0)(dialog *dlg, int x, int y, rect *dst);
void sub_4B6810(dialog *a1);
void sub_4B68C0(dialog *a1);
unsigned __int8 gluHist_Create(dialog *a1);
void sub_4B6A20(dialog *a1);
__int16 sub_4B6B10(dialog *a1, struct dlgEvent *evt);
extern bool (__fastcall*sub_4B6C30)(dialog *dlg, dlgEvent *a2);
int sub_4B6C70(dialog *a1);
extern bool (__fastcall*fn_interact)(dialog *dlg, struct dlgEvent *evt);
extern bool (__fastcall*sub_4B6D60)(dialog *dlg, struct dlgEvent *evt);
extern bool (__fastcall*gluHist_Interact)(dialog *dlg, struct dlgEvent *evt);
extern bool (__stdcall*BWFXN_gluPEdit_MBox)(char *text, char *dest, size_t size_, char *restricted);
void BWFXN_gluPOK_MBox(const char *a1);
int BWFXN_gluPOKCancel_MBox(const char *a1);
extern int (__cdecl*load_gluGameMode_BINDLG)();
CampaignMenuEntry *loadmenu_GluHist(int a1, CampaignMenuEntry *menu_entries);
extern int(*load_gluPOKSplitBINDLG)();
extern int(*sub_4B7C90)();
extern int(*sub_4B7CB0)();
extern int(*sub_4B7D10)();
extern int (__thiscall*sub_4B7DA0)(dialog *this_);
extern int(*sub_4B7DE0)();
extern int(*DestroyGameNodes)();
extern int(*sub_4B7E10)();
char sub_4B7E60(dialog *a1, int a2);
extern unsigned int (__fastcall*gluJoin_MapStatsLabel)(dialog *a1, int a2);
extern int (__stdcall*GameNode_Destructor_0)(int, int);
extern int (__stdcall*updateDLGSpeedSetting)(int);
int sub_4B8340(dialog *a1);
void **sub_4B8460(dialog *a1);
extern bool (__fastcall*gluJoin_Listbox)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*gluJoin_Main)(dialog *dlg, struct dlgEvent *evt);
extern int(*loadMenu_gluJoin)();
extern int(*bootReason)();
extern int(*sub_4B8920)();
extern int(*sub_4B8930)();
extern signed int (__fastcall*gluChat_Button)(dialog *a1, dlgEvent *a2);
extern int(*sub_4B8970)();
extern int(*sub_4B8990)();
extern int(*sub_4B89A0)();
void updateMinimapPreviewDisplayOffOn(int a1, dialog *a2, int a3);
extern int(*updatePasswordDisplay)();
void *sub_4B8D70(dialog *a1);
void sub_4B8D90(dialog *a1);
char gluChat_Textbox_onCharEvent(dlgEvent *a1, dialog *a2);
extern unsigned int (__fastcall*gluChat_GameStatsLabel)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*gluChat_Textbox_Interact)(dialog *a1, dlgEvent *a2);
extern int (__stdcall*sub_4B8F10)(int);
void gluChat_Listbox_Create(dialog *a1);
extern int (__stdcall*printLobbyString)(char *source);
extern int(*sub_4B92F0)();
extern int (__stdcall*DLG_GlueCountdown)(char);
extern int (__stdcall*sub_4B9480)(int);
extern bool (__fastcall*gluChat_Listbox_Interact)(dialog *dlg, dlgEvent *evt);
extern int(*BootPlayerMessageBox)();
int gluChat_init(dialog *a1);
int gluChat_CustomCtrlID(dialog *a1);
int getErrorStringPair(GluAllTblEntry a1, int a2);
extern int(*SendLobbyMessage)();
signed int gluChat_controlActivation(signed int a1, dialog *a2);
extern void (__fastcall*MinimapPreviewProc)(dialog *a1);
extern void (__stdcall*gluChat_HoverMinimapPreview)(dialog *a1);
extern int(*sub_4B9B10)();
extern void (__cdecl*sub_4B9BF0)(dialog *a2);
extern bool (__fastcall*gluChat_Main)(dialog *dlg, struct dlgEvent *evt);
extern int(*loadMenu_gluChat)();
extern int(*sub_4BA0A0)();
extern int(*sub_4BA0C0)();
extern int(*get_tFontGam_PCX_0)();
extern int(*get_tFontGam_PCX)();
BOOL DlgPszTextMemFree(dialog *a1, __int16 a2);
extern int (__stdcall*sub_4BA1F0)(int amount);
int sub_4BA240(int a1);
extern int (__thiscall*sub_4BA290)(dialog *this_);
extern int(*sub_4BA320)();
void DestroyProviderList(dialog *a1);
void sub_4BA370(dialog *a1, size_t a2, __int16 a3, const char *a4);
extern void (__fastcall*sub_4BA3C0)(dialog *a1, u8 a2, rect *a3, int a4, int a5);
unsigned __int8 ListBNGateways(dialog *a1);
extern int(*sub_4BA600)();
extern int (__stdcall*Provider_Constructor)(int, char *, char *source, int);
extern bool (__fastcall*GatewayListProc)(dialog *dlg, dlgEvent *evt);
void selConn_connectionList_setSelection(dialog *a1);
void InitNetProviders(dialog *a1);
signed int getGameList(dialog *dlg);
extern void (__stdcall*selConn_connectionList_Create)(dialog *a1);
extern bool (__fastcall*selConn_ConnectionList_Interact)(dialog *dlg, dlgEvent *evt);
int ConnSel_InitChildren(dialog *a1);
extern int (__cdecl*BeginBNET)();
extern bool (__fastcall*ConnSel_Interact)(dialog *dlg, struct dlgEvent *evt);
extern int(*loadMenu_gluConn)();
extern int(*sub_4BB0A0)();
char packetErrHandle(DWORD a1, int a2, char *a3, int a4, int a5);
extern int(*sub_4BB110)();
extern int (__stdcall*sub_4BB170)(int, int);
extern int (__thiscall*sub_4BB1A0)(char *string, int);
extern int (__fastcall*sub_4BB260)(BYTE **data, int *senderplayerid);
extern int (__thiscall*sub_4BB2A0)(char *data);
extern int (__fastcall*sendMessage_Fast)(char *data, unsigned int playerID);
char doNetTBLError(int a1, const CHAR *error_message, char *file_name, int a4);
extern char (__fastcall*BigPacketError)(int a1, const CHAR *a2, char *a3, int a4, int a5);
extern int(*sub_4BB4B0)();
extern int (__fastcall*ReceiveTurns)(unsigned int *arraydatabytes, char **arraydata, int a1, int arraysize_);
signed int CreateSoundBuffer(AudioVideoInitializationError *a1);
signed int SetCooperativeLevel(HWND a1, AudioVideoInitializationError *a2);
signed int DSoundCreate(AudioVideoInitializationError *a1);
signed int sub_4BB6E0(AudioVideoInitializationError *a1);
int sub_4BB720(SfxData a1);
extern int(*sub_4BB730)();
extern int (__stdcall*sub_4BB740)(char);
unsigned int sub_4BB890(struct_5 *a1);
void sub_4BB8E0(SfxData a1);
extern int(*sub_4BB990)();
extern int (__stdcall*parseSection)(int);
extern int(*sub_4BBA00)();
extern int (__stdcall*sub_4BBA20)(int);
extern void (__thiscall*sfxdata_cleanup)(bool exit_code);
extern int(*SetAudioFormat)();
signed int sub_4BBAF0(struct_5 *a1, int a2, int a3, SfxData sfx_id, UnitType unit_type, char sfxdata_flags_2, char a7, char sfxdata_flags_1);
extern int(*sub_4BBC00)();
extern int(*sub_4BBCF0)();
extern int(*parseWaveFile)();
extern int(*sub_4BBE40)();
extern void (__cdecl*PlayBriefingWAVBegin)();
signed int sub_4BBEB0(SfxData a1, int a2, int a3, UnitType a4);
extern void (__cdecl*stopSounds)();
signed int PlayTransmissionLocation(SfxData a1, int a2, int a3, CUnit *a4);
extern void(*stopAllSound)(void);
extern int(*muteSfx)();
extern void (__cdecl*BWFXN_DSoundDestroy)();
extern signed int (__stdcall*_PlayTransmissionLocation)(SfxData a1, int a2, int a3, CUnit *a4);
extern int (__stdcall*playSoundId)(int);
void j_DLGMusicFade(MusicTrack a1);
void muteBgm(RegistryOptions *a1);
extern int(*sub_4BC410)();
extern int(*initVolume)();
void PlayWavByFilename_maybe(char *a1);
HANDLE sub_4BC5E0(SfxData a1);
extern unsigned int (__stdcall*DSoundThread)(void *a2);
IDirectSoundBuffer *LoadSoundProc(char *a1, struct_5 *a3);
extern int(*LoadSfx)();
IDirectSoundBuffer *sub_4BCA30(SfxData a1, struct_5 *a2);
void sub_4BCA80(SfxData a1);
extern void (__cdecl*LoadBtnSfxFile)();
signed int DSoundInit(AudioVideoInitializationError *a1, HWND a2);
void playsound_init_UI(int a1);
void sub_4BCD70(int *a1);
extern int(*blitTileCacheOnRefresh)();
extern int(*sub_4BCEA0)();
extern int(*GenerateMegatileDefaultFlags)();
extern int(*nullsub_55)();
const char *get_chk_String(__int16 a2);
unsigned int GetGroundHeightAtPos(signed int x, signed int y);
extern int(*DestroyMapData)();
extern int(*RefreshLayer5)();
extern int(*sub_4BD3A0)();
extern int(*InitialSetScreenToStartLocation)();
extern int(*sub_4BD4B0)();
extern void (__thiscall*input_targetOrder_LeftMouseClick)(dlgEvent *);
extern void (__stdcall*DrawGameProc)(Bitmap *, bounds *);
extern int(*InitializeGameLayer)();
extern int(*initMapData)();
extern int(*sub_4BDB00)();
extern int (__thiscall*sub_4BDB30)(int *this_, int a2);
extern int(*sub_4BDD40)();
extern int(*sub_4BDD60)();
extern void (__stdcall*sub_4BDDD0)(const char *tileset_name);
extern void (__stdcall*loadColorShiftTilesetImages)(const char *tileset_name);
extern int(*sub_4BDF70)();
extern int(*sub_4BDF80)();
extern void (__stdcall*cursorUpdateProc)(Bitmap *, bounds *);
extern int(*cursorRefresh)();
extern int(*RefreshCursor_0)();
extern int(*sub_4BE100)();
extern int(*drawCursor)();
extern int (__stdcall*updateCursorImage)(int);
extern int(*sub_4BE1E0)();
extern int(*sub_4BE200)();
extern int(*sub_4BE240)();
extern int (__stdcall*statLb_Static_Update3)(int, int);
extern int(*sub_4BE330)();
extern int (__stdcall*StatLb_Static_Update)(int, int);
extern int(*sub_4BE3B0)();
extern int (__stdcall*statLb_Static_Update2)(int, int);
void sub_4BE430(dialog *a1, signed int a2);
extern void (__thiscall*sub_4BE5B0)(dialog *this_);
extern void (__thiscall*sub_4BE5D0)(dialog *this_);
extern void (__thiscall*sub_4BE5F0)(dialog *this_);
extern int(*sub_4BE610)();
extern char (__stdcall*sub_4BE670)(dialog *a1);
extern int (__stdcall*hideLeaderboard)(dialog *a1);
extern int(*hideLeaderboardCmd)();
extern int(*leaderboardUpdateProc)();
extern int(*sub_4BEBC0)();
extern int(*ToggleLeaderboardList)();
extern int (__stdcall*statlb_Dlg_Create)(int);
extern bool (__fastcall*statlb_Dlg_Interact)(dialog *dlg, dlgEvent *evt);
extern int(*load_statlb)();
int getNameFromPath(char *out_buf, const char *path, size_t size_);
extern int(*sub_4BEF20)();
signed int LoadFileToSBigBuf(char *filename, int a2);
extern int (__thiscall*sub_4BF370)(FILE *, int, int);
extern int (__cdecl*LoadMap)();
extern int (__stdcall*ReadMapData)(char *source, MapChunks *a4, bool is_campaign);
BOOL ReadCampaignMapData(MapChunks *a1);
extern int(*CMDRECV_MinimapPing)();
extern int(*sub_4BF7F0)();
extern int(*nullsub_56)();
extern int(*CMDRECV_VoiceEnable)();
extern int(*sub_4BF870)();
extern int(*sub_4BF8A0)();
extern int(*sub_4BF960)();
BOOL PositionIsInsideMap(Position *a1);
extern int(*sub_4BF9A0)();
extern int(*CMDRECV_Vision)();
extern int(*sub_4BFA40)();
extern int(*nullsub_57)();
extern int(*sub_4BFA60)();
int templarMergePartner(int a1, CUnit *a2, int a3);
extern void(*CMDRECV_restartGame)();
extern int (__stdcall*CMDRECV_ShiftDeselect)(int);
extern int (__stdcall*sub_4BFC50)(__int16, __int16);
extern int(*sub_4BFC80)();
extern int(*sub_4BFCB0)();
extern int(*CMDRECV_CancelNuke)();
extern int(*sub_4BFD30)();
extern int(*sub_4BFD50)();
extern int(*sub_4BFD70)();
extern int(*sub_4BFD90)();
extern int(*CMDACT_Unload)();
extern int(*sub_4BFE10)();
extern int(*sub_4BFE30)();
extern int(*sub_4BFE50)();
extern int(*sub_4BFE70)();
extern int(*sub_4BFE90)();
extern int(*sub_4BFEB0)();
extern int(*sub_4BFED0)();
extern int(*sub_4BFEF0)();
extern int(*sub_4BFF10)();
extern int(*CMDRECV_CancelAddon)();
extern int(*sub_4BFFA0)();
extern int(*CMDRECV_CancelUpgrade)();
extern int(*sub_4C0030)();
extern int(*sub_4C0050)();
extern void(*CMDRECV_CancelResearch)(void);
extern int(*sub_4C00C0)();
extern int(*sub_4C00E0)();
extern int (__stdcall*CMDRECV_CancelTrain)(int);
extern int(*sub_4C01A0)();
extern int(*sub_4C01C0)();
extern int(*sub_4C01E0)();
extern int(*sub_4C0200)();
extern int(*sub_4C0220)();
extern int(*sub_4C0240)();
extern int(*sub_4C0260)();
extern int(*sub_4C0280)();
extern int(*sub_4C02A0)();
extern int(*sub_4C02C0)();
extern int (__stdcall*CMDACT_TargetOrder)(__int16, __int16, __int16, char);
extern int (__stdcall*CMDACT_RightClickOrder)(__int16, __int16, __int16, char);
extern int(*CMDACT_UseCheat)();
extern int(*CMDACT_ResumeGame)();
extern int(*CMDACT_PauseGame)();
extern int (__stdcall*CMDACT_ChangeGameSpeed)(char);
extern int(*sub_4C04B0)();
CUnit *StopAttackingAllies_maybe(int player_id);
extern int(*sub_4C0540)();
extern int (__stdcall*sub_4C0560)(int);
extern int(*sub_4C0590)();
extern int(*sub_4C05A0)();
extern int (__thiscall*sub_4C05C0)(char *source);
extern int (__stdcall*CMDACT_SaveGame)(char *source);
extern int(*CMDRECV_Decloak)();
extern int(*CMRECV_Cloak)();
extern int (__stdcall*CMDACT_HotkeyUnit)(char, int, char);
extern int (__stdcall*selectUnits)(int count, CUnit **unitsToSelect);
extern int(*CMDRECV_UseCheat)();
extern void(*CMDRECV_ResumeGame)();
extern void(*CMDRECV_PauseGame)();
extern int(*CMDRECV_MergeDarkArchon)();
extern int(*CMDRECV_MergeArchon)();
extern int(*CMDRECV_Nothing)();
extern int(*CMDRECV_ReaverStop)();
extern int(*CMDRECV_CarrierStop)();
extern int (__stdcall*CMDRECV_Liftoff)(int);
extern int(*CMDRECV_TrainFighter)();
extern int(*CMDRECV_BuildingMorph)();
extern int (__stdcall*CMDRECV_UnitMorph)(int);
extern int(*CMDRECV_Unburrow)();
extern int (__stdcall*CMDRECV_Upgrade)(int);
extern int (__stdcall*CMDRECV_Research)(int);
extern int(*CMDRECV_Train)();
extern int(*sub_4C1CA0)();
extern int(*CMDRECV_UnloadAll)();
extern int (__stdcall*CMDRECV_Siege)(int);
extern int (__stdcall*CMDRECV_Unsiege)(int);
extern int (__stdcall*CMDRECV_Burrow)(int);
extern int(*CMRECV_ReturnCargo)();
extern int(*CMDRECV_HoldPosition)();
extern int(*CMDRECV_Stop)();
extern int(*CMDRECV_TargetCmd)();
void CMDRECV_RightClick(int result);
extern int(*CMDRECV_Build)();
extern int(*CMDRECV_Unload)();
extern int (__stdcall*CMDRECV_ShiftSelect)(int);
extern int (__stdcall*CMDRECV_Select)(int);
extern int(*CMDRECV_Hotkey)();
extern int (__stdcall*CMDRECV_Ally)(int);
extern int(*CMDRECV_SaveGame)();
extern int (__stdcall*CMDRECV_LeaveGame)(int);
extern int(*CMDRECV_CancelUnitMorph)();
extern int(*CMDRECV_CancelConstruction)();
extern int(*CMDRECV_StimPack)();
extern int (__stdcall*_CRC32)(char);
extern int (__cdecl*write_buf)(int, int, int);
extern int (__cdecl*read_buf)(int, int, int);
extern int(*decompressCleanup)();
extern int(*sub_4C3130)();
extern int (__stdcall*DecompressData)(int, int);
unsigned int CompressOutput(void **a1, int a2, unsigned int a3);
extern int (__stdcall*DecompressRead)(void *, int, FILE *);
int CompressWrite(void *a1, size_t a2, FILE *a3);
extern int(*sub_4C35C0)();
int BINDLG_BlitSurface(dialog *a1);
extern int(*sub_4C3690)();
extern int(*RefreshConsole)();
extern char *(__fastcall*TblGetString)(__int16 index);
extern int(*sub_4C3720)();
extern int(*sub_4C3750)();
extern int(*destroyGameHUD)();
extern int(*updateSelectedUnitData)();
extern int(*sub_4C3930)();
extern int(*LoadConsoleImage)();
extern int(*load_Stat_txt)();
extern int(*sub_4C3B10)();
signed int updateBuildingLandUnitSelection(CUnit *a2);
extern void (__cdecl*setup_HUD)();
extern int(*sub_4C3C80)();
extern void (__stdcall*eventSetPlayerFlag)(s_evt *evt);
extern int(*clearPlayerFlags)();
extern int(*nullsub_58)();
extern int(*nullsub_59)();
extern int (__stdcall*leaveGame)(int);
extern int (__thiscall*sub_4C3DA0)(int playerid);
extern int(*getActivePlayerId)();
extern int(*sub_4C3EA0)();
extern int(*sub_4C3EB0)();
extern int(*sub_4C3ED0)();
extern int(*GetActivePlayerCount)();
extern int(*sub_4C4140)();
extern int (__stdcall*UpdateGameMode)(int);
extern int(*sub_4C41E0)();
extern int(*isMultiplayerModeBNET)();
int ApplyGameVictoryStatus(_DWORD *a1, _DWORD *a2);
extern void (__thiscall*leaveOnQuit)(bool exit_code);
extern int(*RECV_MakeGamePublic)();
extern int(*ReportGameResult)();
extern int(*sub_4C4870)();
extern void (__thiscall*sub_4C4950)(DWORD flags);
extern void (__stdcall*eventPlayerDropped)(s_evt *evt);
extern int (__stdcall*sub_4C4A80)(int, int);
extern int(*userHasMap)();
extern int (__stdcall*playerLeaveGame)(int, int, int);
extern int(*sub_4C4F80)();
extern int(*sub_4C4FA0)();
extern int (__fastcall*TriggerAction_EnableDebugMode)(Action *);
extern int (__fastcall*TriggerAction_DisableDebugMode)(Action *);
extern int(*sub_4C5040)();
extern int(*sub_4C5060)();
extern int (__fastcall*TriggerAction_Draw)(Action *);
extern int (__fastcall*TriggerAction_UnpauseTimer)(Action *);
extern int (__fastcall*TriggerAction_PauseTimer)(Action *);
extern int (__fastcall*TriggerAction_SetNextScenario)(Action *);
extern int (__fastcall*TriggerAction_SetCountdownTimer)(Action *);
extern int (__fastcall*TriggerAction_SetMissionObjectives)(Action *);
extern int(*getTextDisplayTime)();
extern int (__fastcall*TriggerAction_LeaderBoardComputerPlayers)(Action *);
extern int (__fastcall*TriggerAction_Wait)(Action *);
extern int (__fastcall*TriggerAction_PreserveTrigger)(Action *);
extern int (__fastcall*TriggerAction_Defeat)(Action *);
extern int (__fastcall*TriggerAction_Victory)(Action *);
extern int (__fastcall*TriggerAction_NoAction)(Action *);
extern int(*sub_4C5360)();
extern int(*sub_4C5370)();
extern int(*sub_4C5390)();
extern int (__stdcall*KillRemoveUnits_Unit)(int);
extern BOOL (__thiscall*killRemoveUnits_Factories)(void *this_, CUnit *a2);
extern BOOL (__thiscall*KillRemoveUnits_Buildings)(void *this_, CUnit *a2);
extern BOOL (__thiscall*KillRemoveUnits_Men)(void *this_, CUnit *a2);
extern int (__stdcall*KillRemoveUnits_Anyunit)(int);
extern int (__fastcall*TriggerAction_MinimapPing)(Action *);
extern int (__fastcall*TriggerAction_LeaderBoard)(Action *);
extern int (__fastcall*TriggerAction_SetSwitch)(Action *);
extern signed int (__stdcall*ModifyUnitResources)(CUnit *a1, __int16 a2);
extern int (__fastcall*TriggerAction_RunAiScriptAtLocation)(Action *);
extern int (__fastcall*TriggerAction_RunAiScript)(Action *);
extern int (__fastcall*TriggerAction_DisplayTextMessage)(Action *);
extern int (__fastcall*TriggerAction_UnpauseGame)(Action *);
extern int (__fastcall*SetAlliance_maybe)(unsigned int player, __int16 a2, int a3);
extern signed int (__stdcall*ModifyUnitShields)(CUnit *a1, int a2);
extern int (__fastcall*SubtractDeaths)(unsigned int player, unsigned __int16 a2, int a3);
extern int (__fastcall*AddDeaths)(unsigned int player, unsigned __int16 a2, int a3);
extern int (__fastcall*SetDeaths)(unsigned int player, unsigned __int16 a2, int a3);
extern int (__fastcall*SubtractScore)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*AddScore)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*SetScore)(unsigned int player, __int16 a2, int a3);
extern int (__fastcall*SubtractResource)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*AddResource)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*SetResource)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*TriggerAction_UnmuteUnitSpeech)(Action *);
extern int (__fastcall*TriggerAction_MuteUnitSpeech)(Action *);
extern int (__fastcall*FindUnitType)(CUnit *a1, int a2);
extern signed int (__stdcall*ModifyUnitEnergy)(CUnit *a1, int a2);
extern int (__fastcall*setInvincibility)(CUnit *a1, int a2);
extern int (__fastcall*TriggerAction_SetDeaths)(Action *);
extern int (__fastcall*TriggerAction_SetScore)(Action *);
extern int (__fastcall*TriggerAction_SetResources)(Action *);
extern int (__fastcall*TriggerAction_CenterView)(Action *);
extern signed int (__fastcall*getDoodadStateUnit)(CUnit *a1, int a2);
extern int (__fastcall*TriggerAction_ModifyUnitResourceAmount)(Action *);
extern int (__fastcall*TriggerAction_ModifyUnitShieldPoints)(Action *);
extern int (__fastcall*TriggerAction_ModifyUnitEnergy)(Action *);
extern int (__fastcall*TriggerAction_SetInvincibility)(Action *);
CUnit *getUnitForDoodadState(unsigned __int8 location, __int16 a2, int a3);
CUnit *sub_4C7400(int a1, __int16 a2, unsigned __int8 a3, POINT *center);
extern int (__fastcall*TriggerAction_MoveLocation)(Action *);
extern int (__fastcall*TriggerAction_TalkingPortrait)(Action *);
extern int (__fastcall*TriggerAction_SetDoodadState)(Action *);
extern int (__fastcall*TrgOrder)(CUnit *a1, TriggerOrderRelated *a2);
extern int (__fastcall*TriggerAction_PlayWav)(Action *);
extern int (__fastcall*TriggerAction_Transmission)(Action *);
extern int (__fastcall*TriggerAction_Order)(Action *);
extern int (__fastcall*TriggerAction_PauseGame)(Action *);
extern signed int (__stdcall*ModifyUnitHP)(CUnit *a1, int a2);
extern int (__fastcall*TriggerAction_ModifyUnitHitPoints)(Action *);
extern int(*giveUnitsProc)();
char trigMoveUnit(CUnit *unit, __int16 pos_x, int pos_y);
extern int (__stdcall*TriggerKillAllUnits)(int, int, int);
extern BOOL (__fastcall*killUnitsAtLocationProc)(CUnit *a1, int a2);
extern signed int (__stdcall*GiveUnits)(CUnit *a1, int a2);
CUnit *TriggerKillUnitsAtLocation(int location, int a2, __int16 a3, int a4, int a5);
extern int (__fastcall*TriggerAction_GiveUnitsToPlayer)(Action *);
signed int sub_4C82C0(int a1, CUnit *a2);
int trigMoveBuilding(int result, CUnit *a2, int a3);
extern int (__fastcall*DestroyUnit_maybe)(int player_id, __int16 a2, int location, int a4);
extern int (__fastcall*TriggerAction_SetAllianceStatus)(Action *);
extern int (__fastcall*moveUnitCB)(CUnit *unit, int a2);
extern int (__fastcall*TriggerAction_RemoveUnitAtLocation)(Action *);
extern int (__fastcall*TriggerAction_RemoveUnit)(Action *);
extern int (__fastcall*TriggerAction_KillUnitAtLocation)(Action *);
extern int (__fastcall*TriggerAction_KillUnit)(Action *);
extern int (__fastcall*TriggerAction_MoveUnit)(Action *);
extern int (__stdcall*ModifyUnitHangerCount)(CUnit *a1, int a2);
extern int (__fastcall*TriggerAction_ModifyUnitHangarCount)(Action *);
extern int (__fastcall*CreateUnit_maybe)(signed int player_id, int unit_type, int a3);
extern int (__fastcall*TriggerAction_CreateUnitWithProperties)(Action *);
extern int(*sub_4C8E10)();
extern int(*sub_4C8E30)();
extern int(*sub_4C8E60)();
extern int (__stdcall*sub_4C8E80)(int);
extern int (__stdcall*sub_4C8F10)(int, int);
extern int(*sub_4C9020)();
extern int(*sub_4C9030)();
int sub_4C90C0(dialog *a1);
extern void (__thiscall*sub_4C9120)(bool exit_code);
extern void (__thiscall*sub_4C9150)(dialog *this_);
extern int (__thiscall*BWFXN_QuitReplay_maybe)(dialog *a1);
extern int(*options_OK)();
int sub_4C93A0(dialog *a1);
void sub_4C9410(dialog *a1);
char sub_4C9440(dialog *a1);
void sub_4C94F0(dialog *a1);
extern int (__thiscall*CMDACT_RestartGame)(dialog *a1);
extern int (__thiscall*BWFXN_QuitMission)(dialog *a1);
extern int (__thiscall*quit_lastBINDLG)(dialog *a1);
extern int (__stdcall*sub_4C9780)(dialog *a1);
bool options_Cancel(dialog *a1, dlgEvent *a2);
extern void (__thiscall*saveGameCBProc)(dialog *this_);
bool j_options_Cancel(dialog *a1, dlgEvent *a2);
extern int(*sub_4C99C0)();
void **checkSaveGameDialog(dialog *a1);
int sub_4C9CC0(dialog *a1);
extern int(*setObjctDlgBtnString)();
extern void (__cdecl*loadoptionsMenu)();
extern bool (__fastcall*objctdlg_BINDLG)(dialog *dlg, dlgEvent *evt);
extern int (__thiscall*helpmenu_lastBINDLG)(dialog *a1);
extern void(*sub_4CA090)();
extern int (__thiscall*MainMenuOptionsCustomInteract)(dialog *a1);
char gamemenu_CustomCtrlID(dialog *a1);
extern bool (__fastcall*gamemenu_Dlg_Interact)(dialog *dlg, dlgEvent *evt);
extern void(*sub_4CA2D0)();
extern void (__cdecl*QuitMissionMenu)();
extern void (__cdecl*ExitGameMenu)();
extern void (__cdecl*HelpMenu)();
extern int (__thiscall*gameMenu_BINDLG)(dialog *a1);
extern void (__cdecl*sub_4CA430)();
extern int (__thiscall*sub_4CA450)(dialog *a1);
extern void (__cdecl*gameMenu)();
extern int(*mapHandleDestroy)();
extern int (__stdcall*mapAuthCallback)(char *szFileName, int, int);
extern bool (__stdcall*ChkLoader_PUNI)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_TECS)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_TECx)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_UPGS)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_UPGx)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_UNIS)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_UNIx)(SectionData *, int, MapChunks *);
extern int(*sub_4CAE90)();
extern bool (__stdcall*ChkLoader_FORC)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_SPRP)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_MASK)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_DIM)(SectionData *, int, MapChunks *);
UnitRelated20 *sub_4CB0A0(UnitRelated20 *a1, UnitRelated20 *a2);
extern int(*sub_4CB120)();
UnitRelated20 *sub_4CB140(int a1, UnitRelated20 *a2, CUnit *unit, int unit_id);
int CHK_UNIT_StartLocationSub(Position *a1, ChunkUnitEntry *a2);
extern int(*sub_4CB220)();
extern bool (__stdcall*ChkLoader_UPRP)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_MRGN_)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_MRGN)(SectionData *, int, MapChunks *);
extern int(*sub_4CB340)();
extern void (__thiscall*freeCHKStringHandle)(bool exit_code);
extern bool (__stdcall*ChkLoader_ERA)(SectionData *section_data, int section_size_, MapChunks *a3);
extern bool (__stdcall*ChkLoader_OWNR)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_SIDE)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_VER)(SectionData *section_data, int section_size_, MapChunks *a3);
extern bool (__stdcall*ChkLoader_TYPE)(SectionData *, int, MapChunks *);
extern int (__fastcall*sub_4CB560)(int a1);
extern char (__fastcall*sub_4CB5B0)(int a1, UnknownTilesetRelated2 *a2);
extern int(*sub_4CB650)();
extern bool (__stdcall*ChkLoader_PTEC)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_PTEx)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_UPGR)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_PUPx)(SectionData *, int, MapChunks *);
extern bool (__stdcall*ChkLoader_VCOD)(SectionData *sectionData, int sectionSize, MapChunks *map_chunks);
UnitRelated20 *sub_4CBD30(UnitRelated20 *a1);
UnitRelated20 *CHK_UNIT_Addon(CUnit *unit, UnitRelated20 *result, int a3, int unit_id);
extern int (__stdcall*sub_4CBE00)(char, int);
BOOL unitNotNeutral(ChunkUnitEntry *a1);
extern bool (__stdcall*ChkLoader_COLR)(SectionData *, int, MapChunks *);
extern int(*sub_4CBED0)();
UnitRelated20 *CHK_UNIT_Nydus(int a1, CUnit *a2, UnitRelated20 *a3, int a4);
extern int(*sub_4CBF40)();
char sub_4CBF60(int a1, CUnit *a2, __int16 a3);
extern bool (__stdcall*ChkLoader_TRIG)(SectionData *, int, MapChunks *);
signed int ReadMapChunks(MapChunks *a1, void *chk_data, int *out_version_loader_index, int chk_size_);
BOOL LoadFileArchiveToSBigBuf(char *filename, int *a2, int a3, HANDLE *a4);
extern int (__stdcall*sub_4CC1B0)(int);
extern bool (__stdcall*ChkLoader_MBRF)(SectionData *, int, MapChunks *);
signed int sub_4CC2A0(void *chk_data, int chk_size_, int a3, MapChunks *a4);
signed int sub_4CC350(char *a1, char *a2, int a3, size_t a4);
extern int (__stdcall*setUnitEnergyEx)(int, char);
extern int (__thiscall*sub_4CC420)(size_t size_);
char CHK_UNIT_ApplyOtherFlags(CUnit *a1, char a2, int a3);
void sub_4CC610(CUnit *a1, char a2, int a3);
extern bool (__stdcall*ChkLoader_STR)(SectionData *section_data, int section_size_, MapChunks *a3);
int getFullMapChunk(char *filename, int *a3);
int sub_4CC7F0(char *a1);
extern void (__cdecl*sub_4CC990)();
signed int sub_4CCAC0(char *a1, MapChunks *a2);
char sub_4CCC40(int a1, unsigned __int8 a2, CUnit *a3);
extern void (__cdecl*ResetDATFiles)();
CUnit *CHK_UNIT_ApplyBurrowFlag(CUnit *result, char a2, CUnit *a3);
extern UnitRelated20 *(__stdcall*sub_4CCF90)(UnitRelated20 *a1);
extern int (__stdcall*sub_4CD070)(char, int);
extern int(*sub_4CD090)();
extern bool (__stdcall*ChkLoader_MTXM)(SectionData *, int, MapChunks *);
char setHangerCount(CUnit *a1, CUnit *a2, unsigned __int8 a3);
CUnit *CreateUnitAtPos(__int16 player_id, unsigned int unit_type, __int16 x, __int16 y);
char editUnitFlags(CUnit *a1, UnitGroupFlags *a2);
extern bool (__stdcall*ChkLoader_THG2)(SectionData *, int, MapChunks *);
CUnit *sub_4CD740(ChunkUnitEntry *a1);
extern void (__cdecl*sub_4CD770)();
extern bool (__stdcall*ChkLoader_UNIT)(SectionData *a1, int section_size_, MapChunks *a3);
extern int (__thiscall*sub_4CD9C0)(dialog *this_);
extern int (__stdcall*sub_4CDA00)(int);
extern int(*sub_4CDA20)();
int UpdateCancelButton(dialog *a1, unsigned __int16 a2, int a3);
int UpdateOKButton(dialog *a1, unsigned __int16 a2, int a3);
extern bool (__fastcall*sub_4CDAD0)(dialog *dlg, dlgEvent *evt);
extern signed int (__fastcall*gameMenu_DLG)(dialog *a1, dlgEvent *a2);
extern int(*getRaceName)();
extern void (__thiscall*FreeNetworkTBLHandle)(bool exit_code);
extern int(*LoadNetworkTBL)();
extern int(*sub_4CDCC0)();
extern unsigned int (__thiscall*sub_4CDCE0)(GameActionDataBlock *this_);
extern int(*sub_4CDD30)();
extern int(*sub_4CDDC0)();
extern int (__stdcall*sub_4CDE10)(void *dest);
void saveReplayAction(GameActionDataBlock *a1, _BYTE *a2, size_t a3, char a4);
extern int(*sub_4CDF00)();
extern int(*sub_4CDF10)();
extern int(*sub_4CDF20)();
extern int(*sub_4CDF30)();
_DWORD *allocateRepGameActionMemory(GameActionDataBlock *a1);
extern int(*sub_4CDFA0)();
extern int(*sub_4CDFC0)();
extern int(*sub_4CDFD0)();
int sub_4CDFF0(GameActionDataBlock *a1, _DWORD *a2, int a3, char *dest, int a5);
extern int (__stdcall*sub_4CE110)(int);
extern void (__thiscall*FreeGameActionData)(bool exit_code);
int WriteGameActions(FILE *a2, GameActionDataBlock *a3);
BOOL sub_4CE220(FILE *a1);
extern int(*sub_4CE270)();
extern void (__cdecl*createNewGameActionDataBlock)();
extern int(*closeLoadGameFile)();
extern int(*nullsub_60)();
extern int(*sub_4CE4A0)();
signed int GetMapSaveDirectory(char *a1, unsigned int esi0, const char *a2);
signed int getSaveDirectory(char *a1, unsigned int esi0, char *a2, int a4);
extern int(*SetMapStartStatus)();
extern int(*getMapStartStatus)();
extern int(*sub_4CE700)();
extern int(*sub_4CE720)();
extern int(*sub_4CE730)();
extern int(*sub_4CE740)();
extern int(*sub_4CE750)();
extern int(*sub_4CE760)();
extern int(*setUpgradeLevel)();
extern int(*getUpgradesLevel)();
extern int(*sub_4CE7D0)();
extern int(*getUpgradesAvailable)();
extern int(*sub_4CE820)();
u8 isTechResearched(int a1, Tech2 tech);
extern int(*sub_4CE880)();
u8 techIsResearchedSCBW(int a1, Tech2 a2);
extern int (__thiscall*sub_4CE8D0)(char *source, int, int);
extern int(*unpackAllPlayerSelectionGroups)();
extern int(*packAllPlayerSelectionGroups)();
extern int(*getSaveExtension)();
extern int (__stdcall*sub_4CEEF0)(int, int);
extern int (__stdcall*sub_4CEFF0)(int, int);
extern int (__stdcall*WriteSaveVersion)(int, FILE *);
extern int (__thiscall*getSavePath)(char *base, int a2);
extern int (__stdcall*enumSaveLoadFiles)(int, int, int, int, int);
extern int (__stdcall*createSaveLoadList)(int, int);
extern int(*sub_4CF5F0)();
signed int sub_4CF7B0(char *a1);
extern int (__stdcall*sub_4CF820)(int a2);
int LoadGameInit_Mode(char *a1);
int CMDRECV_LoadGame(const char *a1);
extern int (__thiscall*Saved_Game_Node_Constructor)(char *source, int, int);
extern int (__thiscall*sub_4CFCC0)(char *source, int, int);
extern int (__stdcall*sub_4CFD90)(int);
extern int (__stdcall*sub_4CFE40)(int, char *dest, size_t size_);
extern int(*loadGameFull)();
extern int(*loseSightSelection)();
extern int(*getTopLevelExceptionFilter)();
extern int(*ExceptionFilterDestructor)();
extern int (__thiscall*GetModuleInfo)(LPCVOID lpAddress, LPSTR lpString1, int, int);
extern int (__fastcall*LogCallStack)(char);
extern LONG (__stdcall*TopLevelExceptionFilter)(struct _EXCEPTION_POINTERS *ExceptionInfo);
extern int (__stdcall*CreateExceptionFilter)(int);
extern int (__thiscall*IsOutsideGameScreen)(int a2);
extern int(*setHudBeginY)();
extern int(*sub_4D1210)();
extern int(*sub_4D1220)();
extern int(*sub_4D1230)();
extern int(*sub_4D1240)();
extern void (__thiscall*DestroyCursors)(bool exit_code);
extern int(*getScrollCursorType)();
extern int(*UnitIsEnemy)();
void _drawCursor(int a1);
extern int(*getCursorType)();
extern int(*BWFXN_NextFrameHelperFunctionTarget)();
extern int(*LoadCursors)();
extern int (__stdcall*sub_4D16F0)(int);
void GameShowCursor(bool show_cursor);
extern void (__cdecl*Game_NumLockInit)();
extern int(*BWFXN_Game_KeyState)();
extern void (__cdecl*Game_Close)();
void Game_MouseWheel(EventNo wNo, int a2, InputProcedure a3);
void BWFXN_Game_ButtonUp(int a1, void (__thiscall *a2)(dlgEvent *), unsigned int a3, EventNo a4);
void BWFXN_Game_ButtonDown(int result, void (__thiscall *a2)(dlgEvent *), unsigned int a3, EventNo a4);
void Game_BtnDoubleClick(int result, void (__thiscall *a2)(dlgEvent *), unsigned int a3, EventNo a4);
extern void(*UpdateDlgMousePosition)(void);
extern void (__cdecl*TakeScreenshot)();
extern DWORD (__stdcall*BWFXN_videoLoop)(int flag);
extern int(*sub_4D1D30)();
extern int(*Game_Capturechanged)();
extern LRESULT (__stdcall*MainWindowProc)(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
extern void *(__stdcall*allocFunction)(DWORD);
extern int(*sub_4D26D0)();
extern int (__fastcall*sub_4D26E0)(int logline, char *logfilename);
extern int (__stdcall*FileIOErrProc)(char *source, int, int);
extern int(*sub_4D2760)();
extern int (__fastcall*sub_4D2770)(int height, int width, int size_, void *buffer, int buffersize_);
extern void (__fastcall*AllocBackgroundImage)(const char *fileName, Bitmap *a2, int *palette, const char *source_filename, int source_line);
extern int (__fastcall*sub_4D2840)(DWORD dwSearchScope, HANDLE hMpq, int);
void FileFatal(HANDLE this_, int a2);
extern int(*checkLastFileError)();
extern int (__stdcall*waitForImageLoadObjects)(int, int, int);
extern int (__fastcall*ReadFile_Overlapped)(void *buffer, DWORD nNumberOfBytesToRead);
extern int (__fastcall*LoadGraphic)(const char *grp_path, int unused_zero, const char *logfilename, int logline);
extern int (__stdcall*sub_4D2BF0)(char *a1, int, int, char *logfilename, int logline);
extern int (__stdcall*sub_4D2C70)(char *filename, int last_error, int, char *logfilename, int logline);
int fastFileRead(int *bytes_read, int searchScope, const char *filename, int defaultValue, int bytes_to_read, const char *logfilename, int logline);
extern void *(__fastcall*_fastFileRead)(const char *filename, int default_value, int *bytes_read, const char *a4, int a5);
extern int(*sub_4D2E60)();
void LoadGameData(DatLoad *a1, char *a2);
extern void (__thiscall*DestroyAccelerators)(bool exit_code);
extern int(*sub_4D2F90)();
extern int(*sub_4D2FB0)();
extern int(*sub_4D2FD0)();
extern int(*InitializeInputProcs)();
extern int(*LoadAccelerators_)();
extern int(*j_InitializeInputProcs)();
extern int(*sub_4D3200)();
extern int(*sub_4D3220)();
extern int(*cleanBufferCounts)();
extern int (__stdcall*sub_4D32E0)(char);
extern int(*nullsub_61)();
extern int(*sub_4D3340)();
extern int(*sub_4D3350)();
extern int(*sub_4D3360)();
signed int sub_4D3370(GameData *a1);
extern int(*sub_4D3400)();
extern int(*nullsub_62)();
extern int(*nullsub_63)();
extern int(*nullsub_64)();
extern int(*get_netmode)();
extern int(*sub_4D3470)();
extern int (__stdcall*GameUpgrade)(int);
extern int(*ResetLeagueEvent)();
extern int(*sub_4D3540)();
extern int(*sub_4D3570)();
extern int(*sub_4D3580)();
extern int(*sub_4D35A0)();
extern int (__fastcall*Game_Hdr_Node_Constructor)(DWORD, DWORD, DWORD);
int sub_4D37C0(dialog *a1, int (__stdcall *a2)(_DWORD, _DWORD));
extern int(*sub_4D3810)();
extern int(*sub_4D3860)();
extern signed int (__stdcall*CreateLadderGame)(GameData *a1, int a2);
signed int JoinNetworkGame(GameData *a3);
signed int InitializeNetworkProvider(Char4 provider_id);
signed int CreateGame(GameData *a1);
extern signed int(*sub_4D4130)();
extern int (__stdcall*LobbyLoopCnt)(int);
extern int(*sub_4D4400)();
extern void (__thiscall*endVideoProc)(dlgEvent *);
extern void (__cdecl*sub_4D4440)();
void PlayMovie(unsigned int a1);
extern int(*sub_4D4540)();
extern void (__fastcall*TitleLoopUpdate)(dialog *dlg, int x, int y, rect *dst);
void sub_4D45A0(dialog *a1);
extern int(*sub_4D4620)();
extern dialog *(__thiscall*TitleLoopTimer)(dialog *this_);
void DrawBINDialog(dialog *a1);
int *TitleBlitAndLoop(dialog *dlg);
int *titleInit(dialog *dlg);
extern bool (__fastcall*TitleDlgProc)(dialog *dlg, struct dlgEvent *evt);
extern void (__cdecl*LoadTitle)();
extern int(*initializePlayerValues)();
extern int(*nullsub_65)();
extern int(*packColorShifts)();
extern int(*sub_4D4B50)();
extern int(*sub_4D4B60)();
extern int(*sub_4D4B80)();
extern void (__cdecl*initializeImageArray)();
extern int(*sub_4D4C70)();
extern int(*sub_4D4CB0)();
extern int(*sub_4D4CC0)();
extern int(*sub_4D4CD0)();
int ImageDestructor(CImage *a1);
extern int(*sub_4D4D70)();
extern int(*sub_4D4D80)();
extern int(*sub_4D4DA0)();
extern int(*sub_4D4DB0)();
extern int(*sub_4D4E10)();
extern int(*sub_4D4E20)();
extern int(*sub_4D4E30)();
extern int(*sub_4D4E80)();
CImage *sub_4D4F10(CImage *a1);
int removeSelectionCircleImage(CImage *a1);
int removeHPBar(CImage *a1);
extern void (__thiscall*CleanupIscriptBINHandle)(bool exit_code);
extern int(*nullsub_66)();
extern int(*nullsub_67)();
extern int (__stdcall*sub_4D5170)(int, int);
extern int (__stdcall*imageRenderFxn16_1)(int, int, int);
extern int (__stdcall*imageRenderFxn16_0)(int, int, int);
extern int (__stdcall*imageRenderFxn15_0)(int, int, int);
extern int (__stdcall*imageRenderFxn13_0)(int, int, char);
char imageRenderFxn12_Main(rect *a1, int a2, int a3);
extern int (__stdcall*imageRenderFxn17_1)(int, int, char);
extern int (__stdcall*imageRenderFxn17_0)(int, int, char);
extern int (__stdcall*imageRenderFxn6_1)(int, int, int);
extern int (__stdcall*imageRenderFxn6_0)(int, int, int);
extern int (__stdcall*imageRenderFxn5_1)(int, int, int);
extern int (__stdcall*imageRenderFxn5_0)(int, int, int);
extern int (__stdcall*imageRenderFxn2_1)(int, int, int);
extern int (__stdcall*imageRenderFxn2_0)(int, int, int);
extern int(*nullsub_6)();
CImage *unpackImageGrpData(CImage *result);
extern int (__stdcall*sub_4D56F0)(int);
int sub_4D5740(int result, _DWORD a2, int a3);
int ISCRIPT_UseLOFile(int result, CImage *a2, unsigned __int8 a3, int a4);
CImage *CImage__updateGraphicData(CImage *result);
CImage *setImagePaletteType(CImage *result, unsigned __int8 a2);
extern int(*ISCRIPT_setPosition)();
extern int(*sub_4D5920)();
extern int(*sub_4D5930)();
extern int(*updateImageFrameIndex)();
CImage *sub_4D5960(CImage *result);
extern int(*sub_4D59C0)();
extern int(*updateImagePositionOffset)();
int InitializeImageData(CImage *a1, CSprite *a2, int a3, char a4, char a5);
CImage *sub_4D5B00(CImage *result, int a2);
extern int(*sub_4D5B60)();
void sub_4D5BB0(CSprite *a1);
extern int(*InitDamageOverlayCounts)();
extern void (__fastcall*imageRenderFxn12_1)(int, int, grpFrame *, rect *, int);
extern int (__stdcall*imageRenderFxn12_0)(int, int, int);
extern void (__thiscall*iscriptDecloaking)(CImage *this_);
extern int(*iscriptCloaking)();
extern int(*sub_4D5DC0)();
extern int(*sub_4D5DE0)();
extern int(*sub_4D5E00)();
CImage *CopyImagePaletteType(CImage *result, CImage *a2);
extern int(*ISCRIPT_PlayFrame)();
CImage *updateImageDirection(CImage *result, unsigned int a2, unsigned __int8 a3);
void flipImage(CImage *result, char a2);
char setImageDirection(unsigned int a1, CImage *a2, unsigned __int8 a3);
void compileHealthBar(CImage *a1, CSprite *a2);
extern int (__stdcall*imageRenderFxn14_1)(int, int, char);
extern int (__stdcall*imageRenderFxn14_0)(int, int, char);
extern int (__stdcall*ReadImagesArray)(FILE *);
unsigned int packImageData(unsigned int a1, CImage *a2);
extern CImage *(__fastcall*CreateHealthBar)(int a1, CSprite *a2);
extern int(*sub_4D64A0)();
extern int (__stdcall*writeImages)(FILE *);
void ISCRIPT_PlaySnd(int a1);
unsigned __int16 isValidScript(CImage *a1, int a2);
extern int(*sub_4D6690)();
void sub_4D66B0(CImage *a1);
void sub_4D6740(CImage *a1, CSprite *a2, unsigned int a3, unsigned int a4);
int sub_4D67D0(CImage *a1, unsigned __int16 a2, int a3);
void createSelectionCircleImage(CSprite *a1, CImage *a2, unsigned __int8 a3, __int16 a4);
unsigned __int16 InitializeHealthBarImage(int a1, CImage *a2);
extern int(*InitializePresetImageArrays)();
extern CImage *(__stdcall*ISCRIPT_CreateImage)(CImage *a1, int a2, char a3, char a4, int a5);
extern CImage *(__fastcall*sub_4D6F00)(int a1, CSprite *a2, unsigned int a3, unsigned int a4);
CImage *sub_4D6F90(CSprite *a1, unsigned __int16 a2, unsigned int a3, unsigned __int16 a4);
CImage **CreateSelectionCircle(CSprite *a1, unsigned __int8 a2, __int16 a3);
CThingy *ISCRIPT_CreateSprite(CImage *a1, unsigned __int16 a2, int a3, int a4, char a5);
extern int(*LoadImageData)();
extern int(*LoadInitIscriptBIN)();
void BWFXN_PlayIscript(CImage *a1, StatusFlags a2, int a3, int a4, int a5);
void PlayIscriptAnim(CImage *this_, Anims anim);
void PlayWarpInOverlay(CImage *a1);
extern int (__thiscall*iscriptSomething_Death)(CImage *a1);
extern int(*sub_4D8600)();
extern int(*sub_4D86A0)();
extern int(*sub_4D8780)();
void creditsDlgDestroy(dialog *a1);
extern int (__stdcall*sub_4D8840)(char *source);
char creditsEndPage(dialog *a1);
extern void (__fastcall*sub_4D8930)(dialog *dlg, int x, int y, rect *dst);
HANDLE creditsSetBackgroundImageFromFile(const char *a1, dialog *a2);
int runCreditsScriptCommands(char *tag, unsigned int a2, dialog *a3);
signed int creditsDlgInit(dialog *a1);
signed int credits_keyDwn(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*creditsDlgInteract)(dialog *dlg, struct dlgEvent *evt);
void loadInitCreditsBIN(const char *a1);
void sub_4D8F90(int a1, EstablishingShot *a2);
extern void(*BeginCredits)(void);
extern void(*BeginEpilog)(void);
extern void (__cdecl*DisplayMissionEpilog)();
extern void (__cdecl*DisplayEstablishingShot)();
extern int(*sub_4D9250)();
extern int(*sub_4D9260)();
extern int(*lmissionInitSelf)();
extern int(*resetLastInputFrameCounts)();
extern int(*sub_4D9360)();
extern int(*sub_4D93B0)();
extern void (__cdecl*updateHUDInformation)();
extern int(*RefreshAllUnits)();
int GameLoop(MenuPosition a1);
void DoGameLoop(MenuPosition a1);
extern signed int (__thiscall*GameLoopWaitSendTurn)(int *this_);
int GameLoop_State(void *a1, MenuPosition a2);
void GameLoop_Top(MenuPosition a1);
GamePosition BeginGame(MenuPosition a1);
extern int(*sub_4D9AA0)();
extern int(*sub_4D9AB0)();
extern void (__thiscall*DestroyFontKey)(bool exit_code);
extern int(*sub_4D9B10)();
void ClearAndFreeCdkeyStrings(const char *cdkeyowner, const char *cdkey);
extern int(*KeyIsValid)();
extern int (__stdcall*getCDKeyInfo)(int);
extern int(*makeStringHash)();
BOOL KeyVerification(char *a1, const char *a2);
extern int(*sub_4D9E70)();
extern void(*InitializeFontKey)(void);
extern void (__thiscall*FreeLocalDLL)(bool exit_code);
extern void (__thiscall*FreeMapdataTable)(bool exit_code);
extern int(*sub_4DA120)();
char *strTokenize(const char *a1);
extern int(*sub_4DA230)();
extern int(*sub_4DA240)();
extern int(*sub_4DA250)();
extern int (__fastcall*SFileExists)(char *szFileName, HANDLE hMpq);
extern int(*sub_4DA290)();
extern void (__thiscall*CloseAllArchives)(bool exit_code);
extern void (__thiscall*vidinimoDestroy)(bool exit_code);
extern BOOL (__stdcall*LocalErrProc)(HWND, UINT, WPARAM, LPARAM);
extern int(*LoadMainModuleStringInfo)();
extern void (__thiscall*DestroyFonts)(bool exit_code);
HANDLE LoadInstallArchiveHD(const char *a1, char *a2, const char *hMpq, HANDLE phFile);
HANDLE LoadInstallArchiveCD(DWORD a1, const char *a2, const char *filename);
extern void (__thiscall*j_BWFXN_DSoundDestroy)(bool exit_code);
extern int(*sub_4DA790)();
void localDll_Init(HINSTANCE a1);
extern void (__cdecl*CommandLineCheck)();
signed int InitializeCDArchives(const char *filename, int a2);
void DataVersionCheck(const char *data_file_version);
extern Font *(__fastcall*AllocateFont)(char *font_path, int default_value, int a3, int a4, int search_scope, char *logfilename, int logline);
extern int(*InitializeArchiveHandles)();
extern int(*LoadGameFonts)();
extern int(*LoadMenuFonts)();
extern void (__cdecl*PreInitData)();
extern void (__cdecl*audioVideoInit)();
BOOL gluMainDestroy(dialog *a1);
extern int(*sub_4DB180)();
extern int(*sub_4DB1C0)();
extern signed int (__cdecl*loadCampaignBIN)();
extern int (__stdcall*sub_4DB260)(int, int, int);
void gluMainCreate(dialog *a1);
extern int(*sub_4DB480)();
signed int loadStareditProcess(dialog *a1);
BOOL cmpgn_WaitForCDRom(GluAllTblEntry a2, char *filename);
extern int(*sub_4DB6A0)();
extern int(*sub_4DB6C0)();
extern int(*SelGameMode)(int a2);
extern BOOL(*gluMain_DisplayCDRomErrorBinDlg)();
extern bool (__fastcall*gluMain_Dlg_Interact)(dialog *dlg, struct dlgEvent *evt);
extern int(*loadMenu_gluMain)();
extern int (__stdcall*append_melee_computer)(char);
extern int(*sub_4DBBC0)();
extern int(*ClearMeleeCompSlots)();
extern int(*setSinglePlayerValue)();
CampaignMenuEntry *getCampaignIndex(MapData a1, CampaignMenuEntry **a2);
extern int (__thiscall*parseCmpgnCheatTypeString)(const char *campaign_index, int race, int first_mission_index, int is_expansion, MapData4 *a5);
signed int sub_4DBD20(const char *a1, size_t a2, int *a3);
extern void (__cdecl*updateActiveCampaignMission)();
CampaignMenuEntry *sub_4DBDA0(const char *a1);
extern int(*sub_4DBE50)();
extern int(*initSingle)();
extern int(*playActiveCinematic)();
void sub_4DBEE0(CampaignMenuEntry *a1);
extern void (__cdecl*sub_4DBF80)();
int CreateCampaignGame(MapData a1);
int LoadCampaignWithCharacter(int race);
extern int (__cdecl*CreateNextCampaignGame)();
extern int (__stdcall*ContinueCampaign)(int);
extern int(*RandomizeShort)();
extern int (__stdcall*sub_4DC4E0)(int);
extern int(*sub_4DC510)();
extern int(*sub_4DC520)();
extern int(*sub_4DC530)();
extern void (__thiscall*SetInGameLoop)(int this_);
extern int (__stdcall*RandBetween)(int);
extern void (__cdecl*BWFXN_NetSelectReturnMenu)();
void ContinueCampaignWithLevelCheat(MapData4 result, int a2, int a3);
extern int(*sub_4DC650)();
extern int(*sub_4DC660)();
extern BOOL (__stdcall*EnumFunc)(HWND, LPARAM);
extern void (__thiscall*DestroyGluAllStrings)(bool exit_code);
extern int(*getBGPalInfo)();
extern int(*sub_4DC7D0)();
extern int(*sub_4DC800)();
extern int (__stdcall*sub_4DC840)(int);
extern int(*sub_4DC870)();
extern int(*sub_4DC8D0)();
extern int(*sub_4DC8F0)();
extern int(*sub_4DC940)();
extern int (__thiscall*cleanUpFileNameString)(char *);
extern int (__thiscall*sub_4DCB00)(void *);
extern int(*sub_4DCBD0)();
int DestroyChildren(dialog *a1);
extern void (__cdecl*nextLeaveGameMenu)();
extern int(*loadMenu_None)();
extern int (__thiscall*DLGSwishOutProc)(dialog *a1);
extern int(*sub_4DCEA0)();
extern int(*sub_4DCEE0)();
void setDialogString(dialog *a1, __int16 a2, const char *a3);
extern int (__cdecl*changeMenu)();
extern char (__stdcall*DLG_SwishOut)(dialog *a1);
extern int(*jmpNoMenu)();
extern int (__stdcall*buttonMouseOver)(int);
extern int (__thiscall*DLG_SwishInLock)(dialog *this_);
void **DLG_ServerMenuSwishBegin(int a1, dialog *a2, int a3);
void DlgSwooshin(__int16 a1, swishTimer *a2, dialog *a3, signed __int16 a4);
extern void(*loadTFontPcx)(void);
extern void(*loadtEffectPcx)(void);
int registerMenuFunctions(FnInteract *a1, dialog *a2, int a3, int a4);
extern dialog *(__fastcall*loadFullMenuDLG)(const char *szFileName, void *buffer, int read, const char *logfilename, int logline);
extern int(*loadAndInitFullMenuDLG)();
extern const char *(__stdcall*get_GluAll_String)(GluAllTblEntry tbl_entry);
extern int(*sub_4DDE70)();
extern void (__cdecl*loadDlgGrp)();
extern void(*loadCursor)(void);
extern int (__fastcall*sub_4DE040)(dialog *dlg, struct dlgEvent *evt);
extern void(*init_gluesounds)(void);
extern int(*sub_4DE130)();
extern int(*DLGSwishInProc)();
int *DLG_SwishIn(dialog *a1);
extern int(*SwitchMenu)();
extern int (__stdcall*sub_4DE740)(int);
extern int(*sub_4DE770)();
extern int(*sub_4DE790)();
extern void (__cdecl*freeChkFileMem)();
extern int(*trimTrailingSpaces)();
extern int(*sub_4DE840)();
extern int(*sub_4DE860)();
extern int(*sub_4DE880)();
extern int(*sub_4DE890)();
extern int(*sub_4DE8A0)();
extern int(*sub_4DE8B0)();
extern int(*sub_4DE8C0)();
extern int(*sub_4DE8D0)();
extern int(*sub_4DE8E0)();
extern int(*sub_4DE8F0)();
extern int(*sub_4DE920)();
void getReplPlayerColors(int *result);
void getReplPlayerStructs(PlayerInfo *a1);
void copyPlayerStructsToReplayPlayerStructs(void *result, void *a2);
void SetReplayData(GameData *a1, PlayerInfo *a2, int *a3);
extern int(*sub_4DEA90)();
extern int (__stdcall*BTNSCOND_ReplayPlayPause)(int);
extern int (__stdcall*BTNSCOND_ReplaySpeedUp)(int);
extern int (__stdcall*BTNSCOND_ReplaySlowDown)(int);
void SetGameSpeed_maybe(int game_speed, unsigned __int8 a2, unsigned int a3);
extern int (__stdcall*sub_4DECF0)(unsigned __int8 a2);
extern int(*sub_4DED10)();
extern signed int (__stdcall*CopyLastreplay)(char *a1);
extern int(*replayFrameComputation)();
int getDirectoryPath(CHAR *a1, DWORD esi0, const char *a2);
int saveGame_Destroy(dialog *a1);
extern int (__stdcall*GetReplayFileList)(int);
extern int(*sub_4DF1E0)();
extern int(*DeleteFileIfExists)();
extern int(*CMDACT_IncreaseReplaySpeed)();
extern int(*CMDACT_SetReplaySpeed)();
extern int(*CMDACT_DecreaseReplaySpeed)();
extern int(*replay_leaderboard_Hide)();
extern int(*replay_leaderboard_Show)();
void sub_4DF4A0(dialog *a1);
extern void (__thiscall*sub_4DF520)(dialog *this_);
int LoadReplayFile(char *a1, int *a3);
extern signed int (__fastcall*savegame_Delete)(dialog *a1, dlgEvent *a2);
char sub_4DF740(dialog *a1, struct dlgEvent *evt);
extern int (__stdcall*ReplayFileListIterateItemProc)(int);
extern bool (__fastcall*savegame_TextBox)(dialog *dlg, dlgEvent *evt);
void createReplayListbox(dialog *a1);
extern bool (__fastcall*savegame_Listbox)(dialog *dlg, dlgEvent *evt);
extern int(*saveGame_InitChildren)();
extern int(*sub_4DFA90)();
int SaveReplay(const char *a1, int a3);
int CopyLastReplayTo(char *a1);
extern int(*saveGame_Create)();
extern bool (__fastcall*savegameBIN_Main)(dialog *dlg, struct dlgEvent *evt);
int LoadSaveGameBIN_Main(int a1, Race a2);
extern int(*BWSetSecurityInfo)();
extern int (__stdcall*CheckForOtherInstances)(LPCSTR lpClassName);
extern int(*VerifySystemMemory)();
extern void (__cdecl*CreateMainWindow)();
void GameRun(MenuPosition a1);
extern int(*GameMainLoop)();
extern int (__stdcall*_WinMain)(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd);
extern unsigned int (__fastcall*sub_4E0B30)(dialog *a1, dlgEvent *a2);
__int16 genericLightupBtnUserDestroyEventHandler(dialog *a1);
extern int (__stdcall*sub_4E0BE0)(int, int);
extern int(*sub_4E0D10)();
void genericLightupBtnMouseUpdate(dlgEvent *a1, rect *a2, dialog *a3);
int activateDialog(dialog *a1, dialog *a2);
extern int(*sub_4E0E40)();
extern void (__thiscall*PlayVideoFrame)(dialog *this_);
void sub_4E1020(dialog *a1, char a2);
void AnimateVideos(dialog *result);
extern void (__fastcall*sub_4E1120)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericLightupBtnUpdate)(dialog *dlg, int x, int y, rect *dst);
void MenuGenericBtnInitChildren(dialog *dlg);
extern int(*PlayVidInRect)();
unsigned int MenuGenericBtnUserEventHandler(dialog *a1, dlgEvent *a2, dialog *a3);
int ButtonVideo(dialog *a1);
extern bool (__fastcall*Menu_Generic_Button)(dialog *dlg, dlgEvent *evt);
unsigned int sub_4E1640(dialog *a1, dlgEvent *a2);
unsigned int genericLightupBtnUserEventHandler(dlgEvent *a1, dialog *a2);
extern bool (__fastcall*gluRdyZ_Secret)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*genericLightupBtnInteract)(dialog *dlg, struct dlgEvent *evt);
int sub_4E18C0(dialog *a1);
int sub_4E1900(dialog *a1);
void GenericControlMouseEvt(dlgEvent *a1, dialog *a2);
int removeDlgFromTimerTracking1(dialog *a1, dialog *a2);
unsigned int GenericControlInteract(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*genericCheckboxInteract)(dialog *dlg, struct dlgEvent *evt);
extern bool (__fastcall*genericOptionInteract)(dialog *dlg, struct dlgEvent *evt);
extern bool (__fastcall*genericBtnInteract)(dialog *dlg, struct dlgEvent *evt);
extern int (__stdcall*BWFXN_Draw)(int, int, int);
extern void (__stdcall*BWFXN_DrawBox)(s16 x, s16 y, u16 w, u16 h);
extern int (__stdcall*CreatePath_PopulatePathAreas)(int);
char sub_4E2510(_DWORD a1);
extern int(*sub_4E25F0)();
extern int (__stdcall*sub_4E2700)(int);
extern int(*EndAreaFixup)();
extern int (__stdcall*AreaFixup_Constructor)(__int16);
extern int (__stdcall*DoAreaFixup)(int, int, int);
extern int (__stdcall*upgradeAllUpgradesFromUnit)(int, int);
extern int (__stdcall*researchAllTechsFromUnit)(int, int);
extern int(*sub_4E2CB0)();
extern int(*somethingAIType)();
int CreateUnitHash(CUnit *a1);
bool *unpackUnitData(CUnit *a1, bool *a2);
int packUnitData(CUnit *a1, int a2);
extern int(*sub_4E3DC0)();
extern void(*networkTBLPlayerMessage)();
extern int (__stdcall*CTF_FinishedCaptureFlagEvent)(int);
extern int (__stdcall*sub_4E3F10)(int);
extern int (__stdcall*CTF_TakeFlagEvent)(int);
char orders_CTFCOP2(CUnit *unit);
extern int (__fastcall*CTFCOP_CheckForFlagCapture)(CUnit *unit, CUnit *a2);
CUnit *orders_CTFCOP1(CUnit *a1);
int toggleUnitPath(CUnit *a1);
extern int(*getAllocatedPath)();
extern int (__stdcall*sub_4E4380)(int);
extern int (__stdcall*sub_4E44B0)(int);
extern int (__stdcall*sub_4E4520)(int);
int sub_4E4590(dialog *a1);
int sub_4E4670(dialog *a1);
extern int (__stdcall*sub_4E46A0)(int, int);
extern void (__fastcall*sub_4E4750)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*sub_4E4770)(dialog *dlg, int x, int y, rect *dst);
extern int(*j_BWFXN_NextFrameHelperFunctionTarget)();
extern char (__fastcall*sub_4E4820)(dialog *a1);
extern bool (__fastcall*dlgfatal_loop)(dialog *dlg, struct dlgEvent *evt);
extern int(*load_DLGFatal_BIN)();
int isAttemptingProtossBuild(CUnit *a1);
char orders_Warpin(CUnit *a1);
char orders_ProbeBuild(CUnit *a1);
void orders_bldgUnderConstruction_Protoss(CUnit *a1, __int16 a2);
extern void (__stdcall*sub_4E51C0)(dialog *dlg, __int16 a2, unsigned __int16 a3);
extern int(*sub_4E5290)();
void printStatresInfo(dialog *a1, __int16 a2, int a3, int a4, int a5);
void showSupplyInfo(dialog *a1, __int16 a2, unsigned __int16 a3, unsigned __int16 a4);
extern void (__fastcall*statRes_Text_Update)(dialog *dlg, int x, int y, rect *dst);
extern int (__stdcall*setCountdownTimerString)(char *source);
extern int(*DisableCountdownTimer)();
extern void (__fastcall*StatRes_MainProc)(dialog *a1);
extern void (__stdcall*sub_4E57D0)(int a1);
extern bool (__fastcall*StatRes_CustomCtrl)(dialog *dlg, dlgEvent *evt);
void StatRes_RegisterCustomProcs(dialog *a1);
extern bool (__fastcall*StatRes_DialogInteract)(dialog *dlg, dlgEvent *evt);
extern int(*load_StatRes_BIN)();
BOOL sub_4E5AD0(CUnit *a1);
extern int(*sub_4E5B30)();
extern signed int (__fastcall*getUpdatedSightRange)(int a1, CUnit *a2, int a3);
unsigned __int32 UnitIsInvincible_(CUnit *a1);
extern int(*sub_4E5C90)();
void RemoveOverlays(CUnit *a1, unsigned int a2, unsigned int a3);
extern int(*sub_4E5D50)();
void sub_4E5D60(CUnit *result, UnitType a2);
int isUnitVisible(CUnit *a1);
int isTargetVisible(CUnit *a1, CUnit *a2);
char getRightClickActionOrder(CUnit *a1);
extern int(*sub_4E5EE0)();
extern int(*sub_4E5F00)();
extern void (__stdcall*refreshUnitVision)(CUnit *a1);
extern int(*moveScreenToUnit)();
extern CImage *(__fastcall*sub_4E6060)(CUnit *a1, char a2, char a3, char a4);
void UpdateUnitDamageOverlay(CUnit *a1);
void CreateShieldOverlay(CUnit *a2, int direction);
char CreateUnitSelection(CUnit *a1, char a2);
char sub_4E6260(char a1, CUnit *a2);
char DestroyUnitSelection(CUnit *a1);
char sub_4E62F0(CUnit *a1);
extern int(*sub_4E6310)();
int unitDeathSomething_0(CUnit *a1);
CUnit *initUnitTrapDoodad(CUnit *a1);
extern int(*_CreateDashedSelection)();
int SetConstructionGraphic(CUnit *a1, int a2);
int isConstructingAddon(CUnit *a1);
extern int(*CancelAddon_Direct)();
int orders_NukeTrain(CUnit *a1);
extern char (__stdcall*orders_PlaceAddon)(CUnit *a1);
extern int (__thiscall*unitIsActiveTransport)(CUnit *this_);
BOOL sub_4E6BE0(CUnit *a1, CUnit *a2);
extern int(*sub_4E6C00)();
BOOL sub_4E6C10(CUnit *a1, signed int x, signed int y);
bool *getLoadedUnitFromIndex(CUnit *a1, int a2);
bool *getFirstLoadedUnit(CUnit *a1);
signed int iterateLoadedUnits(CUnit *a1, int (__fastcall *a2)(_DWORD, _DWORD), int a3);
signed int getFirstLoadedWorker(CUnit *a1);
int CanBeEnteredBy(CUnit *transport, CUnit *unit);
signed int sub_4E6EF0(CUnit *a1, int a2);
signed int isUnitLoaded(CUnit *a1);
extern int (__thiscall*getLoadedSpaceAmount)(CUnit *this_);
BOOL sub_4E72E0(CUnit *a1);
char orders_TransportIdle(CUnit *a1);
char orders_Pickup3_0(CUnit *a1);
extern signed int (__stdcall*AI_GetTransportAssist)(CUnit *a1, int a2, int a3);
char transportIdleOpen(CUnit *a1);
BOOL canUnload(int a1, CUnit *unit, Position *outPos);
extern char (__stdcall*orders_MoveUnload)(CUnit *a1);
char sub_4E78E0(CUnit *a1, CUnit *a2);
char orders_Pickup4_0(CUnit *a1);
char orders_EnterTransport(CUnit *a1);
int sub_4E7E10(CUnit *a1, int a2);
signed int Unload_(CUnit *a1);
char orders_Unload(CUnit *a1);
CUnit *IterateUnitsAtLocationTargetProc(int (__fastcall *a1)(CUnit *, CUnit *), int eax0, CUnit *a2);
CUnit *_CreateSplashWeaponProc(__int16 a1, __int16 a2, __int16 a3, int (__fastcall *a4)(CUnit *, CUnit *), CUnit *a5);
CUnit *GetNearest(int a1, CUnit *a2, __int16 a3, __int16 a4, signed int a5, signed int a6, int a7, int a8, int (__fastcall *a9)(CUnit *, UnitType), void *data);
CUnit *sub_4E8660(__int16 a1, __int16 a2, int a3, int (__fastcall *a4)(_DWORD, _DWORD), int unit_type);
CUnit *GetNearestUnitFrom(__int16 a1, __int16 a2, __int16 a3, int (__fastcall *a4)(_DWORD, _DWORD), int unit_type);
CUnit *AI_ClosestUnit(CUnit *a1, int a2, int (__fastcall *a3)(CUnit *, CUnit *), CUnit *unit_type);
CUnit *AI_BestUnit_InBox(__int16 a1, CUnit *a2, int (__fastcall *a3)(CUnit *, CUnit *), CUnit *a4);
CUnit *ModifyUnit_maybe(Box16 *a1, void *a2, int (__fastcall *a3)(CUnit *, void *));
extern int(*DlgLatency)();
bool sub_4E8920(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*network_latencyRadioBtn)(dialog *dlg, dlgEvent *evt);
extern int(*sub_4E89A0)();
extern int(*sub_4E89C0)();
void CMDACT_SetLatency(dialog *a1);
extern bool (__fastcall*netdlg_BINDLG_Main)(dialog *dlg, dlgEvent *evt);
extern void(*sub_4E8BB0)();
extern int (__stdcall*pixelPosHasCreep)(__int16);
extern int(*sub_4E8C00)();
extern int(*sub_4E8C20)();
extern int(*sub_4E8C60)();
extern int (__fastcall*larvaCounterProc)(CUnit *a1, CUnit *a2);
extern int (__stdcall*sub_4E8CB0)(int, int);
extern int(*UpdateLarvaOrderState_TooFar)();
signed int sub_4E8E10(CUnit *a1, int a2);
extern int (__stdcall*UpdateHarvestValues)(int);
signed int ChkLarvaStray(CUnit *a1, unsigned int a2, unsigned int a3);
extern void (__stdcall*ChkLarvaStray_0)(CUnit *a1, int a2, int a3);
char orders_StopCreepGrowth(CUnit *a1);
char orders_InitCreepGrowth(CUnit *a1);
void sub_4E97C0(CUnit *a1);
char sub_4E99D0(CUnit *a1);
char orders_DroneLand(CUnit *a1, int a2);
int orders_Larva(CUnit *a1);
char performNydusCanalMove(CUnit *a1, CUnit *a2);
char orders_InfestMine4(CUnit *a1, CUnit *a2);
void orders_EnterNydusCanal(CUnit *a1);
char orders_InfestMine1(CUnit *a1, CUnit *a2);
void secondaryOrd_SpawningLarva(CUnit *a1);
void secondaryOrd_SpreadCreepSpawningLarva(CUnit *a1);
extern int (__stdcall*sub_4EA940)(int);
BOOL writeUnitPointer(int a1, CUnit *a2, FILE *a3);
extern int(*sub_4EA9D0)();
extern int (__stdcall*sub_4EAA80)(int);
extern int (__stdcall*WriteUnits)(FILE *);
extern int(*initializeGlobUnitCount)();
extern int(*mapTransferVector_clear)();
extern int(*sub_4EAF30)();
extern int(*sub_4EAF50)();
extern int (__stdcall*mapStringCreate)(char, int, int, char *source, char *);
extern int(*mapDataTransfer)();
extern int (__thiscall*sub_4EB070)(CUnit *this_);
extern int(*sub_4EB090)();
extern int(*sub_4EB0C0)();
extern int (__thiscall*sub_4EB0F0)(CUnit *this_);
extern int(*setNextWaypoint)();
extern int (__thiscall*SetUnitUnderDisruptionWeb)(CUnit *this_);
extern char (__fastcall*sub_4EB240)(int a1, CUnit *a2);
int setResourceTarget(CUnit *a1);
extern int(*sub_4EB2E0)();
extern int(*sub_4EB2F0)();
void UpdateEnergyTimer(CUnit *a1);
int orders_HoldPositionSuicidal(CUnit *a1);
int sub_4EB5E0(CUnit *a1);
extern int (__stdcall*sub_4EB660)(char);
signed int moveToTarget(CUnit *a1, CUnit *a2);
signed int SetMoveTarget_xy(int a1, int a2, int a3, CUnit *a4);
signed int sub_4EB900(CUnit *a1, CUnit *a2);
extern int(*Warping_SetMoveTarget)();
int _moveToTarget(CUnit *a1, CUnit *a2);
CSprite *UnitBeginAcquireMoveTarget(int a1, CUnit *a2, int a3);
void SetUnitPosition(CUnit *unit, __int16 pos_x, __int16 pos_y);
__int16 sub_4EBAE0(CUnit *unit, __int16 pos_x, __int16 pos_y);
char RefreshSprite(CSprite *a1, unsigned __int8 a2);
extern void (__thiscall*sub_4EBC30)(CUnit *this_);
char sub_4EBDB0(CUnit *a1);
CUnit *sub_4EBDE0(CUnit *result);
void UpdateUnitSpriteInfo(CUnit *a1);
char ordersIDCases(CUnit *a1);
char sub_4EC120(CUnit *a1);
char performSecondaryOrders(CUnit *a1);
char updateUnitTimers(CUnit *a1);
extern void (__thiscall*unitUpdate)(CUnit *this_);
char ordersEntries(CUnit *a1, int ecx0);
extern int (__thiscall*UpdateUnitOrderData)(CUnit *this_);
extern int(*UpdateUnits)();
extern void (__cdecl*initializeDefaultPlayerNames)();
signed int gluLogin_CharacterCreate_CheckDuplicate(char *a1);
extern int(*sub_4ED3E0)();
signed int gluLogin_Activate(dialog *a1);
extern int(*sub_4ED440)();
extern void (__stdcall*ID_Constructor)(CharacterData *a1);
extern int(*sub_4ED500)();
extern int(*sub_4ED530)();
u32 gluLogin_SetSelect_Evt(dialog *a1);
extern int(*sub_4ED620)();
void gluLogin_Listbox_Init_Evt(dialog *a1);
extern int (__stdcall*gluLogin_Init)(int);
void j_genericListboxDropdown(dialog *a1);
extern bool (__fastcall*gluLogin_Listbox)(dialog *dlg, dlgEvent *evt);
extern char (__stdcall*gluLogin_Exit)(dialog *a1);
extern char (__stdcall*gluLogin_CharacterCreation)(dialog *a1);
extern bool (__fastcall*gluLogin_Main)(dialog *dlg, struct dlgEvent *evt);
extern int(*loadMenu_gluLogin)();
extern HWND (__stdcall*GetClassWindow)(const char *a1);
extern int (__thiscall*openDlg)(LPCSTR lpDirectory, unsigned __int8 *, int);
extern int (__stdcall*sub_4EDEF0)(int);
extern int (__stdcall*sub_4EDF20)(int csidl, const char *a2);
extern void (__thiscall*destroyFileFindIndexer)(bool exit_code);
extern void (__cdecl*FastIndexInit)();
extern int (__stdcall*mouseOver_Loading_CB)(int);
extern int(*SinglePlayerMeleeInitGame)();
extern void (__cdecl*BWFXN_InitializePlayerConsole)();
extern int(*sub_4EE210)();
extern void (__cdecl*LoadRaceUI)();
extern int(*RestartGame)();
extern int(*LoadGameCreate)();
extern int(*LevelCheatInitGame)();
extern void (__cdecl*DestroyGame)();
extern void (__cdecl*hotkeyRemapping)();
extern int(*LoadGameCore)();
extern int(*GameInit)();
extern int(*sub_4EEFD0)();
extern int(*LoadGameInit)();
extern int (__thiscall*DrawDialogImage)(rect *this_, Bitmap *a2, int a3, int a4, int a5);
extern int(*sub_4EF530)();
extern void (__fastcall*genericImageUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericDlgUpdate)(dialog *dlg, int x, int y, rect *dst);
int sub_4EF600(rect *a1, unsigned int a2, __int16 a3, __int16 a4, int a5);
extern int (__stdcall*sub_4EF6D0)(char);
extern int (__stdcall*sub_4EF710)(int, int, int, int);
extern int(*sub_4EF7E0)();
extern int(*sub_4EF7F0)();
void DlgDrawText(rect *a1, dialog *a2, int a3, int a4);
extern void (__fastcall*genericCStaticUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericRStaticUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericLStaticUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericEditUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericCheckboxUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericOptionUpdate)(dialog *dlg, int x, int y, rect *dst);
void DrawStandardButtonGraphic(dialog *a2, rect *a3);
void DrawAlternateButtonGraphic(dialog *a1, rect *a2);
void DrawButtonImage(dialog *a1, rect *a2);
extern int(*sub_4F02C0)();
extern void (__fastcall*genericBtnUpdate)(dialog *dlg, int x, int y, rect *dst);
extern int(*contour_gen_bottomRight)();
extern int(*contour_gen_topRight)();
extern int(*contour_gen_leftTop)();
extern int(*contour_gen_bottomLeft)();
extern int(*sub_4F1680)();
extern int (__stdcall*sub_4F16C0)(int, int, int);
extern int(*sub_4F17C0)();
int sub_4F1870(CUnit *a1, __int16 a2, __int16 a3);
signed int sub_4F1980(CUnit *a1);
extern int (__stdcall*sub_4F1A20)(int);
signed int sub_4F1B70(CUnit *a1);
int sub_4F1C70(CUnit *a1, int a2);
int sub_4F20D0(CUnit *a1);
signed int sub_4F2160(CUnit *a1);
extern int(*sub_4F2240)();
int sub_4F2260(CUnit *a1, int a2, CUnit *a3);
int sub_4F29E0(CUnit *a1, int a2);
signed int sub_4F2A70(CUnit *a1, CUnit *a2);
signed int sub_4F2DE0(CUnit *a1);
void sub_4F2F00(dialog *a1);
extern int(*sub_4F3020)();
void sub_4F3040(dialog *a1);
void SetTargetDlgText(int a2);
extern bool (__fastcall*textBox_ctrl_charEvent)(dialog *a1, dlgEvent *a2);
extern int(*sendChatMessage)();
void onSendText(dialog *a1, dlgEvent *a2, int a3);
extern int (__fastcall*textbox_CtrlInteract)(dialog *dlg, struct dlgEvent *evt);
signed int textbox_DLG_Init_Evt(dialog *a1);
extern bool (__fastcall*textbox_DLG_Interact)(dialog *dlg, dlgEvent *evt);
extern int(*ctextbox_BIN)();
void destroyPowerupImageOverlay(CUnit *a1);
int sub_4F39A0(int a1, int a2, CUnit *a3);
signed int sub_4F3A80(CUnit *a1);
extern int (__stdcall*sub_4F3AF0)(char);
extern char (__stdcall*ResetUnitPowerup)(CUnit *a1);
void killPowerup(CUnit *a3);
extern char (__stdcall*sub_4F3CA0)(CUnit *a3, CUnit *a4);
CUnit *orders_Powerup2(CUnit *a1);
extern int(*ProgressDownload_maybe)();
extern int(*sub_4F40C0)();
extern int(*sub_4F40D0)();
extern int(*LobbyLoopTurns)();
extern char (__fastcall*RemoveAcidSpores)(int a1, CUnit *a2);
extern int (__thiscall*GetAcidSporeImage)(CUnit *this_);
void sub_4F4240(CUnit *a1);
int sub_4F4260(CUnit *a1);
char sub_4F4290(CUnit *a1);
void UpdateAcidSporeOverlays(CUnit *a1);
char CreatePlagueOverlay(CUnit *a1);
char sub_4F45B0(CUnit *a1);
int CreateEnsnareOverlay(CUnit *a1);
CUnit *sub_4F4640(CUnit *result);
extern int (__fastcall*CorrosiveAcidProc)(CUnit *a1, int player_id);
extern int (__fastcall*EnsnareProc)(CUnit *a1, CUnit *a2);
void CloakProc(CUnit *a1);
void CorrosiveAcidHit(__int16 x, __int16 y, int player_id);
void ConsumeHit(CUnit *target, CUnit *attacker);
void EnsnareHit(__int16 x, __int16 y, CUnit *attacker);
extern void (__stdcall*DarkSwarmHit)(int x, __int16 y, unsigned __int8 player_id);
extern void (__stdcall*BroodlingHit)(CUnit *a2, CUnit *a3);
extern int (__fastcall*PlagueHit)(CUnit *a1, CUnit *a2);
void Plague_(__int16 a1, __int16 a2, CUnit *a3);
extern void (__thiscall*sub_4F4B70)(CUnit *this_);
extern int(*nullsub_68)();
extern int (__stdcall*sub_4F4BC0)(int, int, int, int);
extern int (__stdcall*sub_4F4C00)(int, int);
extern int(*sub_4F4CF0)();
extern bool (__fastcall*statfluf_DLG_Interact)(dialog *dlg, dlgEvent *evt);
extern int(*load_statfluf_BIN)();
extern int(*sub_4F4F50)();
extern int(*drawGameMenuContextHelp)();
extern void (__fastcall*statf10_ButtonUpdate)(dialog *dlg, int x, int y, rect *dst);
extern int(*sub_4F50D0)();
char setActiveDlgElement(dialog *a1, struct dlgEvent *a2);
void load_gamemenu(dialog *result);
extern bool (__fastcall*statf10_ButtonInteract)(dialog *dlg, dlgEvent *evt);
int Statf10_RegisterCustomProcs(dialog *a1);
extern bool (__fastcall*Statf10_DialogProc)(dialog *dlg, dlgEvent *evt);
extern int(*load_Statf10_BIN)();
extern int(*load_helpmenu)();
extern int(*sub_4F5460)();
void help_listbox_create(dialog *a1);
extern bool (__fastcall*help_Listbox)(dialog *dlg, dlgEvent *evt);
extern int(*help_BINDLG_CustomCtrlID)();
extern bool (__fastcall*help_BINDLG)(dialog *dlg, dlgEvent *evt);
extern void(*sub_4F56F0)();
extern int (__stdcall*msgfltr_Cancel)(char);
extern void (__fastcall*genericPopupDlgInteract)(dialog *a1, dlgEvent *a2);
extern void (__fastcall*BWFXN_OpenGameDialog)(char *a1, FnInteract a2);
extern int(*sub_4F5930)();
extern void (__fastcall*DLG_DrawTextUpdate_CB)(dialog *dlg, int x, int y, rect *dst);
bool sub_4F59E0(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*wait_BINDLG)(dialog *dlg, dlgEvent *evt);
extern int(*sub_4F5B70)();
extern int(*load_wait)();
extern bool (__fastcall*okcancel_Interact)(dialog *dlg, struct dlgEvent *evt);
extern void (__stdcall*loadOKCancelBIN)(HANDLE phFile);
int loadOKBIN(int a1, const char *a2, HANDLE phFile);
extern int (__stdcall*loadOKCancelDialog)(int, char *a1);
extern int(*sub_4F60E0)();
extern int(*sub_4F60F0)();
signed int AppAddExit(AppExitHandle a1);
char ApplyHallucinationStats(CUnit *a1);
char RemoveStasisField(CUnit *a1);
CThingy *replaceFeedbackSprite(CUnit *a1, int a2);
extern int(*CHK_UNIT_FinalCreateStep)();
int sub_4F65B0(CUnit *a1, CUnit *a2);
char sub_4F66D0(CUnit *unit);
extern int (__thiscall*MaelStromProc)(CUnit *a1);
int StasisFieldOverlay(CUnit *a1, unsigned __int8 a2);
u8 sub_4F6830(CUnit *a1);
void MaelstromHit(int x, __int16 y, CUnit *a3);
extern int (__fastcall*StasisFieldProc)(CUnit *a1, CUnit *a2);
signed int MindControl_Hit(CUnit *a1, CUnit *a2);
extern char (__stdcall*orders_CastMindControl)(CUnit *a1);
extern int (__thiscall*StasisFieldHit)(int position_x, int);
extern int (__stdcall*DisruptionWebHit)(int a1, __int16 a2, char a3);
extern u32 (__thiscall*sub_4F6B90)(CUnit *this_, int a2);
char orders_Hallucination1(CUnit *a1);
extern char (__stdcall*orders_Feedback)(CUnit *a1);
char orders_RightClickAction(CUnit *a1, int a2);
int orders_Special(CUnit *a1);
extern int(*RdyZFrame)();
extern bool (__fastcall*gluRdyZ_BINDLG_Loop)(dialog *dlg, struct dlgEvent *evt);
extern void(*loadMenu_gluRdyZ)(void);
void *RdyTFrame(dialog *a1);
extern bool (__fastcall*gluRdyT_BINDLG_Loop)(dialog *dlg, dlgEvent *evt);
extern void(*loadMenu_gluRdyT)(void);
extern int(*rdyPFrame)();
extern bool (__fastcall*gluRdyP_BINDLG_Loop)(dialog *dlg, dlgEvent *evt);
extern void(*loadMenu_gluRdyP)(void);
void PlayMovieWithIntro(Cinematic a1);
extern int(*nullsub_4)();
extern int (__cdecl*__ld12cvt_0)(int, int);
extern int (__cdecl*___ld12cvt)(int, int);
extern int (__cdecl*___strgtold12_0)(int, int);
extern int (__cdecl*____strgtold12)(int, int);
extern int(*false_0)();
extern int(*LeagueEventConstructor)();
extern int(*_list_ctor)();
extern int(*_initFloat)();
extern int(*_initFloat_0)();
extern int(*CriticalSectionConstructor_1)();
extern int(*_initFloat_1)();
extern int(*_initFloat_2)();
extern int(*_initFloat_3)();
extern int(*ExceptionFilterConstructor)();
extern int(*_initFloat_4)();
extern int(*_list_ctor_0)();
extern int(*_initFloat_5)();
extern int(*_initFloat_6)();
extern int(*_initFloat_7)();
extern int(*_initFloat_8)();
extern int(*_initFloat_9)();
extern int(*_initFloat_10)();
extern int(*_initFloat_11)();
extern int(*_initFloat_12)();
extern int(*_initFloat_13)();
extern int(*_initFloat_14)();
extern int(*_initFloat_15)();
extern int(*_initFloat_16)();
extern int(*_initFloat_17)();
extern int(*_initFloat_18)();
extern int(*_initFloat_19)();
extern int(*_initFloat_20)();
extern int(*_initFloat_21)();
extern int(*CriticalSectionConstructor_0)();
extern int(*_list_sfx_ctor)();
extern int(*_initFloat_22)();
extern int(*_initFloat_23)();
extern int(*_list_netMode_ctor)();
extern int(*_initFloat_24)();
extern int(*_list_characters_ctor)();
extern int(*_initFloat_25)();
extern int(*_initFloat_26)();
extern int(*_initFloat_27)();
extern int(*_initFloat_28)();
extern int(*_list_ctor_1)();
extern int(*_initFloat_29)();
extern int(*_initFloat_30)();
extern int(*_list_ctor_2)();
extern int(*_initFloat_31)();
extern int(*_initFloat_32)();
extern int(*_initFloat_33)();
extern int(*_initFloat_34)();
extern int(*_initFloat_35)();
extern int(*_initFloat_36)();
extern int(*_initFloat_37)();
extern int(*_initFloat_38)();
extern int(*_list_modem_ctor)();
extern int(*_list_phonebook_ctor)();
extern int(*_initFloat_39)();
extern int(*_initFloat_40)();
extern int(*_list_ctor_3)();
extern int(*_initFloat_41)();
extern int(*_list_BNGameTypeComboBox_ctor)();
extern int(*_initFloat_42)();
extern int(*_initFloat_43)();
extern int(*_initFloat_44)();
extern int(*_list_BNMapComboBox_ctor)();
extern int(*_initFloat_45)();
extern int(*_initFloat_46)();
extern int(*_initFloat_47)();
extern int(*_initFloat_48)();
extern int(*_initFloat_49)();
extern int(*_initFloat_50)();
extern int(*_initFloat_51)();
extern int(*_initFloat_52)();
extern int(*_initFloat_53)();
extern int(*_initFloat_54)();
extern int(*_initFloat_55)();
extern int(*_initFloat_56)();
extern int(*_initFloat_57)();
extern int(*_initFloat_58)();
extern int(*_initFloat_59)();
extern int(*_initFloat_60)();
extern int(*_initFloat_61)();
extern int(*_initFloat_62)();
extern int(*_initFloat_63)();
extern int(*_initFloat_64)();
extern int(*_initFloat_65)();
extern int(*_initFloat_66)();
extern int(*_initFloat_67)();
extern int(*_initFloat_68)();
extern int(*_initFloat_69)();
extern int(*_initFloat_70)();
extern int(*_initFloat_71)();
extern int(*_list_playerTriggers_ctor)();
extern int(*_initFloat_72)();
extern int(*_initFloat_73)();
extern int(*_initFloat_74)();
extern int(*_initFloat_75)();
extern int(*_initFloat_76)();
extern int(*_initFloat_77)();
extern int(*_initFloat_78)();
extern int(*_initFloat_79)();
extern int(*_initFloat_80)();
extern int(*_initFloat_81)();
extern int(*_initFloat_82)();
extern int(*_initFloat_83)();
extern int(*_initFloat_84)();
extern int(*_initFloat_85)();
extern int(*_initFloat_86)();
extern int(*_initFloat_87)();
extern int(*_initFloat_88)();
extern int(*_initFloat_89)();
extern int(*_initFloat_90)();
extern int(*_list_league_ctor)();
extern int(*_initFloat_91)();
extern int(*_initFloat_92)();
extern int(*_initFloat_93)();
extern int(*_initFloat_94)();
extern int(*_initFloat_95)();
extern int(*_initFloat_96)();
extern int(*_initFloat_97)();
extern int(*_initFloat_98)();
extern int(*_initFloat_)();
extern int(*_initFloat__0)();
extern int(*_initFloat__1)();
extern int(*_initFloat__2)();
extern int(*_initFloat__3)();
extern int(*_initFloat__4)();
extern int(*_initFloat__5)();
extern int(*_initFloat__6)();
extern int(*_initFloat__7)();
extern int(*_initFloat__8)();
extern int(*_initFloat__9)();
extern int(*_initFloat__10)();
extern int(*_initFloat__11)();
extern int(*_list_banned_ctor)();
extern int(*_initFloat__12)();
extern int(*_initFloat__13)();
extern int(*_initFloat__14)();
extern int(*_initFloat__15)();
extern int(*_list_ctor_4)();
extern int(*_list_ctor_5)();
extern int(*_initFloat__16)();
extern int(*_initFloat__17)();
extern int(*_initFloat__18)();
extern int(*_initFloat__19)();
extern int(*_initFloat__20)();
extern int(*_initFloat__21)();
extern int(*_initFloat__22)();
extern int(*_initFloat__23)();
extern int(*_initFloat__24)();
extern int(*_initFloat__25)();
extern int(*_initFloat__26)();
extern int(*_list_briefingTriggers_ctor)();
extern int(*_initFloat__27)();
extern int(*_initFloat__28)();
extern int(*_initFloat__29)();
extern int(*_initFloat__30)();
extern int(*_initFloat__31)();
extern int(*_initFloat__32)();
extern int(*_initFloat__33)();
extern int(*_initFloat__34)();
extern int(*_initFloat__35)();
extern int(*_initFloat__36)();
extern int(*_list_ctor_6)();
extern int(*_initFloat__37)();
extern int(*_initFloat__38)();
extern int(*_initFloat__39)();
extern int(*_initFloat__40)();
extern int(*_initFloat__41)();
extern int(*_initFloat__42)();
extern int(*_initFloat__43)();
extern int(*_initFloat__44)();
extern int(*_initFloat__45)();
extern int(*_initFloat__46)();
extern int(*_initFloat__47)();
extern int(*_initFloat__48)();
extern int(*_initFloat__49)();
extern int(*_initFloat__50)();
extern int(*_initFloat__51)();
extern int(*_initFloat__52)();
extern int(*_initFloat__53)();
extern int(*_initFloat__54)();
extern int(*_initFloat__55)();
extern int(*_initFloat__56)();
extern int(*_initFloat__57)();
extern int(*_initFloat__58)();
extern int(*_initFloat__59)();
extern int(*_initFloat__60)();
extern int(*_initFloat__61)();
extern int(*_initFloat__62)();
extern int(*_initFloat__63)();
extern int(*_initFloat__64)();
extern int(*SBigConstructor)();
extern int(*SBigConstructor_0)();
extern int(*_initFloat__65)();
extern int(*_initFloat__66)();
extern int(*_initFloat__67)();
extern int(*_initFloat__68)();
extern int(*_initFloat__69)();
extern int(*_initFloat__70)();
extern int(*_initFloat__71)();
extern int(*_initFloat__72)();
extern int(*_initFloat__73)();
extern int(*_initFloat__74)();
extern int(*_initFloat__75)();
extern int(*_initFloat__76)();
extern int(*_initFloat__77)();
extern int(*_initFloat__78)();
extern int(*_initFloat__79)();
extern int(*_initFloat__80)();
extern int(*_initFloat__81)();
extern int(*_initFloat__82)();
extern int(*_initFloat__83)();
extern int(*_initFloat__84)();
extern int(*_initFloat__85)();
extern int(*_initFloat__86)();
extern int(*_initFloat__87)();
extern int(*_initFloat__88)();
extern int(*_initFloat__89)();
extern int(*_initFloat__90)();
extern int(*_initFloat__91)();
extern int(*_initFloat__92)();
extern int(*_initFloat__93)();
extern int(*_initFloat__94)();
extern int(*_initFloat__95)();
extern int(*_initFloat__96)();
extern int(*_initFloat__97)();
extern int(*_initFloat__98)();
extern int(*_initFloat__)();
extern int(*_initFloat___0)();
extern int(*_initFloat___1)();
extern int(*_initFloat___2)();
extern int(*_initFloat___3)();
extern int(*_initFloat___4)();
extern int(*_initFloat___5)();
extern int(*_initFloat___6)();
extern int(*_initFloat___7)();
extern int(*_initFloat___8)();
extern int(*_initFloat___9)();
extern int(*_initFloat___10)();
extern int(*_initFloat___11)();
extern int(*_initFloat___12)();
extern int(*_initFloat___13)();
extern int(*_initFloat___14)();
extern int(*_initFloat___15)();
extern int(*_initFloat___16)();
extern int(*_initFloat___17)();
extern int(*_list_areaFixups_ctor)();
extern int(*_initFloat___18)();
extern int(*_initFloat___19)();
extern int(*_initFloat___20)();
extern int(*_initFloat___21)();
extern int(*_initFloat___22)();
extern int(*_initFloat___23)();
extern int(*_initFloat___24)();
extern int(*_initFloat___25)();
extern int(*_initFloat___26)();
extern int(*_initFloat___27)();
extern int(*_initFloat___28)();
extern int(*_initFloat___29)();
extern int(*_initFloat___30)();
extern int(*_initFloat___31)();
extern int(*_initFloat___32)();
extern int(*CriticalSectionConstructor)();
extern int(*_initFloat___33)();
extern int(*_initFloat___34)();
extern int(*_initFloat___35)();
extern int(*_initFloat___36)();
extern int(*_initFloat___37)();
extern int(*_initFloat___38)();
extern int(*_initFloat___39)();
extern int(*_initFloat___40)();
extern int(*_initFloat___41)();
extern int(*_initFloat___42)();
extern int(*_list_ctor_7)();
extern int(*_initFloat___43)();
extern int(*_initFloat___44)();
extern int(*_initFloat___45)();
extern int(*_initFloat___46)();
extern int(*_initFloat___47)();
extern int(*_initFloat___48)();
extern int(*_initFloat___49)();
extern int(*_initFloat___50)();
extern int(*_initFloat___51)();
extern int(*_initFloat___52)();
extern int(*_list_ctor_8)();
extern int(*_initFloat___53)();
extern int(*_initFloat___54)();
extern int(*UIDlgListConstructor)();
extern int(*_initFloat___55)();
extern int(*_initFloat___56)();
extern int(*_initFloat___57)();
extern int(*_initFloat___58)();
extern int(*_initFloat___59)();
extern int(*_initFloat___60)();
extern int(*_initFloat___61)();
extern int(*_initFloat___62)();
extern int(*_initFloat___63)();
extern int(*_initFloat___64)();
extern int(*_initFloat___65)();
extern int(*_initFloat___66)();
extern int(*_initFloat___67)();
extern int(*_initFloat___68)();
extern int(*_initFloat___69)();
extern void (__cdecl*LeagueEventDestructor)();
extern void (__cdecl*_list_dtor)();
extern void (__cdecl*CriticalSectionDestructor_1)();
extern void (__cdecl*j_ExceptionFilterDestructor)();
extern void (__cdecl*_list_dtor_0)();
extern void (__cdecl*CriticalSectionDestructor_0)();
extern void (__cdecl*_list_sfx_dtor)();
extern void (__cdecl*_list_netMode_dtor)();
extern void (__cdecl*_list_characters_dtor)();
extern void (__cdecl*_list_dtor_1)();
extern void (__cdecl*_list_dtor_2)();
extern void (__cdecl*_list_modem_dtor)();
extern void (__cdecl*_list_phonebook_dtor)();
extern void (__cdecl*_list_dtor_3)();
extern void (__cdecl*_list_BNGameTypeComboBox_dtor)();
extern void (__cdecl*_list_BNMapComboBox_dtor)();
extern void (__cdecl*_list_playerTriggers_dtor)();
extern void (__cdecl*_list_league_dtor)();
extern void (__cdecl*_list_banned_dtor)();
extern void (__cdecl*_list_dtor_4)();
extern void (__cdecl*_list_dtor_5)();
extern void (__cdecl*_list_briefingTriggers_dtor)();
extern void (__cdecl*_list_dtor_6)();
extern void (__cdecl*SBigDestructor)();
extern void (__cdecl*SBigDestructor_0)();
extern void (__cdecl*_list_areaFixups_dtor)();
extern void (__cdecl*CriticalSectionDestructor)();
extern void (__cdecl*_list_dtor_7)();
extern void (__cdecl*_list_dtor_8)();
extern void (__cdecl*UIDlgListDestructor)();
extern _SCOPETABLE_ENTRY& stru_4FE5F0;
extern CHAR(&ProcName)[];
extern CHAR(&ModuleName)[];
extern _SCOPETABLE_ENTRY& stru_4FE618;
extern char(&aRuntimeError)[15];
extern char(&aTlossError)[14];
extern char(&aSingError)[13];
extern char(&aDomainError)[15];
extern char(&aR6029ThisAppli)[162];
extern char(&aR6028UnableToI)[37];
extern char(&aR6027NotEnough)[53];
extern char(&aR6026NotEnough)[53];
extern char(&aR6025PureVirtu)[38];
extern char(&aR6024NotEnough)[53];
extern char(&aR6019UnableToO)[41];
extern char(&aR6018Unexpecte)[33];
extern char(&aR6017Unexpecte)[45];
extern char(&aR6016NotEnough)[44];
extern char(&aThisApplicatio)[150];
extern char(&aR6009NotEnough)[44];
extern char(&aR6008NotEnough)[42];
extern char(&aR6002FloatingP)[37];
extern char(&aMicrosoftVisua)[37];
extern char(&aRuntimeErrorPr)[];
extern char(&aProgramNameUnk)[];
extern _SCOPETABLE_ENTRY& stru_4FEA28;
extern _SCOPETABLE_ENTRY& stru_4FEA38;
extern _SCOPETABLE_ENTRY(&stru_4FEA48)[2];
extern CHAR(&aFlsfree)[];
extern CHAR(&aFlssetvalue)[];
extern CHAR(&aFlsgetvalue)[];
extern CHAR(&aFlsalloc)[];
extern CHAR(&aKernel32_dll_0)[];
extern _SCOPETABLE_ENTRY& stru_4FEAA0;
extern _SCOPETABLE_ENTRY& stru_4FEAB0;
extern CHAR(&aGetprocesswind)[];
extern CHAR(&aGetuserobjecti)[];
extern CHAR(&aGetlastactivep)[];
extern CHAR(&aGetactivewindo)[];
extern CHAR(&aMessageboxa)[];
extern CHAR(&LibFileName)[];
extern _SCOPETABLE_ENTRY& stru_4FEB30;
extern _SCOPETABLE_ENTRY& stru_4FEB40;
extern _SCOPETABLE_ENTRY& stru_4FEB50;
extern _SCOPETABLE_ENTRY& stru_4FEB60;
extern _SCOPETABLE_ENTRY& stru_4FEB70;
extern CHAR(&aInitializecrit)[];
extern _SCOPETABLE_ENTRY& stru_4FEBA8;
extern _SCOPETABLE_ENTRY& stru_4FEBB8;
extern wchar_t(&aHH)[32];
extern _SCOPETABLE_ENTRY& stru_4FED48;
extern _SCOPETABLE_ENTRY& stru_4FED58;
extern _SCOPETABLE_ENTRY& stru_4FED68;
extern char(&aProgram)[];
extern char(&aABufferOverrun)[160];
extern char(&aBufferOverrunD)[25];
extern char(&aASecurityError)[177];
extern char(&aUnknownSecurit)[];
extern _SCOPETABLE_ENTRY& stru_4FEF18;
extern wchar_t(&asc_4FF028)[33];
extern const WCHAR& SrcStr;
extern _SCOPETABLE_ENTRY(&stru_4FF430)[3];
extern _SCOPETABLE_ENTRY& stru_4FF458;
extern char(&aHhMmSs)[9];
extern char(&aDdddMmmmDdYyyy)[20];
extern char(&aMmDdYy)[9];
extern char(&aPm)[3];
extern char(&aAm)[3];
extern char(&aDecember)[9];
extern char(&aNovember)[9];
extern char(&aOctober)[8];
extern char(&aSeptember)[10];
extern char(&aAugust)[7];
extern char(&aJuly)[5];
extern char(&aJune)[5];
extern char(&aApril)[6];
extern char(&aMarch)[6];
extern char(&aFebruary)[9];
extern char(&aJanuary)[8];
extern void *& off_4FF500;
extern char(&aNov)[4];
extern char(&aOct)[4];
extern char(&aSep)[4];
extern char(&aAug)[4];
extern char(&aJul)[4];
extern char(&aJun)[4];
extern char(&aMay)[4];
extern char(&aApr)[4];
extern char(&aMar)[4];
extern char(&aFeb)[4];
extern char(&aJan)[4];
extern char(&aSaturday)[9];
extern char(&aFriday)[7];
extern char(&aThursday)[9];
extern char(&aWednesday)[10];
extern char(&aTuesday)[8];
extern char(&aMonday)[7];
extern char(&aSunday)[7];
extern char(&aSat)[4];
extern char(&aFri)[4];
extern char(&aThu)[4];
extern char(&aWed)[4];
extern char(&aTue)[4];
extern char(&aMon)[4];
extern char(&aSun)[4];
extern _SCOPETABLE_ENTRY& stru_4FF590;
extern char& byte_4FF59C;
extern char(&aUnmontuewedthu)[21];
extern char& byte_4FF5B4;
extern char(&aAnfebmaraprmay)[36];
extern char(&aTz)[3];
extern _SCOPETABLE_ENTRY& stru_4FF5E0;
extern _SCOPETABLE_ENTRY& stru_4FF5F0;
extern _SCOPETABLE_ENTRY& stru_4FF600;
extern _SCOPETABLE_ENTRY(&stru_4FF610)[2];
extern _SCOPETABLE_ENTRY& stru_4FF640;
extern _SCOPETABLE_ENTRY& stru_4FF650;
extern _SCOPETABLE_ENTRY& stru_4FF660;
extern _SCOPETABLE_ENTRY& stru_4FF670;
extern _SCOPETABLE_ENTRY& stru_4FF680;
extern _SCOPETABLE_ENTRY& stru_4FF690;
extern _SCOPETABLE_ENTRY& stru_4FF6A0;
extern _SCOPETABLE_ENTRY(&stru_4FF6B0)[2];
extern char& byte_4FF6C8;
extern wchar_t(&aNull_0)[7];
extern char(&aNull)[7];
extern _SCOPETABLE_ENTRY(&stru_4FF740)[3];
extern _SCOPETABLE_ENTRY& stru_4FF768;
extern _SCOPETABLE_ENTRY& stru_4FF778;
extern _SCOPETABLE_ENTRY(&stru_4FF788)[2];
extern _SCOPETABLE_ENTRY& stru_4FF7A0;
extern _SCOPETABLE_ENTRY& stru_4FF7B0;
extern _SCOPETABLE_ENTRY(&stru_4FF7C0)[2];
extern _SCOPETABLE_ENTRY& stru_4FF7D8;
extern _SCOPETABLE_ENTRY& stru_4FF7E8;
extern _SCOPETABLE_ENTRY& stru_4FF7F8;
extern _SCOPETABLE_ENTRY& stru_4FF808;
extern _SCOPETABLE_ENTRY& stru_4FF818;
extern _SCOPETABLE_ENTRY& stru_4FF828;
extern _SCOPETABLE_ENTRY& stru_4FF838;
extern CHAR(&aSetsecurityinf)[];
extern CHAR(&aAdvapi32_dll_0)[];
extern char(&aForcehighmem)[];
extern char(&aForcelowmem)[];
extern CHAR(&RootPathName)[];
extern char(&aCreatewindowex)[];
extern char(&aStarcraft_0)[];
extern CHAR(&WindowName)[];
extern char(&aRegisterclass)[];
extern CHAR(&aSwarclass)[];
extern CHAR(&aStarcraftCheck)[];
extern char(&aNew)[];
extern char(&aDelete)[];
extern int& dword_4FF8F8;
extern char(&aLastreplay_0)[11];
extern int(&dword_4FF90C)[7];
extern char(&aShow)[];
extern int (*&off_4FF934)();
extern char(&aHide)[5];
extern char(&aKills)[6];
extern char(&byte_4FF960)[];
extern __int16(&word_4FF964)[];
extern char(&aRazings)[8];
extern char(&aSlaughter)[10];
extern char(&aResources)[10];
extern char(&aMinerals)[9];
extern char(&aGas)[4];
extern char(&aScore)[6];
extern char(&aScoreUnits)[12];
extern char(&aScoreBuildings)[16];
extern char(&aScoreKills)[12];
extern char(&aScoreRazings)[14];
extern char(&aScoreUser)[11];
extern int(&dword_4FFAD4)[];
extern GlueRelated(&stru_4FFAD8)[1];
extern CampaignMenuEntry(&terran_campaign_menu_entries)[16];
extern CampaignMenuEntry(&zerg_campaign_menu_entries)[15];
extern CampaignMenuEntry(&protoss_campaign_menu_entries)[15];
extern CampaignMenuEntry(&terran_expcampaign_menu_entries)[11];
extern CampaignMenuEntry(&zerg_expcampaign_menu_entries)[18];
extern CampaignMenuEntry(&protoss_expcampaign_menu_entries)[10];
extern char(&aRezGlucmpgn_bi)[];
extern char(&filename)[];
extern const char(&aLastreplay_1)[];
extern char(&aLocal_dll)[10];
extern EstablishingShotPosition(&establishingShotPositions)[5];
extern char(&aA_0)[7];
extern EstablishingShot(&establishing_shots)[65];
extern CHAR(&String2)[];
extern char(&aStareditScenar)[];
extern ChkSectionLoader(&chk_loaders_version)[2];
extern ChkSectionLoader(&chk_loaders_lobby)[9];
extern ChkSectionLoader(&chk_loaders_briefing)[2];
extern ChkSectionLoader(&chk_loaders_melee_vanilla)[4];
extern ChkSectionLoader(&chk_loaders_ums_1_00)[19];
extern ChkSectionLoader(&chk_loaders_ums_1_04)[19];
extern ChkSectionLoader(&chk_loaders_melee_broodwar)[5];
extern ChkSectionLoader(&chk_loaders_ums_broodwar_1_04)[15];
extern ChkLoader(&chk_loaders)[3];
extern ChkLoader& dword_5005D8;
extern size_t(&size)[120];
extern char(&byte_5007D8)[256];
extern char(&byte_5008D8)[4];
extern int(&dword_5008EC)[];
extern signed __int32(&volume)[100];
extern __int16(&word_500A94)[];
extern __int16(&word_500A96)[17];
extern __int16(&word_500AB8)[];
extern __int16(&word_500ABA)[31];
extern __int64& cheat_hash_there_is_no_cow_level;
extern __int64& cheat_hash_game_over_man;
extern __int64& cheat_hash_power_overwhelming;
extern __int64& cheat_hash_show_me_the_money;
extern __int64& cheat_hash_whats_mine_is_mine;
extern __int64& cheat_hash_breathe_deep;
extern __int64& cheat_hash_something_for_nothing;
extern __int64& cheat_hash_black_sheep_wall;
extern __int64& cheat_hash_operation_cwal;
extern __int64& cheat_hash_staying_alive;
extern __int64& cheat_hash_medieval_man;
extern __int64& cheat_hash_modify_the_phase_variance;
extern __int64& cheat_hash_war_aint_what_it_used_to_be;
extern __int64& cheat_hash_food_for_thought;
extern __int64& cheat_hash_the_gathering;
extern __int64& cheat_hash_radio_free_zerg;
extern __int64& cheat_hash_ophelia;
extern __int64& cheat_hash_no_glues;
extern __int16(&word_500B98)[];
extern char(&a_mpc)[];
extern char(&a_spc)[5];
extern CinematicIntro(&cinematic_intros)[10];
extern char(&aLastreplay)[11];
extern char(&aCputhrottle)[];
extern char(&aGamma)[];
extern char(&aColorcycle)[];
extern char(&aUnitportraits)[];
extern char *& off_500E40;
extern char *& off_500F60;
extern char(&aGlueBattle_n_9)[43];
extern char(&aGlueBattle_n_8)[];
extern char(&aGlueBattle__10)[];
extern __int16(&word_50110C)[];
extern char(&byte_50110E)[];
extern __int16(&word_50112C)[];
extern char(&keyname)[];
extern bool (__fastcall *(&GenericDlgInteractFxns)[14])(dialog *dlg, struct dlgEvent *evt);
extern void (__fastcall *(&GenericDlgUpdateFxns)[14])(dialog *dlg, int x, int y, rect *dst);
extern int(&dword_501544)[];
extern CndSignature(&stru_50156C)[9];
extern char(&aReplay)[];
extern char(&aSMapsReplaysS_)[];
extern char(&a_)[];
extern CHAR(&String)[];
extern char(&aRezSavegame_bi)[];
extern char(&aStarcraftSw_50)[];
extern char(&aRep)[];
extern char(&a__1)[];
extern char(&aMapsReplays)[];
extern CHAR(&SubBlock)[];
extern char(&aGluePalpvTile_)[20];
extern char(&aGluePaltvTile_)[20];
extern char(&aGluePalzvTile_)[20];
extern char(&aGluePalpdTile_)[20];
extern char(&aGluePaltdTile_)[20];
extern char(&aGluePalzdTile_)[20];
extern char(&aRezGluall_tbl)[];
extern char(&aBackgnd_pcx)[];
extern char(&aDlg_grp)[];
extern char(&aTfont_pcx)[];
extern char(&aTeffect_pcx)[];
extern char(&aStarcraftSw_79)[];
extern char(&aArrow_grp)[];
extern char(&aGlueGeneric)[14];
extern char(&aGlueGamemode)[15];
extern char(&aGlueDirect)[13];
extern char(&aGlueModem)[12];
extern char(&aGlueScore)[12];
extern char(&aGlueLoad)[11];
extern char(&aGlueCreate)[13];
extern char(&aGlueGamesel)[14];
extern char(&aGlueReadyp)[13];
extern char(&aGlueReadyz)[13];
extern char(&aGlueReadyt)[13];
extern char(&aGlueCampaign)[15];
extern char(&aGlueLogin)[12];
extern char(&aGlueBattle_net_0)[17];
extern char(&aGlueChatroom)[15];
extern char(&aGlueSelconn)[14];
extern char(&aGlueSimulate)[14];
extern char(&aGlueMainmenu)[15];
extern char(&a_scm)[];
extern char(&aStarcraftSw_78)[];
extern char(&aRezGlumain_bin)[];
extern char(&aStarcraftSw_77)[];
extern char(&aStaredit_exe)[];
extern char(&aDlgsProtoss_gr)[17];
extern char(&aDlgsTerran_grp)[16];
extern char(&aDlgsZerg_grp)[14];
extern char(&aStarcraftSw_91)[];
extern char(&aArrMapdata_tbl)[16];
extern char(&aArrMapdata_dat)[];
extern char(&aRezCdversion_t)[18];
extern char(&aRezDataversion)[20];
extern char(&aInvalidDataFil)[];
extern char(&asc_501A28)[3];
extern char(&asc_501A2C)[2];
extern char(&aDdemulate)[];
extern char(&aNosound)[];
extern char(&asc_501A44)[];
extern char(&aBroodat_mpq)[];
extern char(&aPatch_rt_mpq)[];
extern char(&aStardat_mpq_0)[];
extern char(&aStardat_mpq)[];
extern char(&aInstall_exe)[13];
extern const char(&aStarcraft_mpq)[];
extern const char(&aBroodwar_mpq)[];
extern char(&aStarcd)[];
extern char(&aVersionD_D_D)[];
extern char(&aFont8)[6];
extern char(&aFont10)[7];
extern char(&aFont14)[7];
extern char(&aFont16)[7];
extern char(&aFont16x)[8];
extern char(&aStarcraftSw_75)[];
extern unsigned __int8& aFindFastIndexe;
extern unsigned __int8& aMomParent;
extern char(&aMicrosoftFindF)[24];
extern char(&aMicrosoftOffic)[34];
extern char(&asc_501B74)[];
extern CHAR(&Operation)[];
extern const char(&empty_string)[3];
extern char(&aRezEpilogx_txt)[];
extern char(&aSS_ccd)[];
extern char(&aSgubon)[7];
extern char(&aSS_clh)[];
extern char(&aSS_gid)[];
extern char(&aFont)[5];
extern char(&aStarcraftSw_74)[];
extern char(&aStarcraftSw_73)[33];
extern const char(&aCrdt_exp)[];
extern const char(&aCrdt_lst)[];
extern const char(&aEpilog)[];
extern char(&aEpilogx)[8];
extern char(&aRezCredits_bin)[];
extern char(&aRezS_txt)[];
extern char(&aDisplaytime)[];
extern char(&aFadespeed)[];
extern char(&aFontcolor)[];
extern char(&aPage)[];
extern char(&aBackground)[];
extern char(&aStarcraftSw_72)[];
extern char(&aFinz09bx)[9];
extern char(&aEstz10x)[8];
extern char(&aEstz09bx)[9];
extern char(&aEstz09x)[8];
extern char(&aEstz08x)[8];
extern char(&aEstz07x)[8];
extern char(&aEstz06x)[8];
extern char(&aEstz05x)[8];
extern char(&aEstz04x)[8];
extern char(&aEstz03x)[8];
extern char(&aEstz02x)[8];
extern char(&aEstz01x)[8];
extern char(&aEstt08x)[8];
extern char(&aEstt07x)[8];
extern char(&aEstt06x)[8];
extern char(&aEstt05bx)[9];
extern char(&aEstt05ax)[9];
extern char(&aEstt04x)[8];
extern char(&aEstt03x)[8];
extern char(&aEstt02x)[8];
extern char(&aEstt01x)[8];
extern char(&aEstp08x)[8];
extern char(&aEstp07x)[8];
extern char(&aEstp06x)[8];
extern char(&aEstp05x)[8];
extern char(&aEstp04x)[8];
extern char(&aEstp03x)[8];
extern char(&aEstp02x)[8];
extern char(&aEstp01x)[8];
extern char(&aEstp10)[7];
extern char(&aEstp09)[7];
extern char(&aEstp08)[7];
extern char(&aEstp07)[7];
extern char(&aEstp06)[7];
extern char(&aEstp05)[7];
extern char(&aEstp04)[7];
extern char(&aEstp03)[7];
extern char(&aEstp02)[7];
extern char(&aEstp01)[7];
extern char(&aEstz10)[7];
extern char(&aEstz09)[7];
extern char(&aEstz08)[7];
extern char(&aEstz07)[7];
extern char(&aEstz06)[7];
extern char(&aEstz05)[7];
extern char(&aEstz04)[7];
extern char(&aEstz03)[7];
extern char(&aEstz02)[7];
extern char(&aEstz01)[7];
extern char(&aEstt12)[7];
extern char(&aEstt11)[7];
extern char(&aEstt09)[7];
extern char(&aEstt08)[7];
extern char(&aEstt06)[7];
extern char(&aEstt05)[7];
extern char(&aEstt04)[7];
extern char(&aEstt03)[7];
extern char(&aEstt02)[7];
extern char(&aEstt01)[7];
extern char(&aEstt0t)[7];
extern char(&aScreenlowerlef)[19];
extern char(&aScreencenter)[16];
extern char(&aScreenbottom)[16];
extern char(&aScreentop)[13];
extern char(&aScreenright)[15];
extern char(&aScreenleft)[14];
extern char(&aScriptDDoesNot)[];
extern char(&aGameTselect_pc)[];
extern char(&a2)[];
extern char(&aScriptsIscript)[];
extern char(&aTilesetSShift_)[];
extern char(&aArrImages_tbl)[];
extern char(&aStarcraftSw_71)[];
extern char(&aRezTitledlg_bi)[];
extern char(&aGlueTitleTfont)[];
extern char(&fileName)[];
extern char(&aStarcraftSw_70)[];
extern char(&aSmkXzerg_smk)[14];
extern char(&aSmkXterran_smk)[16];
extern char(&aSmkXprotoss_sm)[17];
extern char(&aSmkStarxintr_s)[18];
extern char(&aSmkProtoss4_sm)[17];
extern char(&aSmkProtoss3_sm)[17];
extern char(&aSmkProtoss2_sm)[17];
extern char(&aSmkProtoss1_sm)[17];
extern char(&aSmkPreprotoss_)[21];
extern char(&aSmkPreprotos_0)[21];
extern char(&aSmkPreprotos_1)[21];
extern char(&aSmkZerg4_smk)[14];
extern char(&aSmkZerg3_smk)[14];
extern char(&aSmkZerg2_smk)[14];
extern char(&aSmkZerg1_smk)[14];
extern char(&aSmkPrezerg_4_s)[18];
extern char(&aSmkPrezerg_3_s)[18];
extern char(&aSmkPrezerg_2_s)[18];
extern char(&aSmkTerran4_smk)[16];
extern char(&aSmkTerran3_smk)[16];
extern char(&aSmkTerran2_smk)[16];
extern char(&aSmkTerran1_smk)[16];
extern char(&aSmkPreterran_4)[20];
extern char(&aSmkPreterran_3)[20];
extern char(&aSmkPreterran_2)[20];
extern char(&aSmkPreterran_1)[20];
extern char(&aSmkStarintr_sm)[17];
extern char(&aSmkBlizzard_sm)[17];
extern char(&aStarcraftSw_69)[33];
extern CHAR(&aBattle_netLeag)[];
extern char(&aS_0)[];
extern char(&aLowm)[];
extern char(&aStarcraftSw_20)[];
extern char(&aUnknown)[];
extern CHAR(&ClassName)[];
extern char(&aScscrnshot_02d)[];
extern char(&aCursor)[];
extern char(&aScrollul_grp)[13];
extern char(&aScrolll_grp)[12];
extern char(&aScrolldl_grp)[13];
extern char(&aScrolld_grp)[12];
extern char(&aScrolldr_grp)[13];
extern char(&aScrollr_grp)[12];
extern char(&aScrollur_grp)[13];
extern char(&aScrollu_grp)[12];
extern char(&aTime_grp)[9];
extern char(&aDrag_grp)[9];
extern char(&aMagy_grp)[9];
extern char(&aMagr_grp)[9];
extern char(&aMagg_grp)[9];
extern char(&aTargn_grp)[10];
extern char(&aTargg_grp)[10];
extern char(&aTargr_grp)[10];
extern char(&aTargy_grp)[10];
extern char(&aIllegal_grp)[12];
extern char(&aArrow_grp_0)[10];
extern char(&aCodeBytes)[];
extern char(&aStackBytes)[];
extern char(&aFlags08x)[];
extern char(&aDs04xEs04xFs04)[];
extern char(&aSsEsp04x08xEbp)[];
extern char(&aCsEip04x08x)[];
extern char(&aEax08xEbx08xEc)[];
extern char(&aRegisters)[];
extern char(&aFaultAddress08)[];
extern char(&aExceptionCode0)[];
extern CHAR(&aNtdll_dll)[];
extern CHAR(&aInvalid_handle)[];
extern CHAR(&aGuard_page)[];
extern CHAR(&aInvalid_dispos)[];
extern CHAR(&aStack_overflow)[];
extern CHAR(&aNoncontinuable)[];
extern CHAR(&aIllegal_instru)[];
extern CHAR(&aIn_page_error)[];
extern CHAR(&aPriv_instructi)[];
extern CHAR(&aInt_overflow)[];
extern CHAR(&aInt_divide_by_)[];
extern CHAR(&aFlt_underflow)[];
extern CHAR(&aFlt_stack_chec)[];
extern CHAR(&aFlt_overflow)[];
extern CHAR(&aFlt_invalid_op)[];
extern CHAR(&aFlt_inexact_re)[];
extern CHAR(&aFlt_divide_by_)[];
extern CHAR(&aFlt_denormal_o)[];
extern CHAR(&aArray_bounds_e)[];
extern CHAR(&aSingle_step)[];
extern CHAR(&aBreakpoint)[];
extern CHAR(&aDatatype_misal)[];
extern CHAR(&aAccess_violati)[];
extern char(&a08x08x04x08xS)[];
extern char(&aCallStackAddre)[];
extern char(&asc_5026DC)[];
extern char(&aC)[];
extern char(&word_5026E4)[];
extern char(&a02x)[];
extern char(&a0x08x)[];
extern char(&aStarcraftSw_62)[];
extern char(&asc_502724)[];
extern char(&asc_502728)[];
extern char(&aScmPath)[];
extern char(&aScmTitle)[];
extern char(&aGameType_0)[];
extern char(&aCustom)[7];
extern char(&asc_502768)[];
extern char(&aPlayers)[14];
extern char(&aFilename)[];
extern char(&aSinglePlayerSa)[];
extern char(&aMultiPlayerSav)[41];
extern char(&asc_5027F0)[];
extern char(&asc_5027F4)[];
extern char(&a_mlx)[6];
extern char(&a_snx)[6];
extern char(&a_mlt)[6];
extern char(&a_sng)[6];
extern char(&aSave)[];
extern char(&aMaps)[];
extern char(&a__0)[];
extern char(&byte_502860)[12];
extern char(&aStarcraftSw_67)[];
extern char(&aRezNetwork_tbl)[];
extern char(&asc_5028A0)[];
extern char(&aSS_1)[];
extern char(&aLeague_D_cnd)[];
extern char(&aArrPortdata_da)[];
extern char(&aArrTechdata_da)[];
extern char(&aArrWeapons_dat)[];
extern char(&aArrUpgrades_da)[];
extern CHAR(&Type)[];
extern char(&aStarcraftSw_66)[];
extern char(&aRezRestart_bin)[];
extern char(&aRezQuit2mnu_bi)[];
extern char(&aRezQuitrepl_bi)[];
extern char(&aRezQuit_bin)[];
extern char(&aRezAbrtmenu_bi)[];
extern char(&aRezOptions_bin)[];
extern char(&aRezHelpmenu_bi)[];
extern char(&aRezGamemenu_bi)[];
extern char(&aRezObjctdlg_bi)[];
extern char(&aDlgsTile_grp)[14];
extern char(&aStarcraftSw_32)[];
extern char(&aMapsDownload)[];
extern char(&aStarcraftSw_65)[];
extern char(&aRezStat_txt_tb)[];
extern char(&aGameCS)[];
extern char(&aConsole_pcx)[12];
extern char(&aStarcraftSw_64)[];
extern char(&aRezWait_bin)[];
extern char(&aRezOkcancel_bi)[];
extern char(&aRezOk_bin)[];
extern char(&asc_502AD8)[];
extern char(&aStarcraftSw_63)[];
extern char(&aRezStatlb_bin)[];
extern char(&aStarcraftSw_61)[];
extern char(&aD)[];
extern char(&aStarcraftSw_68)[];
extern char(&aTilesetSS_pcx)[];
extern char(&aTilesetSDark_p)[];
extern char(&aStarcraftSw_60)[];
extern char(&a_vr4)[5];
extern char(&a_vx4)[5];
extern char(&a_grp)[5];
extern char(&a_cv5)[5];
extern char(&a_vf4)[5];
extern char(&aSSS_0)[];
extern char(&aTileset)[9];
extern char(&a_wpe)[5];
extern char(&aStarcraftSw_57)[];
extern char(&aTwilight)[9];
extern char(&aIce)[4];
extern char(&aDesert)[7];
extern char(&aJungle)[7];
extern char(&aAshworld)[9];
extern char(&aInstall)[8];
extern char(&aPlatform)[9];
extern const char(&aBadlands)[10];
extern char(&aArrSfxdata_tbl)[16];
extern char(&aArrSfxdata_dat)[];
extern char(&aSoundMemoryCac)[];
extern char(&aCreatesoundbuf)[18];
extern char(&aSetcooperative)[];
extern char(&aGetprocaddress)[];
extern CHAR(&aDirectsoundcre)[];
extern char(&function_name)[];
extern CHAR(&aDsound_dll)[];
extern char(&aSoundS)[];
extern char(&aStarcraftSw_56)[];
extern char(&aSFileSD)[];
extern char(&aStarcraftSw_55)[];
extern char(&aRezGluconn_bin)[];
extern char(&aStarcraftSw_53)[];
extern char(&aRezGlulogin_bi)[];
extern char(&aStarcraftSw_88)[];
extern char(&aGameTfontgam_p)[];
extern char(&aRezGluchat_bin)[];
extern char(&aDS)[];
extern char(&new_)[];
extern char& byte_502DF2;
extern char(&word_502DF4)[];
extern char(&aStarcraftSw_52)[];
extern char(&aRezGlurdyp_bin)[];
extern char(&asc_502E28)[];
extern char(&aGlueReadypPf_6)[25];
extern char(&aGlueReadypPf_5)[25];
extern char(&aGlueReadypPf_4)[25];
extern char(&aGlueReadypPf_3)[25];
extern char(&aGlueReadypPf_2)[24];
extern char(&aGlueReadypPf_1)[24];
extern char(&aGlueReadypPf_0)[24];
extern char(&aGlueReadypPfra)[24];
extern char(&aRezGlujoin_bin)[];
extern char(&aStarcraftSw_51)[];
extern char(&aUxU)[];
extern char(&aSCUU)[];
extern char(&aRezGluhist_bin)[];
extern char(&aGlueCampaignPh)[];
extern char(&aRezGluhist_tbl)[];
extern char(&aRezGlupoksplit)[];
extern char(&aRezGlupedit_bi)[];
extern int& dword_502FBC;
extern int& dword_502FC0;
extern int& dword_502FC4;
extern char& byte_502FC8;
extern char(&aRezGlupok_bin)[];
extern int& dword_502FDC;
extern int& dword_502FE0;
extern int& dword_502FE4;
extern char& byte_502FE8;
extern char(&aRezGlupokcance)[];
extern int& dword_503004;
extern int& dword_503008;
extern int& dword_50300C;
extern char& byte_503010;
extern char(&aRezGlugamemode)[];
extern char(&source_filename)[];
extern int& dword_50304C;
extern int& dword_503050;
extern int& dword_503054;
extern __int16& word_503058;
extern char& byte_50305A;
extern const char(&aRezGluload_bin)[];
extern char(&aRezGlurdyt_bin)[];
extern char(&asc_50307C)[];
extern char(&aGlueReadytTf_6)[25];
extern char(&aGlueReadytTf_5)[25];
extern char(&aGlueReadytTf_4)[25];
extern char(&aGlueReadytTf_3)[25];
extern char(&aGlueReadytTf_2)[24];
extern char(&aGlueReadytTf_1)[24];
extern char(&aGlueReadytTf_0)[24];
extern char(&aGlueReadytTfra)[24];
extern char(&aRezGlurdyz_bin)[];
extern char(&asc_50317C)[];
extern char(&aGlueReadyzZf_6)[25];
extern char(&aGlueReadyzZf_5)[25];
extern char(&aGlueReadyzZf_4)[25];
extern char(&aGlueReadyzZf_3)[25];
extern char(&aGlueReadyzZf_2)[24];
extern char(&aGlueReadyzZf_1)[24];
extern char(&aGlueReadyzZf_0)[24];
extern char(&aGlueReadyzZfra)[24];
extern CHAR(&Name)[];
extern int& dword_503278;
extern int& dword_50327C;
extern __int16& word_503280;
extern char& byte_503282;
extern CHAR(&aGlueokcancel_b)[];
extern int& dword_503298;
extern int& dword_50329C;
extern int& dword_5032A0;
extern int& dword_5032A4;
extern char& byte_5032A8;
extern char(&aStarcraftSw_48)[];
extern const char(&aRezGluexpcmp_0)[];
extern char(&aRezGluscore_bi)[];
extern int& dword_5032F8;
extern int& dword_5032FC;
extern int& dword_503300;
extern char& byte_503304;
extern int& dword_503308;
extern int& dword_50330C;
extern __int16& word_503310;
extern char& byte_503312;
extern char(&aMapSMap)[];
extern char(&asc_503324)[];
extern char(&aResourcesScore)[59];
extern char(&aStructuresScor)[64];
extern char(&aUnitsScoreUPro)[57];
extern char(&aScoreOverallUU)[65];
extern char(&aLeagueidDLeagu)[];
extern char(&aUS_0)[];
extern char(&aUS)[];
extern int& dword_503494;
extern int& dword_503498;
extern __int16& word_50349C;
extern char(&a02d02d)[];
extern char(&aD02d02d)[];
extern char(&aU)[];
extern int& dword_5034C0;
extern int& dword_5034C4;
extern __int16& word_5034C8;
extern int& dword_5034CC;
extern int& dword_5034D0;
extern __int16& word_5034D4;
extern char& byte_5034D6;
extern char(&aStarcraftSw_47)[];
extern int& dword_5034FC;
extern int& dword_503500;
extern int& dword_503504;
extern char& byte_503508;
extern char(&aGlueScorepv)[14];
extern char(&aGlueScorepd)[14];
extern char(&aGlueScoretv)[14];
extern char(&aGlueScoretd)[14];
extern char(&aGlueScorezv)[14];
extern char(&aGlueScorezd)[14];
extern const char(&aRezGlucmpgn__0)[];
extern MissionCheatRelated(&stru_503580)[6];
extern char(&aXprotoss)[9];
extern char(&aXzerg)[6];
extern char(&aXterran)[8];
extern char(&aProtoss)[8];
extern char(&aZerg)[5];
extern char(&aTerran)[7];
extern char(&aSS_4)[];
extern char(&aRezGlumodem_bi)[];
extern char(&aRezGluatzoneli)[];
extern char(&aRezGlumodemlis)[];
extern char(&aPselect_pcx)[];
extern char(&aRezGlumodemsta)[];
extern char(&aPstatus_pcx)[];
extern char(&asc_503690)[];
extern char(&aSoftwareBlizza)[];
extern char(&aSCS)[];
extern char(&aRezGlumodement)[];
extern char(&aStarcraftSw_46)[];
extern char(&aPentry_pcx)[];
extern char(&aGlueCreateIcre)[];
extern char(&aStarcraftSw_80)[];
extern char(&aRezGlucreat_bi)[17];
extern const char(&aRezGlucustm_bi)[];
extern char(&aCustomType)[12];
extern char(&aGameType)[];
extern char(&valuename)[];
extern char(&aGameSpeed)[];
extern int& dword_5037A0;
extern int& dword_5037A4;
extern __int16& word_5037A8;
extern char(&byte_5037AC)[];
extern char(&aApsReplays)[12];
extern char(&aMaps_0)[5];
extern CHAR(&aAbcdefghijklmn)[];
extern char(&aRezGlubnres_re)[17];
extern char(&aStarcraftSw_13)[];
extern CHAR(&CursorName)[];
extern char(&aGenericIcon_19)[30];
extern char(&aGenericIcon_18)[31];
extern char(&aGenericIcon_17)[26];
extern char(&aGenericIcon_16)[27];
extern char(&aGenericIcon_15)[25];
extern char(&aGenericIcon_14)[26];
extern char(&aGenericIcon_13)[26];
extern char(&aGenericIconsSl)[25];
extern char(&aGenericIcon_11)[23];
extern char(&aGenericIcon_10)[23];
extern char(&aGenericIcons_9)[23];
extern char(&aGenericIcons_8)[23];
extern char(&aGenericIcons_7)[23];
extern char(&aGenericIcons_6)[23];
extern char(&aGenericIcons_5)[23];
extern char(&aGenericIcons_4)[23];
extern char(&aGenericIconsCm)[23];
extern int& dword_5039FC;
extern int& dword_503A00;
extern int& dword_503A04;
extern __int16& word_503A08;
extern int& dword_503A0C;
extern int& dword_503A10;
extern int& dword_503A14;
extern int& dword_503A18;
extern int& dword_503A1C;
extern int& dword_503A20;
extern int& dword_503A24;
extern int& dword_503A28;
extern char& byte_503A2C;
extern char(&aGenericPopupsS)[26];
extern char(&aGenericIcons_3)[27];
extern char(&aGenericIconsPr)[26];
extern char(&aGenericPopupsL)[26];
extern char(&aBackgroundsReg)[30];
extern int& dword_503AC0;
extern int& dword_503AC4;
extern int& dword_503AC8;
extern int& dword_503ACC;
extern int& dword_503AD0;
extern char(&aGenericPopup_0)[27];
extern int& dword_503AF0;
extern int& dword_503AF4;
extern int& dword_503AF8;
extern int& dword_503AFC;
extern __int16& word_503B00;
extern char& byte_503B02;
extern char(&aIconsDisconnec)[23];
extern char(&aGenericIcons_2)[26];
extern char(&aGenericIcons_1)[26];
extern char(&aGenericIcons_0)[26];
extern char(&aGenericIconsBu)[26];
extern char(&aGenericIcon_12)[29];
extern int& dword_503BAC;
extern int& dword_503BB0;
extern int& dword_503BB4;
extern int& dword_503BB8;
extern __int16& word_503BBC;
extern char& byte_503BBE;
extern int& dword_503BC0;
extern int& dword_503BC4;
extern int& dword_503BC8;
extern int& dword_503BCC;
extern __int16& word_503BD0;
extern char& byte_503BD2;
extern int& dword_503BD4;
extern int& dword_503BD8;
extern int& dword_503BDC;
extern int& dword_503BE0;
extern char& byte_503BE4;
extern char(&aBackgroundsBnl)[25];
extern char(&aBackgroundsBns)[25];
extern int& dword_503C20;
extern int& dword_503C24;
extern int& dword_503C28;
extern int& dword_503C2C;
extern __int16& word_503C30;
extern char& byte_503C32;
extern char(&aBackgroundsCha)[25];
extern char(&aBackgroundsBnc)[26];
extern char(&aBackgroundsC_0)[31];
extern char(&aBackgroundsNew)[27];
extern int& dword_503CA8;
extern int& dword_503CAC;
extern int& dword_503CB0;
extern int& dword_503CB4;
extern int& dword_503CB8;
extern int& dword_503CBC;
extern char(&aGenericPopupsH)[26];
extern char(&aBackgroundsBnj)[25];
extern char(&aBackgroundsBn_)[23];
extern char(&aTriggersCtf_tr)[17];
extern const char(&aTriggersSlau_2)[];
extern const char(&aTriggersSlau_1)[];
extern const char(&aTriggersSlau_0)[];
extern const char(&aTriggersSlaugh)[];
extern const char(&aTriggersGreed1)[];
extern const char(&aTriggersGreed7)[];
extern const char(&aTriggersGreed5)[];
extern const char(&aTriggersGreed2)[];
extern const char(&aTriggersSudden)[];
extern const char(&aTriggersMelee_)[];
extern char(&template_name)[];
extern char(&aUnableToReadGa)[];
extern char(&aSS_0)[];
extern char(&aTemplates_lst)[14];
extern char(&aStarcraftSw_45)[];
extern char(&aTemplates)[11];
extern char(&a_got)[5];
extern char(&aCharacters)[];
extern char(&aStarcraftSw_17)[];
extern char(&aRecentMaps)[];
extern char(&asc_503EE0)[];
extern char(&asc_503EE4)[];
extern char(&asc_503EE8)[];
extern char(&a__)[];
extern char(&aScx)[];
extern char(&aScm)[];
extern char(&aMusicRadiofree)[24];
extern char(&aMusicTitle_wav)[16];
extern char(&aMusicPvict_wav)[16];
extern char(&aMusicTvict_wav)[16];
extern char(&aMusicZvict_wav)[16];
extern char(&aMusicPdefeat_w)[18];
extern char(&aMusicTdefeat_w)[18];
extern char(&aMusicZdefeat_w)[18];
extern char(&aMusicPrdyroom_)[19];
extern char(&aMusicTrdyroom_)[19];
extern char(&aMusicZrdyroom_)[19];
extern char(&aMusicProtoss3_)[19];
extern char(&aMusicProtoss2_)[19];
extern char(&aMusicProtoss1_)[19];
extern char(&aMusicTerran3_w)[18];
extern char(&aMusicTerran2_w)[18];
extern char(&aMusicTerran1_w)[18];
extern char(&aMusicZerg3_wav)[16];
extern char(&aMusicZerg2_wav)[16];
extern char(&aMusicZerg1_wav)[16];
extern char(&aRezMinimap_bin)[];
extern char(&aGameTblink_pcx)[];
extern char(&grp_path)[];
extern char(&aRezMinimapprev)[];
extern char(&aStarcraftSw_44)[];
extern char(&aRezTimeout_bin)[];
extern char(&aD02d)[];
extern char(&aStarcraftSw_43)[];
extern char(&aArrUnits_dat)[];
extern char(&aArrOrders_dat)[];
extern char(&aGameTminimap_p)[];
extern char(&aGameTunit_pcx)[];
extern char(&aSSSS_S_S)[];
extern char(&aProfile_pcx)[];
extern char(&aStarcraftSw_42)[];
extern char(&aSSS_mpq)[];
extern char(&aLeagues)[9];
extern char(&aGameresultSGam)[];
extern char(&aS)[];
extern char(&aNonplayer)[12];
extern void *& off_504204;
extern char(&string)[];
extern char(&aStarcraftSw_41)[];
extern char(&aArrSprites_dat)[];
extern char(&aStarcraftSw_40)[];
extern char(&aArrFlingy_dat)[];
extern char(&aStarcraftSw_39)[];
extern char(&aRezMsgfltr_bin)[];
extern char(&aRezAllyfltr_bi)[];
extern char(&aRezTeamfltr_bi)[17];
extern char(&aStarcraftSw_38)[];
extern char(&aSCS_0)[];
extern char(&aSSCS)[];
extern char(&aSS_3)[];
extern char(&aStarcraftSw_37)[];
extern char(&aCbulletDamage)[];
extern char(&aStarcraftSw_36)[];
extern char(&aStarcraftSw_35)[];
extern int (__stdcall *(&off_50439C)[2])(int);
extern char(&aStarcraftSw_34)[32];
extern char(&aStarcraftSw_98)[];
extern char(&aStarcraftSw_33)[30];
extern char(&aTheMapCouldNot)[167];
extern char(&aStarcraftSw_29)[];
extern char(&aRezSpd_dlg_bin)[];
extern char(&aStarcraftSw_82)[];
extern char(&aRezVideo_bin)[];
extern int (__fastcall *&off_504524)(int, int, SightStruct *, MegatileFlags *, unsigned int, unsigned int);
extern int (__fastcall *&off_504528)(int, int, SightStruct *, MegatileFlags *, unsigned int, unsigned int);
extern char(&aStarcraftSw_59)[];
extern char(&aWSS)[];
extern char(&aR)[3];
extern char(&aReply)[7];
extern char(&aM)[3];
extern char(&aW)[3];
extern char(&aMsg)[5];
extern char(&aWhisper)[9];
extern char(&aUnignore)[10];
extern char(&aUnsquelch)[11];
extern char(&aIgnore)[8];
extern char(&aSquelch)[9];
extern char(&aStats)[];
extern char(&aLeague)[];
extern char(&aParallaxStar_s)[];
extern char(&aStarcraftSw_89)[];
extern char(&aRezTips_dlg_bi)[];
extern char(&aRezTips_tbl)[];
extern char(&asc_50461C)[];
extern char(&aStarcraftSw_31)[];
extern char(&aUnitS)[];
extern char(&aGameThpbar_pcx)[];
extern char(&asc_504674)[4];
extern char(&asc_504678)[];
extern char(&aStarcraftSw_22)[];
extern char(&aStarcraftSw_87)[];
extern char(&aAstatS)[];
extern char(&aStarcraftSw_30)[];
extern char(&aLpt9)[5];
extern char(&aLpt8)[5];
extern char(&aLpt7)[5];
extern char(&aLpt6)[5];
extern char(&aLpt5)[5];
extern char(&aLpt4)[5];
extern char(&aLpt3)[5];
extern char(&aLpt2)[5];
extern char(&aLpt1)[5];
extern char(&aCom9)[5];
extern char(&aCom8)[5];
extern char(&aCom7)[5];
extern char(&aCom6)[5];
extern char(&aCom5)[5];
extern char(&aCom4)[5];
extern char(&aCom3)[5];
extern char(&aCom2)[5];
extern char(&aCom1)[5];
extern char(&aClock)[7];
extern char(&aConout)[8];
extern char(&aConin)[7];
extern char(&aAux)[4];
extern char(&aPrn)[4];
extern char(&aCon)[4];
extern void *& off_5047A8;
extern char(&aStarcraftSw_86)[];
extern char(&asc_5047D0)[];
extern char(&aChklarvastray1)[];
extern char(&aChklarvastray2)[];
extern char(&aRezLoadgame_bi)[];
extern char(&aRezNetdlg_bin)[];
extern char(&aRezHelp_bin)[];
extern char(&aRezHelp_txt_tb)[];
extern char(&asc_504860)[];
extern char(&aRezLmission_bi)[];
extern char(&aRezWmission_bi)[];
extern char(&aRezSnd_dlg_bin)[];
extern char(&aRezStatport_bi)[];
extern char(&a1)[];
extern char(&aGame)[6];
extern char(&aConover_pcx)[12];
extern char(&aStarcraftSw_28)[];
extern FnInteract& off_504918;
extern char(&aSSD_smk)[];
extern char(&aPortrait)[10];
extern char(&szFileName)[];
extern char(&aScriptsAiscrip)[];
extern char(&aStarcraftSw_94)[];
extern char(&aIllegalAiScrip)[];
extern char(&aStarcraftSw_27)[];
extern char(&aStarcraftSw_95)[];
extern char(&aRezCtextbox_bi)[];
extern char(&aRezStatbtnC_bi)[];
extern char(&aUnitCmdbtnsTic)[];
extern char(&aUnitCmdbtnsCmd)[];
extern char(&aSCcmdbtns_grp)[];
extern char(&aUnitCmdbtns)[14];
extern char(&aPbrfull_pcx)[12];
extern char(&aStarcraftSw_26)[];
extern char(&aPbrempt_pcx)[12];
extern char(&aSSD)[];
extern char(&aRezStatdata_bi)[];
extern char(&aUnitWireframGr)[];
extern char(&aUnitWireframTr)[];
extern FnInteract(&off_504AF0)[44];
extern char(&aSS_2)[];
extern char(&aSSDD)[];
extern char(&aSSDS)[12];
extern char(&aSSDDS)[];
extern char(&logfile)[];
extern char(&aGameTwire_pcx)[];
extern char(&aUnitWireframWi)[];
extern char(&aStarcraftSw_92)[];
extern char(&aRezStat_f10_bi)[];
extern char(&aStarcraftSw_97)[];
extern FnInteract& off_504C7C;
extern char(&aRezStatfluf_bi)[];
extern char(&aStarcraftSw_96)[];
extern char(&aRezStatres_bin)[];
extern char(&aGameIcons_grp)[];
extern char(&aStarcraftSw_85)[];
extern FnInteract(&off_504CF8)[6];
extern const char(&SupplyInfoFormat)[9];
extern char(&aStarcraftSw_58)[];
extern char(&aRezDlgfatal_bi)[];
extern char(&aStarcraftSw_84)[];
extern char(&aRezGateways_tx)[];
extern char(&aStarcraftSw_24)[];
extern char(&aOverrideBattle)[];
extern char(&aConfiguration)[];
extern const char(&aBattle_netGate)[];
extern const char(&aStarcraftSw_23)[32];
extern __int16& word_504E0C;
extern char& byte_504E0E;
extern char(&aGlueChatroomIc)[];
extern char(&string2)[];
extern char(&aStatsS)[];
extern char(&a3u)[];
extern char(&aStarcraftSw_21)[];
extern char(&aStarcraftSw_19)[];
extern char(&aDialog_static_)[22];
extern char(&aDialog_profile)[15];
extern CHAR(&FileName)[];
extern char(&aWb)[];
extern unsigned __int8& asc_504EEC;
extern unsigned __int8& aHttp;
extern char(&aTimeNewRoman)[15];
extern char(&aStarcraftSw_18)[];
extern char(&aGlueBattle_n_3)[];
extern char(&aPopup)[6];
extern char(&aGlueBattle_n_7)[46];
extern char(&aGlueBattle_n_6)[42];
extern char(&aAt)[];
extern CHAR(&Format)[];
extern char(&a0)[];
extern char(&aArial)[6];
extern char(&aRecordSexp1Las)[31];
extern char(&aRecordSexp1L_0)[24];
extern char(&aRecordSexp1Hig)[24];
extern char(&aDynkeySexp1Ran)[19];
extern char(&aRecordSexp1H_0)[26];
extern char(&aRecordSexp1Rat)[21];
extern char(&aRecordSexp1Dis)[26];
extern char(&aRecordSexp1Los)[21];
extern char(&aRecordSexp1Win)[19];
extern char(&aRecordSexp0Las)[31];
extern char(&aRecordSexp0L_0)[24];
extern char(&aRecordSexp0Dis)[26];
extern char(&aRecordSexp0Los)[21];
extern char(&aRecordSexp0Win)[19];
extern char(&aRecordStar1Las)[31];
extern char(&aRecordStar1L_0)[24];
extern char(&aRecordStar1Hig)[24];
extern char(&aDynkeyStar1Ran)[19];
extern char(&aRecordStar1H_0)[26];
extern char(&aRecordStar1Rat)[21];
extern char(&aRecordStar1Dis)[26];
extern char(&aRecordStar1Los)[21];
extern char(&aRecordStar1Win)[19];
extern char(&aRecordStar0Las)[31];
extern char(&aRecordStar0L_0)[24];
extern char(&aRecordStar0Dis)[26];
extern char(&aRecordStar0Los)[21];
extern char(&aRecordStar0Win)[19];
extern char(&aProfileDescrip)[20];
extern char(&aProfileLocatio)[17];
extern char(&aProfileAge)[12];
extern char(&aProfileSex_1)[12];
extern char(&aDialog_creat_0)[19];
extern char(&aIcon)[5];
extern char(&aBrowse)[7];
extern char(&aGlueBattle_n_1)[39];
extern char(&aGlueBattle__17)[31];
extern char(&aGlueBattle__12)[34];
extern char(&aDialog_create_)[21];
extern char(&aBattle_html)[12];
extern char(&aLastCreatedGam)[];
extern char(&aStarcraftSw_16)[];
extern char(&aGlueBattle_n_5)[];
extern char(&aGlueBattle_n_4)[];
extern char(&aCreate)[7];
extern char(&aGlueBattle_n_2)[41];
extern char(&aStarcraftSw_15)[];
extern char(&aGlueBattle_n_0)[33];
extern char(&aStarcraftSw_54)[];
extern char(&aIcontable)[10];
extern char(&aGlueBattle__11)[32];
extern char(&aGlueBattle_net)[];
extern char(&aGlueBattle__13)[43];
extern char(&aGlueBattle__14)[43];
extern char(&aGlueBattle__15)[42];
extern char(&aGlueBattle__16)[42];
extern char(&aStarcraftSw_14)[];
extern char(&aTimesNewRoman)[16];
extern char(&aStarcraftSw_12)[];
extern char(&aStarcraftSw_11)[];
extern char(&aStarcraftSw_90)[];
extern char(&aErrorInGetclos)[];
extern char(&aWriteMe)[];
extern char(&aStarcraftSw_10)[];
extern char(&aStarcraftSwa_9)[];
extern char& byte_5056EC;
extern char& byte_5056F0;
extern char(&aSSS)[];
extern char(&aSD_1)[];
extern char(&asc_505704)[2];
extern char& byte_505708;
extern char(&aD_0)[4];
extern char(&aDDCDD)[];
extern char(&aCDD)[];
extern char& byte_50572C;
extern char(&aSD)[];
extern char(&aSD_0)[];
extern char(&aAppaddex1)[];
extern char(&asc_505750)[];
extern CHAR(&Caption)[];
extern char(&aSSLineDS)[];
extern char(&aSS)[];
extern char(&aDM)[];
extern char(&aUnknownError0x)[];
extern char(&aMmsysError0xX)[];
extern char(&aDserrUnknown0x)[];
extern char(&aE_nointerface)[];
extern char(&source)[];
extern char(&aDserr_noaggreg)[];
extern char(&aDserr_invalidp)[];
extern char(&aDserr_bufferlo)[];
extern char(&aDserr_alreadyi)[];
extern char(&aDserr_nodriver)[];
extern char(&aDserr_badforma)[];
extern char(&aDserr_prioleve)[];
extern char(&aDserr_invalidc)[];
extern char(&aDserr_controlu)[];
extern char(&aDserr_allocate)[];
extern char(&aDs_ok)[];
extern char(&aDderrUnknown0x)[];
extern char(&aDderr_unsupp_0)[];
extern char(&aDderr_notpalet)[];
extern char(&aDderr_wrongmod)[];
extern char(&aDderr_nodc)[];
extern char(&aDderr_cantcrea)[];
extern char(&aDderr_exclusiv)[];
extern char(&aDderr_nopale_0)[];
extern char(&aDderr_nopalett)[];
extern char(&aDderr_hwndalre)[];
extern char(&aDderr_hwndsubc)[];
extern char(&aDderr_nohwnd)[];
extern char(&aDderr_noemulat)[];
extern char(&aDderr_primarys)[];
extern char(&aDderr_nodire_0)[];
extern char(&aDderr_directdr)[];
extern char(&aDderr_invalidd)[];
extern char(&aDderr_wasstill)[];
extern char(&aDderr_vertical)[];
extern char(&aDderr_unsuppor)[];
extern char(&aDderr_surfacel)[];
extern char(&aDderr_cantlock)[];
extern char(&aDderr_surfaceb)[];
extern char(&aDderr_paletteb)[];
extern char(&aDderr_outofvid)[];
extern char(&aDderr_notfound)[];
extern char(&aDderr_noexclus)[];
extern char(&aDderr_nodirect)[];
extern char(&aDderr_lockedsu)[];
extern char(&aDderr_invalidr)[];
extern char(&aDderr_invalidp)[];
extern char(&aDderr_invalidm)[];
extern char(&aDderr_currentl)[];
extern char(&aDderr_cannotde)[];
extern char(&aDderr_cannotat)[];
extern char(&aDderr_incompat)[];
extern char(&aDderr_exceptio)[];
extern char(&aDderr_alreadyi)[];
extern char(&aDd_ok)[];
extern char(&aStarcraftSwa_8)[];
extern char(&aUsechatcolors)[14];
extern char(&aTrigtext)[9];
extern char(&aTip)[4];
extern char(&aBldgnoise)[10];
extern char(&aUnitnoise)[10];
extern char(&aUnitspeech)[11];
extern char(&aIntrox)[7];
extern char(&aIntro)[6];
extern char(&aTipnum)[7];
extern char(&aSfx)[4];
extern char(&aMusic)[6];
extern char(&aM_kscroll)[10];
extern char(&aM_mscroll)[10];
extern char(&aKscroll)[8];
extern char(&aMscroll)[8];
extern char(&aSpeed)[6];
extern char(&aBadPfopenModeI)[];
extern char(&aWb_0)[4];
extern char(&aRb)[3];
extern int& dword_505D3C;
extern char& byte_505D40;
extern char(&aStarcraftSwa_7)[];
extern char(&aFontS_fnt)[];
extern char(&aGdsdialogboxpa)[];
extern char(&format)[];
extern char(&aProgra)[];
extern char(&aSS02u02u02u_er)[];
extern char(&aStarcraftSw_81)[];
extern char(&aStarcraftSw_76)[];
extern char(&aCreatebacksurf)[];
extern char(&aSetpalette)[];
extern char(&aCreateprimarys)[];
extern char(&aCreatepalette)[];
extern char(&aSetdisplaymode)[];
extern CHAR(&aDirectdrawcrea)[];
extern char(&source_file)[];
extern CHAR(&aDdraw_dll)[];
extern char(&aStarcraftSw_93)[];
extern char(&aStarcraftSwa_5)[];
extern char(&aStarcraftSwa_4)[];
extern char(&aStarcraftSwa_3)[];
extern char(&a4W01ADBSW1A1W2)[];
extern char(&a4W0ADBSW1A1W2B)[];
extern char(&arg0)[];
extern char(&directives1)[];
extern char(&directives2)[];
extern char(&aStarcraftSwa_2)[];
extern char(&aStarcraftSwa_1)[];
extern __int16& word_50612C;
extern char& byte_50612E;
extern char(&aStarcraftSwa_0)[];
extern char(&aStarcraftSw_83)[];
extern char(&aCouldNotLoadS)[];
extern char(&aDraw1)[];
extern char(&aStarcraftSwarL)[];
extern int(&dword_5061B8)[];
extern int(&dword_5061BC)[];
extern char(&logfilename)[];
extern char(&aA)[2];
extern double& dbl_506230;
extern double& dbl_506238;
extern double& dbl_506240;
extern double& dbl_506248;
extern double& dbl_506250;
extern double& dbl_506258;
extern double& dbl_506260;
extern double& dbl_506268;
extern char(&aE000)[];
extern double& dbl_506278;
extern double& dbl_506280;
extern double& dbl_506288;
extern CHAR(&aIsprocessorfea)[];
extern CHAR(&aKernel32)[];
extern _SCOPETABLE_ENTRY& stru_5062B8;
extern char(&aAuthenticamd)[];
extern __int64& qword_5062E0;
extern __int64& qword_506F00;
extern __int64& qword_507B20;
extern __int64& qword_509B60;
extern __int64& qword_509BC0;
extern __int64& qword_509BC8;
extern __int64& qword_509BD0;
extern __int64& qword_509BD8;
extern double& dbl_509BE0;
extern double& dbl_509BE8;
extern __int64& qword_509BF0;
extern __int64& qword_509BF8;
extern __int64& qword_509C00;
extern double& dbl_509C10;
extern double& dbl_509C24;
extern double& dbl_509C2C;
extern double& dbl_509C34;
extern double& dbl_509C3C;
extern double& dbl_509C44;
extern double& dbl_509C4C;
extern double& dbl_509C58;
extern char(&aAtan)[5];
extern char(&aCeil)[5];
extern char(&aFloor)[6];
extern char(&aModf)[5];
extern char(&aExp2)[5];
extern char(&aExp10)[6];
extern char(&aLog2)[5];
extern char(&aPow)[4];
extern void *& off_509D04;
extern char(&aLog10)[6];
extern char(&aExp)[4];
extern char(&a1Qnan)[];
extern char(&a1Inf)[];
extern char(&a1Ind)[6];
extern char(&a1Snan)[7];
extern char(&a_nextafter)[11];
extern char(&a_logb)[6];
extern char(&a_yn)[4];
extern char(&a_y1)[4];
extern char(&a_y0)[4];
extern char(&aFrexp)[6];
extern char(&aFmod)[5];
extern char(&a_hypot)[7];
extern char(&a_cabs)[6];
extern char(&aLdexp)[6];
extern char(&aFabs)[5];
extern char(&aTan)[4];
extern char(&aCos)[4];
extern char(&aSin)[4];
extern char(&aSqrt)[5];
extern char(&aAtan2)[6];
extern char(&aAcos)[5];
extern char(&aAsin)[5];
extern char(&aTanh)[5];
extern char(&aCosh)[5];
extern char(&aSinh)[5];
extern char(&asc_509DC8)[4];
extern __int16 *(&off_509F40)[10];
extern __int16 *(&off_509F6C)[23];
extern __int16 *(&off_509FCC)[5];
extern __int16 *(&off_509FE4)[111];
extern __int16 *(&off_50A1A4)[4];
extern __int16 *(&off_50A1B8)[73];
extern __int16 *(&off_50A2E0)[3];
extern int& dword_50A2F0;
extern __int16& word_50A510;
extern __int16& word_50A524;
extern __int16& word_50A536;
extern __int16& word_50A548;
extern __int16& word_50A558;
extern __int16& word_50A566;
extern __int16& word_50A578;
extern __int16& word_50A58C;
extern __int16& word_50A5A0;
extern __int16& word_50A5AC;
extern __int16& word_50A5BC;
extern __int16& word_50A5D2;
extern __int16& word_50A5EE;
extern __int16& word_50A608;
extern __int16& word_50A620;
extern __int16& word_50A63A;
extern __int16& word_50A650;
extern __int16& word_50A660;
extern __int16& word_50A67A;
extern __int16& word_50A68C;
extern __int16& word_50A69A;
extern __int16& word_50A6B2;
extern __int16& word_50A6BE;
extern __int16& word_50A6CE;
extern __int16& word_50A6E4;
extern __int16& word_50A6EE;
extern __int16& word_50A6FC;
extern __int16& word_50A70A;
extern __int16& word_50A718;
extern __int16& word_50A726;
extern __int16& word_50A734;
extern __int16& word_50A740;
extern __int16& word_50A758;
extern __int16& word_50A770;
extern __int16& word_50A780;
extern __int16& word_50A78A;
extern __int16& word_50A796;
extern __int16& word_50A7A2;
extern __int16& word_50A7AE;
extern __int16& word_50A7CA;
extern __int16& word_50A7DA;
extern __int16& word_50A7E8;
extern __int16& word_50A7F8;
extern __int16& word_50A804;
extern __int16& word_50A81A;
extern __int16& word_50A82A;
extern __int16& word_50A836;
extern __int16& word_50A850;
extern __int16& word_50A860;
extern __int16& word_50A876;
extern __int16& word_50A890;
extern __int16& word_50A8A0;
extern __int16& word_50A8B6;
extern __int16& word_50A8C6;
extern __int16& word_50A8D8;
extern __int16& word_50A8EA;
extern __int16& word_50A8FC;
extern __int16& word_50A90E;
extern __int16& word_50A920;
extern __int16& word_50A932;
extern __int16& word_50A942;
extern __int16& word_50A95C;
extern __int16& word_50A96E;
extern __int16& word_50A980;
extern char(&aKernel32_dll)[13];
extern __int16& word_50A9A8;
extern __int16& word_50A9BE;
extern __int16& word_50A9C6;
extern __int16& word_50A9D6;
extern __int16& word_50A9EA;
extern __int16& word_50A9F8;
extern __int16& word_50AA06;
extern __int16& word_50AA1C;
extern __int16& word_50AA28;
extern __int16& word_50AA3A;
extern __int16& word_50AA46;
extern __int16& word_50AA56;
extern __int16& word_50AA68;
extern __int16& word_50AA78;
extern __int16& word_50AA92;
extern __int16& word_50AA9E;
extern __int16& word_50AAAC;
extern __int16& word_50AAC6;
extern __int16& word_50AADE;
extern __int16& word_50AAEE;
extern __int16& word_50AAFA;
extern __int16& word_50AB18;
extern __int16& word_50AB28;
extern __int16& word_50AB3A;
extern __int16& word_50AB4C;
extern __int16& word_50AB5C;
extern __int16& word_50AB6C;
extern __int16& word_50AB7E;
extern __int16& word_50AB8E;
extern __int16& word_50ABA4;
extern __int16& word_50ABB2;
extern __int16& word_50ABBC;
extern __int16& word_50ABD4;
extern __int16& word_50ABEE;
extern __int16& word_50AC06;
extern __int16& word_50AC14;
extern __int16& word_50AC24;
extern __int16& word_50AC34;
extern __int16& word_50AC48;
extern __int16& word_50AC58;
extern __int16& word_50AC6A;
extern __int16& word_50AC78;
extern __int16& word_50AC86;
extern __int16& word_50AC96;
extern __int16& word_50ACA4;
extern __int16& word_50ACB8;
extern __int16& word_50ACC6;
extern __int16& word_50ACD8;
extern __int16& word_50ACE4;
extern __int16& word_50ACF0;
extern __int16& word_50AD06;
extern __int16& word_50AD1C;
extern __int16& word_50AD2C;
extern __int16& word_50AD40;
extern __int16& word_50AD4C;
extern __int16& word_50AD68;
extern __int16& word_50AD78;
extern __int16& word_50AD86;
extern __int16& word_50AD92;
extern __int16& word_50ADA6;
extern __int16& word_50ADBA;
extern __int16& word_50ADCC;
extern __int16& word_50ADDE;
extern __int16& word_50ADEE;
extern __int16& word_50ADFA;
extern __int16& word_50AE06;
extern __int16& word_50AE14;
extern __int16& word_50AE1C;
extern __int16& word_50AE2C;
extern __int16& word_50AE38;
extern __int16& word_50AE4E;
extern __int16& word_50AE5E;
extern __int16& word_50AE78;
extern __int16& word_50AE90;
extern __int16& word_50AEAA;
extern __int16& word_50AEBC;
extern __int16& word_50AED0;
extern __int16& word_50AEE0;
extern __int16& word_50AEF2;
extern __int16& word_50AF0A;
extern __int16& word_50AF1A;
extern __int16& word_50AF2A;
extern __int16& word_50AF3E;
extern __int16& word_50AF4C;
extern __int16& word_50AF5A;
extern __int16& word_50AF68;
extern __int16& word_50AF76;
extern __int16& word_50AF82;
extern __int16& word_50AF8E;
extern __int16& word_50AF98;
extern __int16& word_50AFAA;
extern __int16& word_50AFBA;
extern __int16& word_50AFC6;
extern __int16& word_50AFD2;
extern __int16& word_50AFE2;
extern __int16& word_50AFF0;
extern __int16& word_50B002;
extern __int16& word_50B012;
extern __int16& word_50B028;
extern __int16& word_50B03A;
extern __int16& word_50B04C;
extern __int16& word_50B05A;
extern __int16& word_50B06C;
extern __int16& word_50B07E;
extern __int16& word_50B08C;
extern __int16& word_50B098;
extern __int16& word_50B0A4;
extern __int16& word_50B0B6;
extern char(&aUser32_dll)[11];
extern __int16& word_50B0D0;
extern __int16& word_50B0E2;
extern __int16& word_50B0F2;
extern __int16& word_50B100;
extern __int16& word_50B10E;
extern __int16& word_50B120;
extern __int16& word_50B138;
extern __int16& word_50B14E;
extern __int16& word_50B162;
extern __int16& word_50B172;
extern __int16& word_50B182;
extern __int16& word_50B198;
extern __int16& word_50B1A4;
extern __int16& word_50B1B4;
extern __int16& word_50B1CC;
extern __int16& word_50B1DA;
extern __int16& word_50B1E6;
extern __int16& word_50B1F4;
extern __int16& word_50B204;
extern char(&aGdi32_dll)[10];
extern __int16& word_50B21A;
extern __int16& word_50B22E;
extern __int16& word_50B244;
extern __int16& word_50B25A;
extern __int16& word_50B26A;
extern __int16& word_50B286;
extern __int16& word_50B29C;
extern __int16& word_50B2A6;
extern __int16& word_50B2B6;
extern char(&aAdvapi32_dll)[13];
extern __int16& word_50B2D6;
extern __int16& word_50B2E6;
extern __int16& word_50B302;
extern __int16& word_50B316;
extern __int16& word_50B332;
extern char(&aImm32_dll)[10];
extern __int16& word_50B352;
extern __int16& word_50B364;
extern __int16& word_50B37E;
extern char(&aVersion_dll)[12];
extern __int16& word_50B3A0;
extern __int16& word_50B3B0;
extern __int16& word_50B3CE;
extern __int16& word_50B3E6;
extern char(&aShell32_dll)[12];
extern char(&aStorm_dll)[10];
extern __int16& word_50B40E;
extern __int16& word_50B422;
extern __int16& word_50B438;
extern __int16& word_50B44A;
extern __int16& word_50B458;
extern __int16& word_50B466;
extern __int16& word_50B47A;
extern __int16& word_50B488;
extern __int16& word_50B49A;
extern __int16& word_50B4AE;
extern __int16& word_50B4BC;
extern __int16& word_50B4C8;
extern __int16& word_50B4D4;
extern __int16& word_50B4EE;
extern __int16& word_50B4FA;
extern __int16& word_50B50A;
extern __int16& word_50B51A;
extern int& __xc_z_0;
extern int (*&dword_50C4D4)(void);
extern int& __xt_a_0;
extern int& __xt_z_0;
extern int& __xt_a_1;
extern int& __xt_z_1;
extern void (__cdecl __noreturn *&off_50C4F0)(UINT uExitCode);
extern int& dword_50C4F4;
extern int(&dword_50C4F8)[];
extern char(&off_50C4FC)[148];
extern int& dword_50C608;
extern int& dword_50C60C;
extern size_t& dword_50C610;
extern int& dword_50C614;
extern _DWORD& dword_50C63C;
extern LPCRITICAL_SECTION& lpCriticalSection;
extern int& dword_50C654;
extern int& dword_50C770;
extern char& byte_50C778;
extern int& dword_50C780;
extern char(&aVyv)[6];
extern char(&aJ)[3];
extern char(&aBe)[3];
extern void *& off_50C8CC;
extern int& dword_50CA18;
extern int& dword_50CA1C;
extern wchar_t *& off_50CB80;
extern void *& off_50CB84;
extern char *(&off_50CB98)[43];
extern void *& off_50CC54;
extern void *& off_50CC58;
extern void *& off_50CC5C;
extern void *& off_50CC60;
extern void *& off_50CC64;
extern void *& off_50CC68;
extern void *& off_50CC6C;
extern void *& off_50CC70;
extern void *& off_50CC74;
extern void *& off_50CC78;
extern void **& off_50CC84;
extern char& byte_50CC94;
extern int& dword_50CCA0;
extern int& dword_50CCA4;
extern int& dword_50CCA8;
extern void *& off_50CCB0;
extern void *& off_50CCF0;
extern LPSTR& lpMultiByteStr;
extern LPSTR& off_50CD34;
extern int& dword_50CD38;
extern int& dword_50CD3C;
extern int& dword_50CD40;
extern int& dword_50CD44;
extern int& dword_50CD48;
extern int& dword_50CD4C;
extern int& dword_50CD50;
extern int& dword_50CD80;
extern int& dword_50CD84;
extern u8(&byte_50CDC1)[256];
extern int& dword_50CECD;
extern int& dword_50CED1;
extern int& dword_50CED9;
extern _DWORD(&dword_50CEE2)[3];
extern char(&aAvtypeInfo)[16];
extern int(&dword_50D2B0)[256];
extern char& byte_50DBC8;
extern char& byte_50DBD8;
extern char& byte_50DBE8;
extern char& byte_50DBF8;
extern char(&aPkwareDataComp)[193];
extern char(&aRegistration_b)[19];
extern char *(&off_50E040)[6];
extern unsigned int& dword_50E058;
extern int& dword_50E05C;
extern int& dword_50E064;
extern const char(&aGluePalmm)[];
extern int(&dword_50E170)[];
extern char& byte_50E174;
extern void *& off_50E176;
extern CampaignMenuEntry *(&campaign_menu_entries)[3];
extern CampaignMenuEntry *(&expcampaign_menu_entries)[3];
extern Cinematic& active_cinematic;
extern char(&campaignFirstMission)[4];
extern char(&xCampaignFirstMission)[8];
extern char(&aInternalVersio)[25];
extern char(&aRegistration_block_2)[19];
extern char(&aRegistration_table)[19];
extern int& is_spawn;
extern int& FrameSkip;
extern GameSpeeds& GameSpeedModifiers;
extern UpdateFunction(&update_functions)[18];
extern RenderFunction(&render_functions)[18];
extern int& g_ActiveNationID;
extern int& dword_51267C;
extern int& dword_512680;
extern unsigned __int8& g_LocalNationID;
extern int& g_LocalHumanID;
extern int& playerid;
extern char *(&cinematics)[28];
extern char(&byte_512700)[8];
extern char *(&off_512708)[19];
extern __int16(&word_51275C)[6];
extern __int16(&word_512768)[2];
extern __int16& word_51276C;
extern __int16& word_512770;
extern __int16& word_512774;
extern UnknownTilesetRelated1& stru_512778;
extern UnknownTilesetRelated1& stru_51279C;
extern UnknownTilesetRelated1& stru_5127B8;
extern UnknownTilesetRelated1 *(&off_5127DC)[8];
extern ActionPointer(&ActionTable)[60];
extern int& dword_5128F0;
extern ColorShiftData(&colorShift)[8];
extern char *(&TileSetNames)[8];
extern int& value;
extern int(&aTenbg)[];
extern char(&aMdomd)[6];
extern char(&aNxpif)[6];
extern char(&aNpdu)[6];
extern char(&aLbcse)[6];
extern swishTimer(&commonSwishControllers)[43];
extern char *(&off_512A98)[6];
extern MenuPosition(&dword_512AB0)[6];
extern MusicTrack(&dword_512AC8)[6];
extern int(&dword_512AE0)[12];
extern swishTimer(&gluCmpgnSwishController)[2];
extern char(&aRegistration_block)[19];
extern __int16& word_512B98;
extern DatLoad(&mapdataDat)[1];
extern MusicTrackDescription(&music_tracks)[25];
extern char(&aRegistration_block_1)[19];
extern RECT& stru_512D00;
extern int(&dword_512D20)[];
extern POINT& AngleDistance;
extern int(&tangent_table)[64];
extern int& off_513628;
extern __int16(&word_513634)[14];
extern POINT& bullet_random_offsets;
extern int& nextReplayCommandFrame;
extern RECT& command_card_pos;
extern DatLoad(&upgradesDat)[12];
extern DatLoad(&portdataDat)[6];
extern int& ColorCycle;
extern DatLoad(&techdataDat)[11];
extern DatLoad(&weaponsDat)[24];
extern char(&aRegistration_block_0)[19];
extern SightStruct(&line_of_sight)[12];
extern ScrollSpeeds& scrollSpeeds;
extern char(&byte_513B92)[14];
extern __int16(&unknown_campaign_related)[65];
extern char(&byte_513C24)[12];
extern DatLoad(&unitsDat)[54];
extern DatLoad(&ordersDat)[19];
extern DatLoad(&spritesDat)[6];
extern DatLoad(&imagesDat)[14];
extern char& byte_5140C4;
extern char& byte_5140D8;
extern char& byte_5140E8;
extern char(&byte_514108)[];
extern char(&byte_51410C)[];
extern char *(&ReservedDosFilenames)[25];
extern __int16(&word_514178)[];
extern __int16(&word_51417A)[547];
extern __int16(&word_5145C0)[];
extern __int16(&word_5145C2)[];
extern __int16(&word_514908)[];
extern __int16(&word_51490A)[];
extern __int16(&word_514A48)[];
extern __int16(&word_514A4A)[];
extern __int16(&word_514CF8)[];
extern __int16(&word_514CFA)[];
extern __int16(&word_51521C)[];
extern int& UnitPortraits;
extern char(&byte_515228)[];
extern char(&wireframeConstants)[];
extern void *& off_5153E8;
extern int& dword_5153F8;
extern int (__stdcall *(&funcs_455F96)[7])(int, int, int);
extern int(&dword_515418)[];
extern int(&dword_51541C)[];
extern DatLoad(&sfxdataDat)[5];
extern char(&aProfileSex_0)[12];
extern char(&aProfileAge_0)[12];
extern char(&aProfileLocat_0)[17];
extern char(&aProfileDescr_0)[20];
extern char(&aRecordStar0W_0)[19];
extern char(&aRecordStar0L_1)[21];
extern char(&aRecordStar0D_0)[26];
extern char(&aRecordStar0L_2)[24];
extern char(&aRecordStar0L_3)[31];
extern char(&aRecordStar1W_0)[19];
extern char(&aRecordStar1L_1)[21];
extern char(&aRecordStar1D_0)[26];
extern char(&aRecordStar1R_0)[21];
extern char(&aRecordStar1H_1)[26];
extern char(&aDynkeyStar1R_0)[19];
extern char(&aRecordStar1H_2)[24];
extern char(&aRecordStar1L_2)[24];
extern char(&aRecordStar1L_3)[31];
extern char(&aProfileSex)[12];
extern char(&aProfileAge_1)[12];
extern char(&aProfileLocat_1)[17];
extern char(&aProfileDescr_1)[20];
extern char(&aRecordSexp0W_0)[19];
extern char(&aRecordSexp0L_1)[21];
extern char(&aRecordSexp0D_0)[26];
extern char(&aRecordSexp0L_2)[24];
extern char(&aRecordSexp0L_3)[31];
extern char(&aRecordSexp1W_0)[19];
extern char(&aRecordSexp1L_1)[21];
extern char(&aRecordSexp1D_0)[26];
extern char(&aRecordSexp1R_0)[21];
extern char(&aRecordSexp1H_1)[26];
extern char(&aDynkeySexp1R_0)[19];
extern char(&aRecordSexp1H_2)[24];
extern char(&aRecordSexp1L_2)[24];
extern char(&aRecordSexp1L_3)[31];
extern int& dword_5159A4;
extern char *(&off_5159A8)[2];
extern char(&aOk_dialog)[10];
extern char(&aBigok_dialog)[13];
extern char(&aOkcancel_dialo)[16];
extern char(&aBigokcancel_dialog)[19];
extern DatLoad(&flingyDat)[8];
extern int (*(&trigger_conditions)[24])();
extern char(&byte_515AF8)[];
extern char(&byte_515B08)[];
extern __int16(&word_515B18)[];
extern __int16(&word_515B1A)[];
extern __int16(&word_515B38)[];
extern __int16(&word_515B3A)[];
extern __int16(&word_515B58)[];
extern char(&byte_515B60)[];
extern char(&byte_515B61)[];
extern char(&byte_515B68)[];
extern char(&byte_515B69)[];
extern int(&damage_type_multiplier)[5][5];
extern void *& off_5172F0;
extern void *& off_517358;
extern void *& off_5173D0;
extern void *& off_517998;
extern struct_4(&stru_5187EC)[375];
extern struct_3(&stru_5193A0)[228];
extern BriefingAction(&briefing_actions)[10];
extern char *(&statusscreen_infobtn)[1];
extern __int16(&word_519F5C)[];
extern __int16& word_519F64;
extern RegistryOptions *& off_519F7C;
extern char& byte_51A0E8;
extern char& byte_51A0E9;
extern int& Gamma;
extern RECT& ScrLimit;
extern RECT& ScrSize;
extern char(&byte_51A17C)[16];
extern int& dword_51A18C;
extern int& dword_51A190;
extern int& dword_51A194;
extern __int16(&word_51A198)[];
extern __int16& word_51A1A0;
extern __int16& word_51A1A2;
extern int& dword_51A1F0;
extern void *& off_51A1F4;
extern int& dword_51A1F8;
extern int& dword_51A1FC;
extern void *& off_51A200;
extern int& dword_51A204;
extern SFX_related& soundFXList;
extern STREAMED *& dword_51A210;
extern int& dword_51A214;
extern TPROVIDER& stru_51A218;
extern int& dword_51A330;
extern int& TransMaskVector;
extern void *& off_51A338;
extern void *& dword_51A33C;
extern int& dword_51A340;
extern void *& off_51A344;
extern void *& dword_51A348;
extern int& dword_51A34C;
extern void *& customList_UIDlgData;
extern int& dword_51A354;
extern FnInteract(&off_51A358)[4];
extern char(&a_au_hiddenctrl)[18];
extern FnInteract(&off_51A388)[11];
extern int& consoleRaceSpecific;
extern char(&a_autgame_hdr_node)[21];
extern int& is_cursor_shown;
extern char(&a_autsaved_game_node)[23];
extern FnInteract(&off_51A404)[8];
extern char(&a_austreamed)[15];
extern int& dword_51A43C;
extern char(&a_autprovider)[16];
extern char(&a_au_id)[10];
extern FnInteract(&off_51A46C)[9];
extern swishTimer(&gluChatSwishController)[5];
extern FnInteract(&off_51A4A8)[84];
extern FnInteract(&off_51A5F8)[20];
extern char(&a_au_gamenode)[16];
extern FnInteract(&off_51A660)[15];
extern FnInteract(&off_51A69C)[7];
extern FnInteract(&off_51A6B8)[5];
extern FnInteract(&off_51A6CC)[4];
extern FnInteract(&off_51A6DC)[2];
extern FnInteract(&off_51A6E4)[3];
extern FnInteract(&off_51A6F0)[7];
extern char(&separators2_maybe)[13];
extern char(&a_au_savegame)[16];
extern FnInteract(&off_51A734)[7];
extern FnInteract(&off_51A750)[20];
extern FnInteract(&off_51A7A0)[20];
extern FnInteract(&off_51A7F0)[5];
extern FnInteract(&off_51A804)[2];
extern FnInteract(&off_51A80C)[3];
extern FnInteract(&off_51A818)[11];
extern swishTimer& gluScoreSwishController;
extern FnInteract(&off_51A848)[61];
extern FnInteract(&off_51A93C)[11];
extern char(&a_au_phonenumber)[19];
extern char(&a_au_device)[14];
extern swishTimer(&stru_51A99C)[4];
extern FnInteract(&off_51A9AC)[13];
extern char(&separators_maybe)[8];
extern swishTimer(&gluCustmSwishController)[5];
extern FnInteract(&off_51AA08)[38];
extern int& singleRaceSelect;
extern int& singleTypeSelect;
extern char(&a_au_drawtext)[16];
extern char(&a_auttemplate)[16];
extern char(&a_aulistentry)[16];
extern FnInteract& off_51AAF8;
extern FnInteract(&off_51AAFC)[4];
extern FnInteract(&off_51AB0C)[4];
extern FnInteract(&off_51AB20)[29];
extern char(&a_autriggernode)[18];
extern FnInteract(&off_51ABB0)[4];
extern FnInteract(&off_51ABC0)[5];
extern char(&a_autbnetmessage)[19];
extern FnInteract(&a3)[3];
extern int(&dword_51ABFC)[];
extern char(&a_autfd_session)[18];
extern char(&a_autuser_info)[17];
extern char(&a_autban)[11];
extern char(&a_autsavegame)[16];
extern FnInteract(&off_51AC74)[4];
extern FnInteract(&off_51AC84)[3];
extern FnInteract& off_51AC90;
extern FnInteract& off_51AC94;
extern FnInteract(&off_51AC98)[6];
extern int& dword_51ACB0;
extern int& dword_51ACB4;
extern int& dword_51ACB8;
extern int& dword_51ACC0;
extern char(&aEntrextrdwhepb)[81];
extern char(&a_autfd_user)[15];
extern FnInteract(&off_51AD30)[7];
extern int& dword_51AD60;
extern char *& off_51AD64;
extern char& byte_51AD68;
extern int& dword_51AD90;
extern char *& off_51AD94;
extern int& dword_51AD98;
extern char& byte_51ADC0;
extern LPCSTR& lpFileName;
extern int& dword_51AE68;
extern char *& off_51AE6C;
extern int& a4;
extern int& dword_51AE84;
extern int& id;
extern char *(&off_51AE94)[4];
extern char *(&off_51AE98)[3];
extern char *(&off_51AE9C)[2];
extern char *& off_51AEA0;
extern int& nNumber;
extern char *& off_51AEA8;
extern char(&a_xxx_xxxxxxxxx)[26];
extern char(&a___xxx____xxxx)[82];
extern char(&a____xxxxx_____)[170];
extern char(&a______xxxxx___)[290];
extern int& dword_51B108;
extern int(&dword_51B1E8)[];
extern int& dword_51B260;
extern char(&aAutareafixup)[17];
extern HANDLE& hObject;
extern int& dword_51B294;
extern char(&a_au_bltmask)[15];
extern char(&a_au_ctrlnode)[16];
extern int& dword_51B2C8;
extern char& byte_51B2CC;
extern char& byte_51B2CD;
extern char& byte_51B2CE;
extern char& byte_51B2CF;
extern char(&a_au_dlggrp)[14];
extern int& dword_51B2E8;
extern int& dword_51B2F0;
extern int& dword_51B2F4;
extern int& dword_51B2F8;
extern char(&a_auchunknode)[16];
extern char(&aUs)[3];
extern char(&aSs)[3];
extern int (__cdecl *&off_51B448)(_DWORD);
extern int (*(&off_51B44C)[2])();
extern int (*&off_51B450)();
extern double& dbl_51B460;
extern char(&aPow_0)[4];
extern _TBYTE& tbyte_51B470;
extern _TBYTE& tbyte_51B47A;
extern _TBYTE& tbyte_51B48E;
extern double& dbl_51B4A2;
extern _TBYTE& tbyte_51B4D0;
extern double& dbl_51B4E4;
extern int (*&off_51B530)();
extern char& byte_51B540;
extern float& flt_51B550;
extern float& flt_51B554;
extern float& flt_51B558;
extern char& byte_51B55C;
extern double& dbl_51B574;
extern double& dbl_51B57C;
extern double& dbl_51B58C;
extern _TBYTE& tbyte_51B594;
extern void *(&off_51B59E)[64];
extern double& dbl_51B6A0;
extern double& dbl_51B6A8;
extern double& dbl_51B6B0;
extern double& dbl_51B6C0;
extern int& dword_51B6C8;
extern _TBYTE& tbyte_51B7B8;
extern _TBYTE& tbyte_51B7C4;
extern char *& dword_51BAA0;
extern int& dword_51BAA8;
extern int& dword_51BAAC;
extern int& dword_51BAB0;
extern int& dword_51BAB4;
extern int& dword_51BAB8;
extern int& dword_51BABC;
extern int& dword_51BAC0;
extern int& dword_51BAC4;
extern int& dword_51BAC8;
extern void *& dword_51BAD0;
extern int& dword_51BAD4;
extern int& dword_51BAD8;
extern int& dword_51BAE0;
extern char& byte_51BAE8;
extern int& dword_51BAEC;
extern int& dword_51BAF0;
extern int& dword_51BAF4;
extern CHAR(&Filename)[260];
extern char& byte_51BBFC;
extern int& dword_51BC00;
extern int (__stdcall *&dword_51BC04)(_DWORD);
extern int& dword_51BC08;
extern int (__stdcall *&dword_51BC0C)(_DWORD, _DWORD);
extern int& dword_51BC10;
extern int (__stdcall *&MessageBoxA_0)(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType);
extern HWND (__stdcall *&GetActiveWindow_0)();
extern HWND (__stdcall *&GetLastActivePopup_0)(HWND hWnd);
extern HWINSTA (__stdcall *&GetProcessWindowStation_0)();
extern BOOL (__stdcall *&GetUserObjectInformationA_0)(HANDLE hObj, int nIndex, PVOID pvInfo, DWORD nLength, LPDWORD lpnLengthNeeded);
extern int& dword_51BD7C;
extern int& dword_51BD80;
extern int& dword_51BD90;
extern int(&dword_51BD98)[];
extern volatile LONG& Target;
extern int (__cdecl *&dword_51BDDC)(_DWORD, _DWORD);
extern int& dword_51BDE8;
extern UINT& dword_51BDF8;
extern int& dword_51BE00;
extern int& dword_51BE04;
extern int& dword_51BE08;
extern int& dword_51BE0C;
extern int& dword_51BE14;
extern int& dword_51BE18;
extern struct _TIME_ZONE_INFORMATION& TimeZoneInformation;
extern int& dword_51BF14;
extern char *& dword_51BF18;
extern int& dword_51BF1C;
extern int& dword_51BF30;
extern int& dword_51BF34;
extern int& dword_51BF38;
extern int& dword_51BF3C;
extern int& dword_51BF40;
extern int& dword_51BF44;
extern int& dword_51BF64;
extern int& dword_51BF94;
extern int& dword_51BF98;
extern int& dword_51BF9C;
extern int& dword_51BFA0;
extern int& dword_51BFA8;
extern HINSTANCE& hInst;
extern HWND& hWndParent;
extern int& dword_51BFB4;
extern char(&byte_51BFB8)[1];
extern char(&byte_51BFB9)[27];
extern int& dword_51BFD4;
extern char& byte_51BFD8;
extern int& dword_51BFDC;
extern int& dword_51BFE0;
extern int& dword_51BFE4;
extern int& dword_51BFE8;
extern int& dword_51BFEC;
extern int& dword_51BFF0;
extern int& dword_51BFF4;
extern int& Ophelia;
extern Bitmap(&glue_background_palette)[129];
extern void *& gluAllTblData;
extern void *& dword_51C40C;
extern MapData4& level_cheat_mission;
extern int& dword_51C414;
extern dialog *& dword_51C418;
extern int& dword_51C428;
extern __int16& word_51C42C;
extern int(&dword_51C430)[];
extern __int16(&word_51C480)[20];
extern int& dword_51C4A8;
extern int& dword_51C4AC;
extern dialog *& dword_51C4B0;
extern void *& dword_51C4B4;
extern int& dialog_count;
extern int& level_cheat_is_bw;
extern CHAR(&main_directory)[260];
extern int(&dword_51C5C8)[];
extern int& level_cheat_race;
extern void *& dword_51C60C;
extern int(&randomCounts)[];
extern int& dword_51C618;
extern int& dword_51C630;
extern int& dword_51C648;
extern int& dword_51C64C;
extern int& dword_51C654;
extern int& dword_51C65C;
extern int& dword_51C660;
extern int& dword_51C678;
extern int& dword_51C67C;
extern int& dword_51C680;
extern int& dword_51C68C;
extern int& dword_51C690;
extern int& dword_51C694;
extern int& dword_51C6AC;
extern int& dword_51C6B0;
extern int& dword_51C6C0;
extern int& dword_51C6C4;
extern int& dword_51C6C8;
extern int& dword_51C6D8;
extern int& dword_51C6E8;
extern int& dword_51C6EC;
extern int& dword_51C6F4;
extern int& dword_51C850;
extern unsigned int& initialSeed;
extern int& LastRandomNumber;
extern int& randomCountsTotal;
extern int& dword_51CA1C;
extern char(&broodat_mpq_path)[520];
extern HANDLE& patch_rt_mpq;
extern HANDLE& broodat_mpq;
extern void *& dword_51CC30;
extern HANDLE& cd_archive_mpq;
extern HANDLE& stardat_mpq;
extern char(&tstrFilename)[260];
extern int& dword_51CD44;
extern char *& dword_51CD48;
extern char *& dword_51CD4C;
extern char *& dword_51CD50;
extern char *& dword_51CD54;
extern char(&archivename)[260];
extern int& cdkey_encrypted_len;
extern void *& cdkey_encrypted;
extern int& cdkeyowner_encrypted_len;
extern void *& cdkeyowner_encrypted;
extern int& IsRunning;
extern int(&LatencyFrames)[7];
extern int(&dword_51CE8C)[];
extern GamePosition& gwNextGameMode;
extern int& dword_51CE94;
extern int& visionUpdateCount;
extern char& visionUpdated;
extern char& byte_51CE9D;
extern int& FramesUntilNextTurn;
extern int& bytes_read;
extern char *& dword_51CEA8;
extern char& byte_51CEAC;
extern dialog *& dword_51CEB0;
extern int& dword_51CEB4;
extern int& dword_51CEB8;
extern char *& dword_51CEBC;
extern int& credits_interrupted;
extern int& dword_51CEC4;
extern char& byte_51CEC8;
extern int(&dword_51CECC)[];
extern grpHead *(&ImageGrpGraphics)[1];
extern int& dword_51D218;
extern int(&dword_51D794)[];
extern int& dword_51D7F0;
extern CImage(&stru_51DE70)[64];
extern CImage *& dword_51EE70;
extern grpHead(&stru_51EE78)[1];
extern CImage *& dword_51F1F8;
extern ImagesDatExtraOverlayLO_Files& lo_files;
extern CImage *& dword_5240B4;
extern int(&dword_5240B8)[];
extern int(&dword_5240BC)[];
extern char(&building_overlay_state_max)[1000];
extern CImage(&stru_5244B8)[64];
extern CImage *& dword_5254B8;
extern CImage *& dword_52E4C0;
extern CImage *& dword_52E4C4;
extern char(&tileset_shift)[256];
extern LO_Overlays& ShieldOverlays;
extern CImage *& dword_52F564;
extern CImage(&stru_52F568)[5000];
extern CImage(&stru_57D768)[80];
extern CImage *& dword_57EB68;
extern CImage *& dword_57EB6C;
extern CImage *& dword_57EB70;
extern CImage(&stru_57EB78)[12];
extern char& byte_57EE78;
extern int(&dword_57EE7C)[7];
extern int(&dword_57EE98)[];
extern char(&playerName)[25];
extern int& playerExploredVisions;
extern int& turn_counter;
extern int(&dword_57EEC0)[];
extern int& dword_57EEC4;
extern int& dword_57EEC8;
extern int& dword_57EECC;
extern int& dword_57EED0;
extern int& dword_57EED4;
extern int& dword_57EED8;
extern int& dword_57EEDC;
extern PlayerInfo(&Players)[12];
extern int& LatencyCalls;
extern char(&curPlayerID)[4];
extern char(&byte_57F098)[];
extern char(&byte_57F09A)[22];
extern int& playerVisions;
extern BYTE& multiPlayerMode;
extern int(&playerStatusArray)[8];
extern int& dword_57F0BC;
extern int& dword_57F0C0;
extern int& dword_57F0C4;
extern int& dword_57F0C8;
extern int& dword_57F0CC;
extern int& dword_57F0D0;
extern int& dword_57F0D4;
extern int& MaxTurnSize;
extern dialog *& load_screen;
extern Bitmap& stru_57F0E0;
extern Bitmap& stru_57F0E8;
extern PlayerResources& BWDATA_PlayerResources;
extern int& dword_57F1B0;
extern int& dword_57F1B4;
extern int& dword_57F1B8;
extern int& dword_57F1BC;
extern int& dword_57F1C0;
extern int& dword_57F1C4;
extern char(&byte_57F1CB)[];
extern int& dword_57F1CC;
extern Position& MoveToTile;
extern MapSize& map_size;
extern __int16& unignored_player_flags;
extern __int16& SendTextFilter;
extern Tileset& CurrentTileSet;
extern __int16& currentMusicId;
extern char& byte_57F1E1;
extern char& consoleIndex;
extern char(&customSingleplayer)[9];
extern int(&PlayerVision)[12];
extern int(&factionsColorsOrdering)[8];
extern DWORD& ElapsedTimeFrames;
extern int& savedElapsedSeconds;
extern MapData& CampaignIndex;
extern char(&next_scenario)[32];
extern char& selectedSingleplayerRace;
extern int& dword_57F267;
extern int& dword_57F26B;
extern __int16(&word_57F270)[];
extern __int16(&word_57F272)[5];
extern UnitAvail& UnitAvailability;
extern char(&byte_57FD2C)[8];
extern int& dword_57FD34;
extern int& dword_57FD38;
extern char(&CurrentMapFileName)[260];
extern char(&CurrentMapName)[32];
extern int(&dword_57FE60)[];
extern char& byte_581D60;
extern char& lossType;
extern char(&playerHasLeft)[];
extern char& byte_581D64;
extern char& byte_581D65;
extern char& unkVictoryVariable;
extern char& byte_581D68;
extern char& byte_581D69;
extern char(&byte_581D6A)[11];
extern char& byte_581D75;
extern int(&dword_581D76)[];
extern int(&dword_581D7A)[];
extern char(&byte_581DD5)[];
extern u8(&PlayerColors)[12];
extern AllScoresStruct& AllScores;
extern TechSC(&TechAvailableSC)[12];
extern TechSC(&TechResearchSC)[12];
extern UpgradesSC(&UpgradeMaxSC)[12];
extern UpgradesSC(&UpgradeLevelSC)[12];
extern char(&byte_58D5AF)[];
extern int& dword_58D5B0;
extern int& dword_58D5B4;
extern int& dword_58D5B8;
extern ForceName& BWDATA_ForceNames;
extern PlayerAlliance(&Alliance)[12];
extern int(&MissionObjectives)[12];
extern int& CountdownTimer;
extern int& ElapsedTimeSeconds;
extern int& dword_58D6FC;
extern int& dword_58D700;
extern int& dword_58D704;
extern int& dword_58D708;
extern char& byte_58D70C;
extern char& byte_58D70D;
extern __int16& word_58D70E;
extern int& dword_58D710;
extern int& dword_58D714;
extern int& dword_58D718;
extern int& dword_58D71C;
extern Position(&startPositions)[8];
extern int(&TriggerSwitches)[8];
extern Location(&LocationTable)[254];
extern char(&byte_58F038)[20];
extern int& TimerIsPaused;
extern TechBW(&TechAvailableBW)[12];
extern TechBW(&TechResearchBW)[12];
extern u8(&ResearchProgress)[72];
extern UpgradesBW(&UpgradeMaxBW)[12];
extern UpgradesBW(&UpgradeLevelBW)[12];
extern u8(&UpgradeProgress)[96];
extern char& IsExpansion;
extern int& dword_58F442;
extern int& dword_58F446;
extern int& dword_5967F0;
extern GameData& gameData;
extern int& isHost;
extern Char4& NetMode;
extern MapDownload *& map_download;
extern char& byte_596894;
extern HACCEL& DlgAccelerator;
extern InputProcedure(&input_procedures)[19];
extern int& dword_5968EC;
extern HACCEL& hAccel;
extern HACCEL& dword_5968F4;
extern HACCEL& dword_5968F8;
extern InputProcedure& AcceleratorTables;
extern GamePosition& gwGameMode;
extern char(&byte_596910)[260];
extern int& dword_596A14;
extern char(&is_keycode_used)[256];
extern dialog *& dlg;
extern int(&dword_596B20)[];
extern int& dword_596B24;
extern int& dword_596B44;
extern int& dword_596B48;
extern int& possible_gamescreen_y_min;
extern int& dword_596B70;
extern int& possible_gamescreen_y_max;
extern LPTOP_LEVEL_EXCEPTION_FILTER& lpTopLevelExceptionFilter;
extern int(&dword_596B7C)[12];
extern int& dword_596BAC;
extern int& dword_596BB0;
extern int& dword_596BB4;
extern int& dword_596BB8;
extern GameActionDataBlock *& replayData;
extern HANDLE& mapArchiveHandle;
extern char& byte_596BC8;
extern int& has_effects_scode_maybe;
extern void *& dword_596CD0;
extern int& dword_596CD4;
extern int& dword_5971D8;
extern int& dword_5971DC;
extern int& dword_5971E0;
extern int(&player_left)[8];
extern int& game_result_reported_maybe;
extern CUnit *(&ClientSelectionGroup)[12];
extern int& MainBltMask;
extern char& byte_59723C;
extern char& ClientSelectionCount;
extern Bitmap& GameScreenConsole;
extern CUnit *& ActivePortraitUnit;
extern int(&dword_59724C)[];
extern int(&dword_597250)[];
extern int(&dword_597254)[];
extern int(&dword_597258)[];
extern int(&dword_59725C)[];
extern int(&dword_597260)[];
extern int& dword_59727C;
extern char& byte_597280;
extern dialog *& statlb_Dlg;
extern int& dword_597288;
extern char& byte_59728C;
extern char(&byte_597290)[128];
extern char(&byte_597310)[128];
extern int& dword_597390;
extern int& dword_597394;
extern int& dword_597398;
extern char& byte_5973A0;
extern char(&byte_5982A0)[768];
extern char(&byte_5985A0)[];
extern char(&byte_5992A0)[256];
extern void *& dword_5993A0;
extern int& dword_5993A4;
extern TileID *& ZergCreepArray;
extern int& dword_5993AC;
extern RECT& game_screen_pos;
extern unsigned int& dword_5993C0;
extern TileID *& MapTileArray;
extern int& TileSetMapSize;
extern MegatileFlags *& megatile_default_flags;
extern MiniTileMaps_type *& MiniTileFlags;
extern StringTbl& MapStringTbl;
extern char(&byte_5993D8)[];
extern int& chk_string_section_size;
extern int& dword_5994DC;
extern int(&palette)[256];
extern __int16& megatileCount;
extern unsigned int& ThreadId;
extern int& dword_5998E8;
extern struct_6(&stru_5998F0)[8];
extern void *& dword_5999B0;
extern int& dword_5999B4;
extern char& byte_5999B8;
extern MenuPosition& glGluesRelated_maybe;
extern dialog *& dword_5999C0;
extern dialog *& gluLogin_Dlg;
extern int& dword_5999C8;
extern int& dword_5999CC;
extern int& dword_5999D0;
extern int& update_lobby_glue;
extern int& dword_5999D8;
extern int& dword_5999DC;
extern int& dword_5999E0;
extern dialog *& dword_5999E4;
extern int& dword_5999E8;
extern dialog *& dword_5999EC;
extern GameData& stru_5999F0;
extern dialog *& gluJoin_Dlg;
extern int& dword_599A84;
extern int& dword_599A88;
extern char& byte_599A90;
extern Bitmap& p_hist_pcx;
extern char& byte_599B98;
extern char(&dest)[256];
extern int& dword_599D98;
extern dialog *& glu_load_Dlg;
extern dialog *& dword_599DA0;
extern char(&byte_599DA4)[28];
extern int& dword_599DC0;
extern char& byte_599DC8;
extern CHAR(&dword_599EC8)[];
extern int& dword_599ECC;
extern int& dword_599ED0;
extern int& dword_599ED4;
extern char& byte_599ED8;
extern char(&byte_599FD0)[256];
extern int& dword_59A0D0;
extern int(&dword_59A0D4)[];
extern int& dword_59A0D8;
extern int& dword_59A0DC;
extern int& dword_59A0E0;
extern int(&dword_59A0E4)[];
extern int& dword_59A0E8;
extern int& dword_59A0EC;
extern int& dword_59A28C;
extern int& dword_59A290;
extern int& dword_59A294;
extern int& dword_59A33C;
extern _DWORD& dword_59B3D0;
extern char(&byte_59B3D8)[56];
extern int(&dword_59B410)[];
extern int(&dword_59B414)[];
extern int(&dword_59B418)[];
extern char(&byte_59B41C)[508];
extern int& dword_59B618;
extern int& dword_59B61C;
extern dialog *& gluScore_Dlg;
extern int& dword_59B624;
extern char(&byte_59B628)[260];
extern void *& dword_59B72C;
extern char(&byte_59B730)[12];
extern int(&dword_59B73C)[8];
extern int& dword_59B75C;
extern int(&dword_59B760)[];
extern int& dword_59B764;
extern int& dword_59B768;
extern int& dword_59B76C;
extern char(&byte_59B770)[32];
extern GameData& stru_59B790;
extern int& dword_59B820;
extern int& dword_59B824;
extern int& dword_59B828;
extern int& dword_59B82C;
extern int (*&dword_59B830)(void);
extern int& dword_59B834;
extern dialog *& glu_modem_status_Dlg;
extern int& dword_59B83C;
extern int& custom_game_slots;
extern int& dword_59B844;
extern int& dword_59B848;
extern char(&menuMapRelativePath)[260];
extern char(&byte_59B958)[260];
extern __int16& selectedGameTypeParam;
extern void *& dword_59BA60;
extern char(&selectedGameType)[];
extern char(&byte_59BA68)[260];
extern char& byte_59BB6C;
extern char(&CurrentMapFolder)[260];
extern dialog *& custom_game_submode;
extern dialog *& map_listbox;
extern int& custom_game_mode;
extern char(&menuMapFileName)[260];
extern int& dword_59BD8C;
extern HGDIOBJ& dword_59BD90;
extern int& dword_59BD94;
extern HGDIOBJ& dword_59BD98;
extern void *& dword_59BD9C;
extern int& dword_59BDA0;
extern int& dword_59BDA4;
extern byte(&playerForce)[8];
extern PlayerInfo(&LobbyPlayers)[12];
extern int(&dword_59BF60)[];
extern int(&dword_59BF64)[];
extern int& dword_59BF6C;
extern MapDirEntry *& replay;
extern char(&top_map_listing_dir)[260];
extern char *(&MapdataFilenames)[65];
extern __int16& word_59C184;
extern void (__cdecl *&minimapVisionUpdate)();
extern Bitmap& minimap_surface_no_fog;
extern Bitmap& minimap_surface;
extern __int16& word_59C19C;
extern void (__cdecl *&minimapSurfaceUpdate)();
extern dialog *& dword_59C1A4;
extern int& dword_59C1A8;
extern void *& dword_59C1AC;
extern __int16& word_59C1B0;
extern MinimapSurfaceInfoRelated(&stru_59C1B8)[16];
extern int& dword_59C2B8;
extern char(&byte_59C2C0)[];
extern char(&byte_59C3C0)[256];
extern char(&byte_59C4C0)[256];
extern char(&byte_59C5C0)[256];
extern int(&dword_59C6C0)[256];
extern int(&dword_59CAC0)[];
extern int(&dword_59CAC4)[37];
extern bool& HasMegatileUpdate;
extern dialog *& minimap_Dlg;
extern char(&byte_59CB60)[];
extern int(&dword_59CB64)[];
extern dialog *& minimap_dialog;
extern int& minimap_surface_height;
extern __int16& word_59CC68;
extern __int16& word_59CC6C;
extern __int16& word_59CC70;
extern int& minimap_surface_width;
extern int& countdownTimeRemaining;
extern int& countdownTimeTickCount;
extern int& dword_59CC80;
extern int& dword_59CC84;
extern int& countdownTimeTickCount_0;
extern int& dword_59CC8C;
extern int& dword_59CC90;
extern int& dword_59CC94;
extern CUnit *& dword_59CC98;
extern CUnit *& UnitNodeList_VisibleUnit_Last;
extern int(&error_message)[];
extern int& dword_59CCA4;
extern CUnit(&UnitNodeTable)[1700];
extern int& dword_6283E8;
extern CUnit *& UnitNodeList_HiddenUnit_First;
extern int& UnitNodeTable_UsedNodeCount;
extern CUnit *& UnitNodeList_ScannerSweep_First;
extern CUnit *(&UnitNodeList_PlayerFirstUnit)[12];
extern CUnit *& dword_628428;
extern CUnit *& UnitNodeList_HiddenUnit_Last;
extern CUnit *& UnitNodeList_VisibleUnit_First;
extern CUnit *& UnitNodeList_ScannerSweep_Last;
extern CUnit *& UnitNodeList_UnusedUnit_First_maybe;
extern CUnit *& UnitNodeList_UnusedUnit_Last_maybe;
extern vr4entry *& VR4Data;
extern int& ScreenX;
extern int& map_width_pixels;
extern byte *& GameTerrainCache;
extern vx4entry *& VX4Data;
extern int& ScreenY;
extern int(&dword_628484)[];
extern int(&dword_628488)[];
extern int& MoveToX;
extern int& parallaxSomethingWidth;
extern __int16 *& CellMap;
extern int& unknown_x_tile;
extern int& parallaxSomethingHeight;
extern __int16& move_area;
extern __int16& word_6284A2;
extern __int16& word_6284A4;
extern __int16& word_6284A6;
extern int& MoveToY;
extern int& unknown_y_tile;
extern int& unknown_y_pixel;
extern int& map_height_pixels;
extern CUnit *(&PlayerSelection)[12];
extern PlayersSelections& playersSelections;
extern char(&validation_replay_path)[3072];
extern char& league_maybe;
extern int(&dword_629284)[];
extern SpriteTileData& SpritesOnTileRow;
extern char(&byte_629A88)[520];
extern char(&byte_629C90)[];
extern int& dword_629D90;
extern CSprite(&SpriteTable)[2500];
extern int& dword_63FD28;
extern __int16(&word_63FE2C)[];
extern CSprite *& UnusedSprites;
extern CSprite *& dword_63FE34;
extern char& byte_63FE38;
extern __int16(&word_63FE40)[];
extern char& byte_63FEC0;
extern char& byte_63FEC1;
extern char& byte_63FEC2;
extern __int16& word_63FEC4;
extern CUnit *& dword_63FEC8;
extern int& dword_63FECC;
extern __int16& word_63FED0;
extern int& dword_63FED4;
extern int& dword_63FED8;
extern int(&dword_63FEE0)[];
extern int& dword_63FEE4;
extern int(&dword_63FEEC)[];
extern int& dword_63FEF4;
extern int& dword_63FF2C;
extern char& byte_63FF30;
extern CUnit *& dword_63FF34;
extern CUnit *& dword_63FF38;
extern CUnit *& dword_63FF3C;
extern int& dword_63FF40;
extern int& CanUpdatePoweredStatus;
extern int& dword_63FF48;
extern int& dword_63FF4C;
extern int& units_recalled;
extern CUnit *& UnitNodeList_PsiFieldProvider_First;
extern int& dword_63FF58;
extern CUnit *& word_63FF5C;
extern char(&byte_63FF5F)[];
extern char(&byte_63FF60)[];
extern char(&byte_63FF61)[];
extern char(&byte_63FF62)[];
extern char(&byte_63FF63)[];
extern int& dword_63FF64;
extern int& dword_63FF68;
extern int& dword_63FF6C;
extern char& byte_63FF70;
extern __int16& word_63FF74;
extern __int16(&word_63FF78)[416];
extern __int16(&word_6402B8)[328];
extern int& selectionSoundCounter;
extern __int16(&word_640550)[398];
extern int& dword_64086C;
extern int& dword_640870;
extern int& dword_640874;
extern int& dword_640878;
extern int& dword_64087C;
extern int& is_placing_building;
extern int& isPlacingAddon;
extern __int16(&placeBuildBaseType)[];
extern UnitType& placeBuildingUnitType;
extern char& _placementRelated;
extern char& byte_64088D;
extern Position& placeBuilding;
extern char(&byte_640898)[];
extern char(&byte_6408F8)[96];
extern int& placeBuildingMessageId;
extern __int16(&word_64095C)[];
extern char(&algn_64095E)[2];
extern struct_0(&placement_boxes)[2];
extern PlayerInfo(&playerReplayWatchers)[12];
extern int& Chat_IncrementY;
extern int(&dword_640B24)[12];
extern int& info_message_remove_tick;
extern u8& Chat_NextLine;
extern Chat_TextLine(&Chat_GameText)[13];
extern u8(&Chat_ColorBytes)[13];
extern char(&Chat_LineFlags)[13];
extern char& byte_641691;
extern char& byte_641692;
extern char& byte_641693;
extern char& byte_641694;
extern int& COrderCount;
extern COrder *& dword_64B2E0;
extern COrder *& dword_64B2E4;
extern CBullet(&BulletNodeTable)[100];
extern int& dword_64DEA8;
extern CBullet *& BulletNodeTable_LastElement;
extern CUnit *& dword_64DEB0;
extern int& unknown_air_splash_related_unit_count;
extern int& isInGroundSplashProc;
extern int& bullet_count;
extern int& dword_64DEC0;
extern CBullet *& BulletNodeTable_FirstElement;
extern int(&dword_64DEC8)[];
extern int(&dword_64DECC)[];
extern int& dword_64EEC8;
extern CUnit *& bulletBounceMissileSource;
extern CUnit *& bulletBounceMissileTarget;
extern CUnit *& bulletBounceMissileNext;
extern CBullet *& first_free_bullet;
extern CBullet *& last_free_bullet;
extern CUnit& target;
extern __int16& word_650970;
extern EndgameState(&endgame_state)[8];
extern __int16& word_65097C;
extern int(&dword_650980)[1];
extern __int16& word_6509A0;
extern char(&active_players)[8];
extern TriggerListEntry *& dword_6509AC;
extern int& active_trigger_player;
extern char& byte_6509B4;
extern _BYTE(&byte_6509B8)[4];
extern int& IS_GAME_PAUSED;
extern __int16& word_6509CC;
extern __int16& word_6509CE;
extern CThingy *& ThingyList_UsedFirst;
extern CThingy *& dword_65291C;
extern bool& wantThingyUpdate;
extern CThingy(&stru_652928)[500];
extern CThingy *& dword_654868;
extern CThingy *& dword_65486C;
extern CThingy *& dword_654870;
extern CThingy *& first_lone_sprite;
extern CThingy *& dword_654878;
extern CThingy *& dword_65487C;
extern char(&TurnBuffer)[512];
extern int(&arraydatabytes)[];
extern int& dword_654A84;
extern int& dword_654A88;
extern int& dword_654A8C;
extern int& dword_654A90;
extern int& dword_654A94;
extern int& dword_654A98;
extern int& dword_654A9C;
extern unsigned int& sgdwBytesInCmdQueue;
extern int(&dword_654AA8)[512];
extern int& dword_6552A8;
extern char(&byte_6552B0)[512];
extern char& byte_6554B0;
extern int(&arraydata)[9];
extern char(&byte_6554D8)[512];
extern int& dword_6556D8;
extern int& dword_6556DC;
extern int& InGame;
extern int& Latency;
extern int& dword_6556E8;
extern void (__thiscall *&dword_6556EC)(dlgEvent *);
extern void (__thiscall *&GameScreenRClickEvent)(dlgEvent *);
extern int& dword_6556F4;
extern int& dword_6556F8;
extern __int16& word_6556FC;
extern char(&Upgrade_MaxRepeats)[61];
extern __int16(&Upgrade_MineralCostBase)[61];
extern __int16(&Upgrade_GasCostFactor)[61];
extern __int16(&Upgrade_GasCostBase)[61];
extern __int16(&Upgrade_Unknown)[61];
extern __int16(&Upgrade_TimeCostFactor)[61];
extern __int16(&Upgrade_MineralCostFactor)[61];
extern __int16(&Upgrade_Label)[61];
extern __int16(&Upgrade_Icon)[61];
extern char(&Upgrade_IsBroodWarPnly)[61];
extern __int16(&Upgrade_TimeCostBase)[61];
extern char(&Upgrade_Race)[61];
extern int& dword_655C3C;
extern Bitmap& stru_655C40;
extern int& dword_655C48;
extern int& dword_655C4C;
extern int& dword_655C50;
extern int& dword_655C54;
extern int(&dword_655C58)[110];
extern char(&byte_655E10)[110];
extern int(&dword_655E80)[110];
extern char(&byte_656038)[110];
extern char(&byte_6560A8)[110];
extern char(&byte_656118)[110];
extern int& dword_656188;
extern int& dword_65618C;
extern int& dword_656190;
extern __int16(&Tech_Unknown)[44];
extern __int16(&Tech_GasCost)[44];
extern __int16(&Tech_MineralCost)[44];
extern __int16(&Tech_LabelIndex)[];
extern __int16(&Tech_Unknown2)[44];
extern __int16(&Tech_EnergyCost)[44];
extern __int16(&Tech_ResearchTime)[44];
extern __int16(&Tech_Icon)[];
extern u8(&Weapon_DamageFactor)[130];
extern u16(&Weapon_TargetErrorMessage)[130];
extern WeaponBehavior(&Weapon_Behavior)[130];
extern char(&Weapon_ExplosionType)[130];
extern u16(&Weapon_Icon)[130];
extern __int16(&Weapon_InnerSplashRadius)[130];
extern u8(&Weapon_AttackDirection)[130];
extern int(&Weapon_MinRange)[130];
extern u8(&Weapon_YOffset)[130];
extern int(&Weapon_Graphic)[130];
extern u16(&Weapon_DamageAmount)[130];
extern u8(&Weapon_DamageCooldown)[130];
extern char(&Weapon_RemoveAfter)[130];
extern __int16(&Weapon_MedianSplashRadius)[130];
extern char(&Weapon_Upgrade)[130];
extern DamageType(&Weapon_DamageType)[130];
extern __int16(&Weapon_Label)[130];
extern char(&Weapon_TechHint)[130];
extern int(&Weapon_MaxRange)[130];
extern __int16(&Weapon_DamageBonus)[130];
extern u16(&Weapon_OuterSplashRadius)[132];
extern u8(&Weapon_LaunchSpin)[130];
extern u8(&Weapon_XOffset)[130];
extern WeaponTargetFlags(&Weapon_TargetFlags)[130];
extern char& byte_657A9C;
extern int(&dword_657AA0)[1024];
extern int& dword_658AA0;
extern int (*&dword_658AA4)(void);
extern int& dword_658AA8;
extern int& dword_658AAC;
extern int& dword_658AB0;
extern int& dword_658AB4;
extern int& dword_658AB8;
extern int& dword_658ABC;
extern char& byte_658AC0;
extern int(&spkLayer)[5];
extern void *& spkHandle;
extern void *& dword_658ADC;
extern int& dword_658AE0;
extern int& dword_658AE4;
extern int(&dword_658AE8)[];
extern int& dword_658AEC;
extern int& dword_658AF0;
extern int& dword_658AF4;
extern int& dword_658AF8;
extern int& dword_658AFC;
extern int& dword_658B00;
extern int& dword_658B04;
extern int& dword_658B08;
extern int& dword_658B0C;
extern int(&dword_658B10)[1024];
extern int& dword_65EB10;
extern int& dword_65EB14;
extern int& dword_65EB18;
extern int& dword_65EB1C;
extern int& dword_65EB20;
extern __int16& word_65EB26;
extern int& dword_65EB28;
extern char& byte_65EB2C;
extern char& byte_65EB2D;
extern char& byte_65EB2E;
extern __int16(&word_65EB30)[];
extern char& byte_65EB32;
extern char& byte_65EB34;
extern int& IsMultiplayer;
extern int& dword_65FBF4;
extern int& dword_65FBF8;
extern int& dword_65FBFC;
extern int& dword_65FC00;
extern int& dword_65FC04;
extern int& dword_65FC08;
extern int& dword_65FC0C;
extern char& byte_65FC10;
extern char& byte_65FC11;
extern u8(&Unit_MaxAirHits)[228];
extern u16(&Unit_GasCost)[228];
extern u8(&Unit_ArmorAmount)[228];
extern char(&byte_65FFAC)[];
extern u16(&Unit_FirstWhatSound)[228];
extern u8(&Unit_AIInterval)[228];
extern u16(&Unit_MapStringID)[228];
extern u16(&Unit_TimeCost)[228];
extern u8(&Unit_Direction)[228];
extern u8(&Unit_BroodwarOnly)[228];
extern __int16(&Unit_SubUnit)[228];
extern u8(&Unit_SpaceProvided)[228];
extern u16(&Unit_MaxShieldPoints)[228];
extern __int16& word_660E92;
extern u8(&Unit_ConstructionGraphics)[228];
extern u16(&Unit_LastYesSound)[106];
extern u16(&Unit_AvailabilityFlags)[228];
extern WeaponType(&Unit_AirWeapon)[228];
extern UnitDimentions(&Unit_Dimensions)[228];
extern u16(&Unit_LastAnnoyedSound)[106];
extern u16(&Unit_ReadySound)[106];
extern u8(&Unit_RightClickAction)[228];
extern u8(&Unit_SizeType)[228];
extern Order(&Unit_HumanAiIdleOrder)[228];
extern u32(&Unit_MaxHitPoints)[228];
extern u16(&Unit_AddonOffset)[192];
extern u32(&Unit_Placement)[228];
extern u16(&Unit_LastWhatSound)[228];
extern u8(&Unit_SeekRange)[228];
extern Order(&Unit_ComputerAiIdleOrder)[228];
extern u16(&Unit_IdlePortrait)[228];
extern u8(&Unit_Elevation)[228];
extern u8(&Unit_SightRange)[228];
extern Order(&Unit_AttackUnitOrder)[228];
extern char& byte_663325;
extern char& byte_66333E;
extern Order& order_id;
extern char& byte_663369;
extern char& byte_663375;
extern u16(&Unit_BuildScore)[228];
extern u8(&Unit_ArmorUpgrade)[228];
extern WeaponType(&Unit_GroundWeapon)[228];
extern u8(&Unit_GroupFlags)[228];
extern u16(&Unit_MineralCost)[228];
extern u8(&Unit_AttackMoveOrder)[228];
extern u16(&Unit_FirstAnnoyedSound)[106];
extern u16(&Unit_FirstYesSound)[106];
extern u8(&Unit_SupplyRequired)[228];
extern u8(&Unit_SubLabel)[228];
extern u16(&Unit_DestroyScore)[228];
extern UnitPrototypeFlags(&Unit_PrototypeFlags)[228];
extern u8(&Unit_SpaceRequired)[228];
extern FlingyID(&Unit_Graphic)[228];
extern u8(&Unit_MaxGroundHits)[228];
extern u8(&Unit_SupplyProvided)[228];
extern u8(&Unit_ShieldsEnabled)[228];
extern Order(&Unit_ReturnToIdleOrder)[228];
extern u16(&Units_InfestChangeUnit)[96];
extern char(&Orders_Unknown4)[189];
extern char(&Orders_UseWeaponTargeting)[189];
extern char(&Orders_Unused12)[189];
extern char(&Orders_Unknown11)[189];
extern char(&Orders_IscriptAnimation)[189];
extern Tech(&Orders_TechUsed)[189];
extern __int16(&Orders_HilightedIcon)[189];
extern char(&Orders_CanBeInterrupted)[189];
extern char(&Orders_Unknown7)[189];
extern char(&Orders_Unknown9)[189];
extern __int16(&Orders_Label)[189];
extern char(&Orders_ObscuredOrder)[189];
extern char(&Orders_CanBeObstructed)[189];
extern __int16(&Orders_Unknown17)[189];
extern char(&Orders_CanBeQueued)[189];
extern char(&Orders_Unused5)[189];
extern WeaponType(&Orders_TargetingWeapon)[189];
extern char(&Orders_Unused2)[189];
extern char(&Orders_Unused3)[189];
extern char(&Sprites_IsVisible)[];
extern char(&byte_665DCE)[];
extern char(&byte_665F56)[];
extern unsigned __int16(&Sprites_Image)[];
extern int(&Images_LandingDustLO)[999];
extern u8(&Image_DrawIfCloaked)[999];
extern int(&Images_SpecialOverlayLO)[999];
extern int(&Images_GrpFile)[999];
extern u8(&Images_Remapping)[999];
extern u8(&Image_DrawFunction)[999];
extern int(&Images_InjuryOverlayLO)[999];
extern int(&Images_AttackOverlayLO)[999];
extern u8(&Images_IsClickable)[999];
extern int(&Images_ShieldOverlayLO)[999];
extern u8(&Images_UseFullIscript)[999];
extern int(&Images_LiftOffDustLO)[999];
extern u8(&Images_IsTurnable)[999];
extern int(&Images_IscriptEntry)[999];
extern char(&byte_66FBE4)[];
extern char& byte_66FBF6;
extern char& countdown_seconds;
extern char& countdown_finished_maybe;
extern char& download_percentage;
extern char& gameState;
extern int& countdownTimerInterval;
extern int (__stdcall *&SendMapDlCommand)(_DWORD, _DWORD, _DWORD);
extern char(&mapsFolder)[264];
extern char(&byte_66FD10)[260];
extern char& byte_66FE14;
extern int& dword_66FE18;
extern char& byte_66FE1C;
extern struc_66FE20(&stru_66FE20)[8];
extern int& dword_66FF30;
extern char(&byte_66FF34)[];
extern char& byte_66FF35;
extern char& byte_66FF36;
extern char& byte_66FF37;
extern char& byte_66FF38;
extern char& byte_66FF39;
extern char& byte_66FF3A;
extern char(&byte_66FF3B)[];
extern int& dword_66FF3C;
extern int& dword_66FF40;
extern int& dword_66FF44;
extern int& dword_66FF48;
extern int& dword_66FF4C;
extern Box16& stru_66FF50;
extern int& dword_66FF58;
extern char& byte_66FF5C;
extern int& dword_66FF60;
extern Bitmap& stru_66FF64;
extern dialog *& dword_66FF6C;
extern int& dword_66FF70;
extern int(&UnitOrderingCount)[];
extern UnitFinderData(&UnitOrderingX)[3400];
extern UnitFinderData(&UnitOrderingY)[3400];
extern char& byte_67D3F8;
extern int(&dword_685108)[];
extern int(&dword_68510C)[];
extern int& dword_685110;
extern int& dword_685114;
extern int& dword_685118;
extern int& dword_68511C;
extern int& dword_685120;
extern int& dword_685124;
extern int& dword_685128;
extern int& dword_68512C;
extern int& dword_685130;
extern int& dword_685134;
extern int& dword_685138;
extern int& dword_68513C;
extern int& dword_685140;
extern int& dword_685144;
extern char(&SaveGameFile)[28];
extern int& dword_685164;
extern __int16& word_685168;
extern char& byte_68516A;
extern int& dword_68516C;
extern void *& dword_685170;
extern int& dword_685174;
extern int& dword_685178;
extern int& dword_68517C;
extern char& byte_685180;
extern int(&dword_685188)[];
extern int(&dword_685428)[];
extern int(&dword_687C48)[];
extern int(&dword_68A708)[];
extern int(&dword_68A738)[];
extern int(&dword_68A858)[];
extern int(&dword_68A888)[];
extern int(&dword_68A9A8)[];
extern int(&dword_68A9D8)[];
extern char& byte_68AC48;
extern int& dword_68AC4C;
extern int(&dword_68AC50)[];
extern int& dword_68AC54;
extern int& dword_68AC58;
extern int& dword_68AC5C;
extern int& dword_68AC60;
extern int& dword_68AC64;
extern int& dword_68AC68;
extern int& dword_68AC6C;
extern int& dword_68AC70;
extern char& CanUpdateSelectedUnitPortrait;
extern int& dword_68AC78;
extern void *& dword_68AC7C;
extern int& dword_68AC80;
extern void *& arg4;
extern int& dword_68AC88;
extern dialog *& starport_Dlg;
extern int& dword_68AC90;
extern int& dword_68AC94;
extern dialog *& dword_68AC98;
extern char& byte_68AC9C;
extern int& dword_68ACA0;
extern _DWORD& dword_68ACA8;
extern int& dword_68C0FC;
extern int& dword_68C100;
extern void *& aiscript_bin_data;
extern void *& dword_68C108;
extern char(&byte_68C10C)[52];
extern dialog *& dword_68C140;
extern char& byte_68C144;
extern dialog *& current_dialog;
extern __int16& word_68C14C;
extern int& CanUpdateCurrentButtonSet;
extern dialog *& current_cmdbtn_tooltip_control;
extern char& byte_68C1B8;
extern __int16& word_68C1BC;
extern void *& dword_68C1C0;
extern __int16& word_68C1C4;
extern __int16& word_68C1C8;
extern __int16& word_68C1CC;
extern __int16(&word_68C1D0)[];
extern __int16& word_68C1D2;
extern __int16& word_68C1D4;
extern __int16& word_68C1D6;
extern __int16& word_68C1D8;
extern __int16& word_68C1DA;
extern __int16& word_68C1DC;
extern __int16& word_68C1DE;
extern void *& cmdicons_grp;
extern char& byte_68C1E4;
extern char& statusScreenFunc;
extern dialog *& ctrl_under_mouse;
extern int& ctrl_under_mouse_val;
extern dialog *& stardata_Dlg;
extern void *& dword_68C1F4;
extern char& CanUpdateStatDataDialog;
extern void *& dword_68C1FC;
extern dialog *& dword_68C200;
extern void *& dword_68C204;
extern char(&buffer)[];
extern char(&byteShieldStr)[22];
extern dialog *& dword_68C220;
extern dialog *& stat_f10_Dlg;
extern char& byte_68C228;
extern int& dword_68C22C;
extern int& dword_68C230;
extern dialog *& statres_Dlg;
extern void *& dword_68C238;
extern char(&byte_68C23C)[4];
extern char(&byte_68C240)[192];
extern char& byte_68C300;
extern int& dword_68C308;
extern int& dword_68C30C;
extern int& dword_68C310;
extern int& dword_68C314;
extern int& dword_68C318;
extern int& dword_68C31C;
extern int& dword_68C320;
extern int& dword_68C324;
extern int& dword_68C328;
extern int& dword_68C32C;
extern int& dword_68C330;
extern int& dword_68C334;
extern int& dword_68C338;
extern int& dword_68C33C;
extern int& dword_68C340;
extern int& dword_68C344;
extern char(&byte_68C348)[];
extern char(&byte_68C368)[];
extern char(&byte_68C388)[];
extern char(&byte_68C3A8)[];
extern char(&byte_68C3C8)[];
extern char(&byte_68C3E8)[];
extern char(&byte_68C408)[];
extern char(&byte_68C428)[];
extern char(&SFXData_MuteVolume)[1144];
extern char(&SFXData_Flags2)[1144];
extern __int16(&SFXData_Race)[1144];
extern char(&SFXData_Flags1)[1144];
extern char *(&SFXData_SoundFile)[1144];
extern dialog *& dlgFatal_Dlg;
extern void *& dword_68EC84;
extern void *& dword_68EC88;
extern BNetGateways& bnet_gateways;
extern LobbySlot(&lobby_slots)[12];
extern int& dword_68F4F0;
extern int& dword_68F4F4;
extern int& dword_68F4F8;
extern int(&PlayerDownloadStatus)[8];
extern int& dword_68F500;
extern int& dword_68F504;
extern int& dword_68F508;
extern int& dword_68F50C;
extern int& dword_68F510;
extern int& dword_68F514;
extern int& dword_68F518;
extern int& dword_68F51C;
extern int& dword_68F520;
extern void *& dword_68F524;
extern int(&dword_68F528)[];
extern int& dword_68F52C;
extern int& dword_68F530;
extern int& dword_68F534;
extern __int16(&word_68F538)[];
extern __int16(&word_68F53A)[];
extern int(&dword_68F53C)[];
extern void *& dword_68F558;
extern __int16(&word_68F55C)[];
extern __int16(&word_68F55E)[];
extern int(&dword_68F560)[];
extern CheatHashRelated(&stru_68F580)[6];
extern LPARAM& dword_68F6B8;
extern void *& a6;
extern void *& dword_68F6C0;
extern int& dword_68F6C4;
extern HGDIOBJ& dword_68F6C8;
extern int& dword_68F6CC;
extern int& dword_68F6D0;
extern void *& dword_68F6D4;
extern char *& dword_68F6D8;
extern void *& dword_68F6DC;
extern int& dword_68F6E0;
extern int& dword_68F6E4;
extern int& dword_68F6E8;
extern HGDIOBJ& dword_68F6EC;
extern HWND& dword_68F6F0;
extern HWND& dword_68F6F4;
extern int& dword_68F6F8;
extern __int16& dword_68F6FC;
extern char(&dword_68F700)[];
extern int& dword_68F704;
extern HWND& dword_68F708;
extern HWND& dword_68F70C;
extern char(&dword_68F710)[];
extern int& dword_68F714;
extern CHAR(&bnet_previous_map_dir)[260];
extern unsigned __int8(&byte_68F820)[260];
extern int& dword_68F924;
extern int& dword_68F928;
extern int& dword_68F92C;
extern int& dword_68F930;
extern int& dword_68F934;
extern int& dword_68F938;
extern int& dword_68F93C;
extern int& dword_68F940;
extern MapDirEntry *& bnet_selected_map_maybe;
extern char(&byte_68F948)[];
extern int& dword_68FA48;
extern int& bnet_browse_icons_dimensions;
extern int(&dword_68FA50)[];
extern HWND& bnet_recent_maps_box;
extern HWND& dword_68FA60;
extern HWND& dword_68FA64;
extern char(&dword_68FA68)[];
extern int& dword_68FA6C;
extern char(&previous_selected_map)[260];
extern char& byte_68FC74;
extern HWND& dword_68FC78;
extern int(&bnet_browse_icons)[];
extern HWND& dword_68FC84;
extern char(&byte_68FC88)[256];
extern int& _10_wins_icon;
extern char& byte_68FD90;
extern HWND& hWnd;
extern HWND& dword_68FE98;
extern char(&dword_68FE9C)[];
extern int& dword_68FEA0;
extern char(&dword_68FEA4)[];
extern void *& dword_68FEA8;
extern int& dword_68FEAC;
extern int& dword_68FEB0;
extern int& dword_68FEB4;
extern int& a8;
extern int& dword_68FEBC;
extern int& dword_68FEC0;
extern void *& a5;
extern int& dword_68FEC8;
extern int& dword_68FECC;
extern WPARAM& wParam;
extern int& dword_68FED4;
extern HWND& hDlg;
extern LPCSTR& lpString;
extern int& dword_68FEE0;
extern int& dword_68FEE4;
extern AI_Main(&AIScriptController)[8];
extern int& dword_692628;
extern unsigned __int16(&word_69262C)[24];
extern int& dword_69265C;
extern int(&dword_692660)[];
extern int& dword_692684;
extern baseLocation(&Bases)[250];
extern int& dword_695568;
extern int& dword_69556C;
extern int(&dword_695570)[];
extern int& dword_695574;
extern int& dword_695578;
extern int& dword_69557C;
extern int& dword_695580;
extern int& dword_695584;
extern int& dword_695588;
extern int& dword_69558C;
extern int& dword_695590;
extern int(&dword_695594)[];
extern int& dword_695598;
extern int& dword_69559C;
extern int& dword_6955A0;
extern int& dword_6955A4;
extern int& dword_6955A8;
extern int& dword_6955AC;
extern int& dword_6955B0;
extern int& dword_6955B4;
extern int(&dword_6955B8)[];
extern int& dword_6955DC;
extern __int16& word_6955E0;
extern __int16& word_6955E2;
extern CUnit *& dword_6955E4;
extern int& dword_6955E8;
extern int(&dword_6955EC)[];
extern int& dword_6955F0;
extern int& dword_6955F4;
extern int& dword_6955F8;
extern int& dword_6955FC;
extern int& dword_695600;
extern WeaponType& tempWeapon;
extern int& dword_695608;
extern int& dword_69560C;
extern int(&dword_695610)[];
extern int& dword_695790;
extern int& dword_695794;
extern int& tempHPShields;
extern Position& stru_69579C;
extern int& dword_6957A0;
extern int& dword_6957A4;
extern int& dword_6957A8;
extern int& dword_6957AC;
extern int(&dword_6957B0)[8];
extern int& dword_6957D0;
extern int& dword_6957D4;
extern int& dword_6957D8;
extern AiCaptain *(&AiRegionCaptains)[1];
extern char(&byte_69A628)[19988];
extern int(&dword_69F448)[];
extern int& dword_69F44C;
extern int& dword_69F450;
extern int& dword_69F454;
extern int& dword_69F458;
extern int& dword_69F45C;
extern int& dword_69F460;
extern int& dword_69F464;
extern _DWORD(&dword_69F468)[742];
extern int& dword_6AA04C;
extern int(&AiDataList)[];
extern int(&dword_6AA054)[];
extern int& dword_6AA058;
extern int& dword_6AA05C;
extern int& dword_6AA060;
extern int& dword_6AA064;
extern int& dword_6AA068;
extern int& dword_6AA06C;
extern int& dword_6AA070;
extern int& dword_6AA074;
extern int& dword_6AA078;
extern int& dword_6AA07C;
extern int& dword_6AA080;
extern int& dword_6AA084;
extern int& dword_6AA088;
extern int& dword_6AA08C;
extern _DWORD(&AiArray)[11502];
extern _DWORD(&dword_6B5448)[6001];
extern int(&dword_6BB20C)[];
extern int(&dword_6BB210)[227];
extern int(&dword_6BB59C)[];
extern int(&dword_6BB5A0)[228];
extern int& MaxUnitHeight;
extern int(&dword_6BD3D0)[1701];
extern int& tempUnitsListCurrentArrayCount;
extern int& MaxUnitWidth;
extern int(&tempUnitsListArraysCountsListLastIndex)[];
extern int(&tempUnitsListArraysCountsList)[];
extern int& dword_6BEE74;
extern int& dword_6BEE78;
extern int& dword_6BEE7C;
extern int& dword_6BEE80;
extern int& dword_6BEE84;
extern int& dword_6BEE88;
extern void *& dword_6BEE8C;
extern int& dword_6BEE90;
extern __int16& word_6BEE94;
extern char& byte_6BEE96;
extern char& byte_6BEE97;
extern char& byte_6BEE98;
extern char& byte_6BEE99;
extern char& byte_6BEE9A;
extern char& byte_6BEE9B;
extern int& dword_6BEEA0;
extern int& dword_6BEEA4;
extern int& dword_6BEEA8;
extern int& dword_6BEEAC;
extern int& dword_6BEEB0;
extern int(&dword_6C0DD0)[];
extern int& dword_6C0DD4;
extern int& dword_6C102C;
extern int& dword_6C1030;
extern int& dword_6C1074;
extern int& dword_6C1078;
extern int& dword_6C107C;
extern __int64& qword_6C1080;
extern __int16& word_6C10A8;
extern int& dword_6C2310;
extern int& dword_6C2314;
extern int(&dword_6C2318)[2500];
extern CSprite *& dword_6C4A28;
extern int& dword_6C4A2C;
extern int(&dword_6C4A30)[];
extern int(&dword_6C4A34)[];
extern int& dword_6C4A38;
extern int& dword_6C4A3C;
extern u8(&Flingy_MovementControl)[209];
extern u32(&Flingy_HaltDistance)[209];
extern u16(&Flingy_Acceleration)[209];
extern u8(&Flingy_TurnSpeed)[209];
extern u32(&Flingy_TopSpeed)[209];
extern u8(&Flingy_Unused)[209];
extern u16(&Flingy_SpriteID)[209];
extern int(&AiSupplyReserved)[12];
extern int(&dword_6CA4EC)[12];
extern int(&dword_6CA51C)[12];
extern void *& dword_6CA54C;
extern int& seeds_maybe;
extern int& dword_6CA554;
extern int& dword_6CA558;
extern int& dword_6CA55C;
extern int& dword_6CA560;
extern int& dword_6CA564;
extern int& dword_6CA568;
extern char& byte_6CA664;
extern char(&byte_6CA668)[16];
extern char(&byte_6CA76C)[32];
extern char(&byte_6CA7A0)[100];
extern char(&byte_6CA818)[260];
extern char(&byte_6CA91C)[32];
extern int& suppliesAvailableTemp;
extern __int16& word_6CA940;
extern int(&selectionGroupHP)[];
extern int(&dword_6CA950)[];
extern int(&dword_6CA954)[];
extern int(&dword_6CA958)[];
extern int(&dword_6CA95C)[];
extern int(&dword_6CA960)[];
extern char(&byte_6CA988)[100];
extern int& userInterfaceShields;
extern char& redrawTransportUI;
extern char(&byte_6CA9F8)[260];
extern char(&byte_6CAB08)[260];
extern __int16& userInterfaceEnergy;
extern char(&byte_6CAC10)[104];
extern char(&byte_6CAC78)[260];
extern int(&dword_6CAD98)[];
extern int& dword_6CAD9C;
extern int& dword_6CAF90;
extern int& dword_6CAF94;
extern int& dword_6CAF98;
extern int& dword_6CAFA0;
extern int& dword_6CD9A0;
extern int& dword_6CD9A4;
extern int& dword_6CDBA4;
extern int& dword_6CDBA8;
extern int& dword_6CDBAC;
extern RECT& screen;
extern int& InputFlags;
extern POINT& Mouse;
extern CHAR(&Text)[];
extern char& byte_6CDFCF;
extern int& main_thread_id;
extern RegistryOptions& registry_options;
extern char(&byte_6CE010)[];
extern char(&byte_6CE011)[];
extern char(&byte_6CE012)[];
extern char(&byte_6CE013)[];
extern fontMemStruct& PrintXY_Font;
extern int& dword_6CE0D0;
extern char& byte_6CE0D4;
extern int& dword_6CE0D8;
extern int& dword_6CE0DC;
extern int& PrintXY_PositionY;
extern int& dword_6CE0E4;
extern int& dword_6CE0E8;
extern char& byte_6CE0EC;
extern char& byte_6CE0ED;
extern int& dword_6CE0F0;
extern Font *(&FontBase)[4];
extern char& text_input_position_char;
extern int& PrintXY_PositionX;
extern int& dword_6CE10C;
extern char& PrintXY_Size;
extern char& byte_6CE111;
extern char(&byte_6CE118)[392];
extern CycleStruct(&cycle_colors)[8];
extern PALETTEENTRY(&GamePalette)[256];
extern PALETTEENTRY(&stru_6CE720)[256];
extern char(&byte_6CEB20)[];
extern char& byte_6CEB22;
extern char& byte_6CEB25;
extern char& byte_6CEB28;
extern char& byte_6CEB2C;
extern char& byte_6CEB2F;
extern char& byte_6CEB30;
extern char& byte_6CEB31;
extern char& byte_6CEB32;
extern char& byte_6CEB33;
extern char& byte_6CEB34;
extern char& byte_6CEB39;
extern char(&byte_6CEB3D)[];
extern char(&byte_6CEB3E)[];
extern PALETTEENTRY(&stru_6CEB40)[256];
extern int& dword_6CEF40;
extern int& dword_6CEF44;
extern int& dword_6CEF48;
extern int& dword_6CEF4C;
extern layer(&ScreenLayers)[12];
extern Bitmap& GameScreenBuffer;
extern u8(&RefreshRegions)[1200];
extern Bitmap *& dword_6CF4A8;
extern char& DrawColor;
extern int& dword_6CF4B4;
extern int& dword_6CF4BC;
extern dialog *& current_dropdown_maybe;
extern __int16& word_6D04B4;
extern __int16& word_6D04B8;
extern int& dword_6D04BC;
extern __int16& word_6D04C0;
extern __int16& word_6D04C4;
extern int& dword_6D04C8;
extern int& dword_6D04CC;
extern __int16& word_6D04D0;
extern __int16& word_6D04D4;
extern __int16& word_6D04D8;
extern __int16& word_6D04DC;
extern int& dword_6D04E0;
extern __int16& word_6D04E4;
extern __int16& word_6D04E8;
extern int& dword_6D04EC;
extern int& dword_6D04F0;
extern int& dword_6D04F4;
extern __int16& word_6D04F8;
extern __int16& word_6D04FC;
extern __int16& word_6D0500;
extern __int16& word_6D0504;
extern __int16& word_6D0508;
extern int& dword_6D050C;
extern __int16& word_6D0510;
extern __int16& word_6D0514;
extern int& dword_6D0518;
extern signed int& LastControlID;
extern int& dword_6D0520;
extern __int16& word_6D0524;
extern int& dword_6D0528;
extern __int16& word_6D052C;
extern int& dword_6D0530;
extern __int16& word_6D0534;
extern dialog *& interrupting_child;
extern void *& unknown_palette_trans2;
extern HANDLE& dword_6D0540;
extern int& dword_6D0548;
extern int& dword_6D0550;
extern int& dword_6D0554;
extern int& dword_6D0558;
extern int& dword_6D055C;
extern int& dword_6D0560;
extern int& dword_6D0564;
extern int& dword_6D0568;
extern HANDLE& dword_6D0588;
extern int(&dword_6D058C)[];
extern int(&unknown_palette_trans3)[3];
extern int& dword_6D059C;
extern int& dword_6D05A0;
extern char& byte_6D05A4;
extern void *& unknown_palette_trans;
extern int& dword_6D05AC;
extern __int16& word_6D09B0;
extern char& byte_6D09B2;
extern _DWORD(&dword_6D09B8)[60];
extern int& dword_6D0AA8;
extern int& dword_6D0AF8;
extern char& byte_6D0B50;
extern char& byte_6D0C50;
extern __int16& last_deleted_timer;
extern dialog *& dword_6D0C58;
extern __int16& word_6D0C5C;
extern __int16& word_6D0C60;
extern grpHead *& TerrainGraphics;
extern TileID *& location;
extern int& dword_6D0C6C;
extern int (__stdcall *&dword_6D0C70)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);
extern int (__stdcall *&dword_6D0C74)(_DWORD, _DWORD);
extern int (__stdcall *&dword_6D0C78)(_DWORD, _DWORD);
extern int (__stdcall *&dword_6D0C7C)(_DWORD);
extern char(&byte_6D0C80)[];
extern u8 *& CreepEdgeData;
extern TileID *& dword_6D0E84;
extern char(&byte_6D0E88)[128];
extern int& dword_6D0F08;
extern int& next_campaign_mission;
extern int& low_memory;
extern dlgEvent *& InReplay;
extern int& ReplayVision;
extern int& replayShowEntireMap;
extern int& scenarioChkSize;
extern void *& scenarioChk;
extern dialog *& savegame_Dlg;
extern HANDLE& phFile;
extern ReplayHeader& replay_header;
extern int& dword_6D11AC;
extern int& is_replay_paused;
extern int& dword_6D11B4;
extern int& dword_6D11B8;
extern MenuPosition& glGluesMode;
extern int& OpheliaEnabled;
extern int& dword_6D11C4;
extern int& IsInGameLoop;
extern CampaignMenuEntry *& active_campaign_menu_entry;
extern char& byte_6D11D0;
extern int& dword_6D11D4;
extern int& dword_6D11D8;
extern int& dword_6D11DC;
extern int& dword_6D11E4;
extern int& dword_6D11E8;
extern char& GameState;
extern int& dword_6D11F0;
extern CUnit *& dword_6D11F4;
extern CBullet *& dword_6D11F8;
extern CUnit *& dword_6D11FC;
extern void *& iscript_data;
extern int& game_starting_maybe;
extern int (*&dword_6D1208)(void);
extern HACCEL& hAccTable;
extern int& dword_6D1210;
extern char& byte_6D1214;
extern FILE *& loadGameFileHandle;
extern char& mapStarted;
extern WORD *& networkTable;
extern char& byte_6D1224;
extern char& byte_6D1225;
extern UnknownTilesetRelated1& stru_6D1228;
extern void (__thiscall *&dword_6D1234)(dialog *);
extern StringTbl& StatTxtTbl;
extern void *& dword_6D123C;
extern void *& dword_6D1240;
extern int& dword_6D1244;
extern int& dword_6D1248;
extern int (__thiscall *&dword_6D124C)(_DWORD);
extern void *& dword_6D1250;
extern void *& dword_6D1254;
extern void *& dword_6D1258;
extern void *& dword_6D125C;
extern MegatileFlags *& active_tiles;
extern char& byte_6D1264;
extern char& byte_6D1265;
extern char& byte_6D1266;
extern IDirectSoundBuffer *& dword_6D1268;
extern struct_5(&stru_6D1270)[1144];
extern HMODULE& dsound_dll;
extern IDirectSound *& direct_sound;
extern IDirectSoundBuffer *& soundbuffer;
extern int& dword_6D59FC;
extern HANDLE& dword_6D5A00;
extern HANDLE& sound_thread_handle;
extern int& dword_6D5A08;
extern int& dword_6D5A0C;
extern char& outOfGame;
extern int& dword_6D5A14;
extern void *& dword_6D5A18;
extern void *& dword_6D5A1C;
extern int& dword_6D5A20;
extern dialog *& gluConn_Dlg;
extern Char4& network_provider_id;
extern Char4& network_provider_id_related;
extern dialog *& lobby_dlg;
extern int& dword_6D5A38;
extern dialog *& dword_6D5A3C;
extern FnInteract *& dword_6D5A40;
extern BYTE *& dword_6D5A44;
extern CampaignMenuEntry *& dword_6D5A48;
extern CampaignMenuEntry *& dword_6D5A4C;
extern int& dword_6D5A50;
extern int& dword_6D5A54;
extern dialog *& dword_6D5A58;
extern FnInteract *& dword_6D5A5C;
extern int& dword_6D5A60;
extern int& game_id_hash;
extern int& saveLoadSuccess;
extern CheatFlags& GameCheats;
extern dialog *& dword_6D5A70;
extern int& dword_6D5A74;
extern int& dword_6D5A78;
extern void *& dword_6D5A7C;
extern void *& dword_6D5A80;
extern void *& dword_6D5A84;
extern void *& dword_6D5A88;
extern void *& dword_6D5A8C;
extern void *& dword_6D5A90;
extern void *& dword_6D5A94;
extern void *& dword_6D5A98;
extern void *& dword_6D5A9C;
extern void *& dword_6D5AA0;
extern char& byte_6D5AA8;
extern HANDLE& directsound;
extern MusicTrack& current_music;
extern signed int& bigvolume;
extern int& dword_6D5BB8;
extern char& byte_6D5BBC;
extern char& byte_6D5BBD;
extern char& byte_6D5BBE;
extern char& byte_6D5BBF;
extern char& byte_6D5BC0;
extern char& byte_6D5BC1;
extern char& byte_6D5BC2;
extern dialog *& dword_6D5BC4;
extern int& isInGame;
extern int& elapstedTimeModifier;
extern int& dword_6D5BD0;
extern int& dword_6D5BD4;
extern void *& pylon_power_mask;
extern int& dword_6D5BDC;
extern int& lastRandSFX;
extern char& byte_6D5BE4;
extern int& dword_6D5BE8;
extern char& byte_6D5BEC;
extern char& byte_6D5BED;
extern int& dword_6D5BF0;
extern dialog *& GameMenuDlg;
extern int& dword_6D5BF8;
extern SAI_Paths *& SAIPathing;
extern DWORD& CpuThrottle;
extern Bitmap& stru_6D5C04;
extern void *& dword_6D5C0C;
extern void *& dword_6D5C10;
extern void *& dword_6D5C14;
extern void *& dword_6D5C18;
extern int& dword_6D5C1C;
extern int& orderType4Position;
extern CUnit *& orderType4Target;
extern int& dword_6D5C28;
extern UINT_PTR& uIDEvent;
extern void *(&player_slots)[8];
extern int(&net_player_info)[8];
extern void *& start_game_command;
extern void *& command_3d;
extern void *& dword_6D5C78;
extern void *& dword_6D5C7C;
extern void *& dword_6D5C80;
extern void *& dword_6D5C84;
extern void *& dword_6D5C88;
extern void *& dword_6D5C8C;
extern void *& dword_6D5C90;
extern void *& defaultValue;
extern int& dword_6D5C98;
extern void *& dword_6D5C9C;
extern char& byte_6D5CA0;
extern HANDLE& video;
extern int& dword_6D5CA8;
extern Bitmap& pbrempt_pcx;
extern Bitmap& pbrfull_pcx;
extern Bitmap& progress_bar_empty_pcx;
extern Bitmap& progress_bar_full_pcx;
extern void *& dword_6D5CD8;
extern void *& dword_6D5CDC;
extern int(&dword_6D5D00)[];
extern int& dword_6D5D10;
extern int& dword_6D5D14;
extern int& dword_6D5D18;
extern char *& dword_6D5D1C;
extern char *& dword_6D5D20;
extern int& dword_6D5D30;
extern int& dword_6D5D48;
extern void *& dword_6D5D4C;
extern char *& dword_6D5D50;
extern char *& dword_6D5D54;
extern char *& dword_6D5D58;
extern void *& dword_6D5D5C;
extern char(&byte_6D5D60)[4];
extern int& dword_6D5D64;
extern int& dword_6D5D68;
extern int(&dword_6D5D70)[10];
extern int(&dword_6D5D98)[];
extern void *& dword_6D5DC0;
extern char *& buffer2;
extern int& dword_6D5DC8;
extern int& dword_6D5DCC;
extern int& dword_6D5DD0;
extern int& dword_6D5DD4;
extern AppExitHandle *& app_exit_handles;
extern Font *& PrintXY_Current_Font;
extern char& byte_6D5DE0;
extern HINSTANCE& hModule;
extern LPCVOID& lpAddress;
extern DWORD& nNumberOfBytesToWrite;
extern Bitmap& stru_6D5DF0;
extern int& dword_6D5DF8;
extern char& byte_6D5DFC;
extern IDirectDrawSurface *& PrimarySurface;
extern HMODULE& ddraw_dll;
extern IDirectDraw *& DDInterface;
extern IDirectDrawPalette *& PrimaryPalette;
extern IDirectDrawSurface *& BackSurface;
extern int& handle;
extern int& dword_6D5E18;
extern int& dword_6D5E1C;
extern Bitmap *& dword_6D5E20;
extern int& dword_6D5E24;
extern __int16& word_6D5E28;
extern int& dword_6D5E2C;
extern int& dword_6D5E30;
extern dialog *& DialogList;
extern int (__thiscall *&dword_6D5E38)(_DWORD);
extern int& dword_6D5E3C;
extern dialog *(&EventDialogs)[19];
extern activation_delays(&stru_6D5E8C)[4];
extern int (__stdcall *&ButtonPressSound)(_DWORD);
extern dialog *& to_be_deleted_maybe;
extern int& dword_6D5EB4;
extern int& dword_6D5EB8;
extern void *& first_timer1;
extern Timer *& first_timer2;
extern TileType *& TileSetMap;
extern HANDLE& hEvent;
extern int& IsBattleNet;
extern int& dword_6D5ED4;
extern int& dword_6D5ED8;
extern struct _RTL_CRITICAL_SECTION& stru_6D5EDC;
extern int& dword_6D5EF4;
extern int& dword_6D5EF8;
extern int& dword_6D5EFC;
extern int& dword_6D5F04;
extern int& dword_6D5F08;
extern int& dword_6D5F0C;
extern int& dword_6D5F10;
extern int& dword_6D5F14;
extern int& dword_6D5F18;
extern int& dword_6D5F1C;
extern int& dword_6D5F20;
extern int& dword_6D5F24;
extern int& dword_6D5F28;
extern int& dword_6D5F2C;
extern int& dword_6D5F30;
extern int& dword_6D5F34;
extern int& dword_6D5F38;
extern int& dword_6D5F3C;
extern int& dword_6D5F40;
extern int& dword_6D5F44;
extern int& dword_6D5F48;
extern struct _RTL_CRITICAL_SECTION& stru_6D5F4C;
extern int& dword_6D5F64;
extern int& dword_6D5F68;
extern int& dword_6D5F6C;
extern int& dword_6D5F70;
extern int& dword_6D5F74;
extern int& dword_6D5F78;
extern int& dword_6D5F7C;
extern int& dword_6D5F80;
extern int& dword_6D5F84;
extern int& dword_6D5F88;
extern int& dword_6D5F8C;
extern int& dword_6D5F90;
extern int& dword_6D5F94;
extern int& dword_6D5F98;
extern int& dword_6D5F9C;
extern int& dword_6D5FA0;
extern int& dword_6D5FA4;
extern int& dword_6D5FA8;
extern int& dword_6D5FAC;
extern int& dword_6D5FB0;
extern int& dword_6D5FB4;
extern int& dword_6D5FB8;
extern int& dword_6D5FBC;
extern int& dword_6D5FC0;
extern int& dword_6D5FC4;
extern int& dword_6D5FC8;
extern int& dword_6D5FCC;
extern int& dword_6D5FD0;
extern int& dword_6D5FD4;
extern int& dword_6D5FD8;
extern int& dword_6D5FDC;
extern int& dword_6D5FE0;
extern int& dword_6D5FE4;
extern int& dword_6D5FE8;
extern int& dword_6D5FEC;
extern int& dword_6D5FF0;
extern int& dword_6D5FF4;
extern int& dword_6D5FF8;
extern int& dword_6D5FFC;
extern int& dword_6D6000;
extern int& dword_6D6004;
extern int& dword_6D6008;
extern int& dword_6D600C;
extern int& dword_6D6010;
extern int& dword_6D6014;
extern int& dword_6D6018;
extern int& dword_6D601C;
extern int& dword_6D6020;
extern int& dword_6D6024;
extern int& dword_6D6028;
extern int& dword_6D602C;
extern int& dword_6D6030;
extern int& dword_6D6034;
extern int& dword_6D6038;
extern int& dword_6D603C;
extern int& dword_6D6040;
extern int& dword_6D6044;
extern int& dword_6D6048;
extern int& dword_6D604C;
extern int& dword_6D6050;
extern int& dword_6D6054;
extern int& dword_6D6058;
extern int& dword_6D605C;
extern int& dword_6D6060;
extern int& dword_6D6064;
extern int& dword_6D6068;
extern int& dword_6D606C;
extern int& dword_6D6070;
extern int& dword_6D6074;
extern int& dword_6D6078;
extern int& dword_6D607C;
extern int& dword_6D6080;
extern int& dword_6D6084;
extern int& dword_6D6088;
extern int& dword_6D608C;
extern int& dword_6D6090;
extern int& dword_6D6094;
extern int& dword_6D6098;
extern int& dword_6D609C;
extern int& dword_6D60A0;
extern int& dword_6D60A4;
extern int& dword_6D60A8;
extern int& dword_6D60AC;
extern int& dword_6D60B0;
extern int& dword_6D60B4;
extern int& dword_6D60B8;
extern int& dword_6D60BC;
extern int& dword_6D60C0;
extern int& dword_6D60C4;
extern int& dword_6D60C8;
extern int& dword_6D60CC;
extern int& dword_6D60D0;
extern int& dword_6D60D4;
extern int& dword_6D60D8;
extern int& dword_6D60DC;
extern int& dword_6D60E0;
extern int& dword_6D60E4;
extern int& dword_6D60E8;
extern int& dword_6D60EC;
extern int& dword_6D60F0;
extern int& dword_6D60F4;
extern int& dword_6D60F8;
extern int& dword_6D60FC;
extern int& dword_6D6100;
extern int& dword_6D6104;
extern int& dword_6D6108;
extern int& dword_6D610C;
extern int& dword_6D6110;
extern int& dword_6D6114;
extern int& dword_6D6118;
extern int& dword_6D611C;
extern int& dword_6D6120;
extern int& dword_6D6124;
extern int& dword_6D6128;
extern int& dword_6D612C;
extern int& dword_6D6130;
extern int& dword_6D6134;
extern int& dword_6D6138;
extern int& dword_6D613C;
extern int& dword_6D6140;
extern int& dword_6D6144;
extern int& dword_6D6148;
extern int& dword_6D614C;
extern int& dword_6D6150;
extern int& dword_6D6154;
extern int& dword_6D6158;
extern int& dword_6D615C;
extern int& dword_6D6160;
extern int& dword_6D6164;
extern int& dword_6D6168;
extern int& dword_6D616C;
extern int& dword_6D6170;
extern int& dword_6D6174;
extern int& dword_6D6178;
extern int& dword_6D617C;
extern int& dword_6D6180;
extern int& dword_6D6184;
extern int& dword_6D6188;
extern int& dword_6D618C;
extern int& dword_6D6190;
extern int& dword_6D6194;
extern int& dword_6D6198;
extern void *& dword_6D619C;
extern int& dword_6D61A0;
extern void *& dword_6D61A4;
extern int& dword_6D61A8;
extern int& dword_6D61AC;
extern int& dword_6D61B0;
extern int& dword_6D61B4;
extern int& dword_6D61B8;
extern int& dword_6D61BC;
extern int& dword_6D61C0;
extern int& dword_6D61C4;
extern int& dword_6D61C8;
extern int& dword_6D61CC;
extern int& dword_6D61D0;
extern int& dword_6D61D4;
extern int& dword_6D61D8;
extern int& dword_6D61DC;
extern int& dword_6D61E0;
extern int& dword_6D61E4;
extern int& dword_6D61E8;
extern int& dword_6D61EC;
extern int& dword_6D61F0;
extern int& dword_6D61F4;
extern int& dword_6D61F8;
extern int& dword_6D61FC;
extern int& dword_6D6200;
extern int& dword_6D6204;
extern int& dword_6D6208;
extern int& dword_6D620C;
extern int& dword_6D6210;
extern int& dword_6D6214;
extern int& dword_6D6218;
extern int& dword_6D621C;
extern int& dword_6D6220;
extern int& dword_6D6224;
extern int& dword_6D6228;
extern int& dword_6D622C;
extern int& dword_6D6230;
extern int& dword_6D6234;
extern int& dword_6D6238;
extern int& dword_6D623C;
extern int& dword_6D6240;
extern int& dword_6D6244;
extern int& dword_6D6248;
extern int& dword_6D624C;
extern int& dword_6D6250;
extern int& dword_6D6254;
extern int& dword_6D6258;
extern int& dword_6D625C;
extern int& dword_6D6260;
extern int& dword_6D6264;
extern int& dword_6D6268;
extern int& dword_6D626C;
extern int& dword_6D6270;
extern int& dword_6D6274;
extern int& dword_6D6278;
extern int& dword_6D627C;
extern int& dword_6D6280;
extern int& dword_6D6284;
extern int& dword_6D6288;
extern int& dword_6D628C;
extern int& dword_6D6290;
extern int& dword_6D6294;
extern int& dword_6D6298;
extern int& dword_6D629C;
extern int& dword_6D62A0;
extern int& dword_6D62A4;
extern int& dword_6D62A8;
extern int& dword_6D62AC;
extern int& dword_6D62B0;
extern int& dword_6D62B4;
extern struct _RTL_CRITICAL_SECTION& CriticalSection;
extern int& dword_6D62D0;
extern int& dword_6D62D4;
extern int& dword_6D62D8;
extern int& dword_6D62DC;
extern int& dword_6D62E0;
extern int& dword_6D62E4;
extern int& dword_6D62E8;
extern int& dword_6D62EC;
extern int& dword_6D62F0;
extern int& dword_6D62F4;
extern int& dword_6D62F8;
extern int& dword_6D62FC;
extern int& dword_6D6300;
extern int& dword_6D6304;
extern int& dword_6D6308;
extern int& dword_6D630C;
extern int& dword_6D6310;
extern int& dword_6D6314;
extern int& dword_6D6318;
extern int& dword_6D631C;
extern int& dword_6D6320;
extern int& dword_6D6324;
extern int& dword_6D6328;
extern int& dword_6D632C;
extern int& dword_6D6330;
extern int& dword_6D6334;
extern int& dword_6D6338;
extern int& dword_6D633C;
extern int& dword_6D6340;
extern int& dword_6D6344;
extern int& dword_6D6348;
extern int& dword_6D634C;
extern int& dword_6D6350;
extern int& dword_6D6354;
extern int& dword_6D6358;
extern int& dword_6D635C;
extern int& dword_6D6360;
extern int& dword_6D6364;
extern int& dword_6D6368;
extern int& dword_6D636C;
extern int& dword_6D6370;
extern int& dword_6D6374;
extern int& dword_6D6378;
extern int& dword_6D637C;
extern int& message_handling_tick;
extern HCURSOR& cursor;
extern int& dword_6D6388;
extern char& byte_6D638C;
extern SfxData& dword_6D6390;
extern char& src;
extern int& dword_6D63AC;
extern int& dword_6D63B0;
extern int& dword_6D63B4;
extern int& dword_6D63B8;
extern int& dword_6D63BC;
extern int& dword_6D63C0;
extern int& dword_6D63C4;
extern int& dword_6D63C8;
extern int& dword_6D63CC;
extern int& dword_6D63D0;
extern int& dword_6D63D4;
extern int& dword_6D63D8;
extern int& dword_6D63DC;
extern int& dword_6D63E0;
extern int& dword_6D63E4;
extern int& dword_6D63E8;
extern int& dword_6D63EC;
extern char& byte_6D63F0;
extern tagRECT& stru_6D63F4;
extern int& dword_6D6404;
extern int& dword_6D6408;
extern int& dword_6D640C;
extern int& dword_6D6410;
extern int& dword_6D6414;
extern HDC& hdc;
extern HDC& dword_6D641C;
extern int& dword_6D6420;
extern HGDIOBJ& h;
extern int& dword_6D6428;
extern int& cached_game_screen_region_check_result;
extern int& cached_game_screen_region_check_x;
extern int& cached_game_screen_region_check_y;
extern HIMC& dword_6D6438;
extern int& dword_6D643C;
extern int& dword_6D683C;
extern size_t& amount;
extern int& dword_6D6C40;
extern const CHAR& buff;
extern char& byte_6D754C;
extern char(&byte_6D7550)[32];
extern int& dword_6D7570;
extern int& dword_6D7574;
extern int(&dword_6D7578)[];
extern int(&dword_6D757C)[];
extern char(&byte_6DB178)[];
extern char(&byte_6DB179)[];
extern char(&byte_6DB17A)[];
extern char(&byte_6DB17B)[];
extern char(&byte_6DB180)[260];
extern Bitmap& stru_6DB284;
extern Bitmap& stru_6DB28C;
extern char(&byte_6DB298)[1024];
extern char(&byte_6DB698)[128];
extern char(&byte_6DB718)[128];
extern char(&byte_6DB798)[128];
extern char(&byte_6DB818)[128];
extern char(&byte_6DB898)[128];
extern char& byte_6DB918;
extern char& byte_6DBD18;
extern char(&byte_6DBD38)[40];
extern char(&byte_6DBD60)[256];
extern char& byte_6DBE60;
extern char& byte_6DC260;
extern char(&byte_6DC280)[36];
extern Bitmap& stru_6DC2A4;
extern __int16& word_6DC2AC;
extern __int16& word_6DC2AE;
extern __int16& word_6DC2B0;
extern __int16& word_6DC2B2;
extern __int16& word_6DC2B4;
extern __int16& word_6DC2B6;
extern __int16& word_6DC2B8;
extern __int16& word_6DC2BA;
extern __int16& word_6DC2BC;
extern char& base;
extern int& dword_6DC2E0;
extern int& dword_6DC2E4;
extern int& dword_6DC2E8;
extern int& dword_6DC2EC;
extern int& dword_6DC2F0;
extern int& dword_6DC2F4;
extern size_t& dword_6DD300;
extern int& dword_6DD304;
extern int& dword_6DD308;
extern int& dword_6DD30C;
extern void *& dword_6DD310;
extern int& dword_6DD314;
extern LPVOID& lpMem;
extern int& dword_6DD31C;
extern int& dword_6DD320;
extern int& dword_6DD324;
extern int& dword_6DD328;
extern LCID& Locale;
extern void *& dword_6DD330;
extern int& dword_6DD334;
extern char& byte_6DD340;
extern char& byte_6DD341;
extern UINT& CodePage;
extern __int16& word_6DD450;
extern char& byte_6DD460;
extern HANDLE& hHeap;
extern int& dword_6DD564;
extern UINT& uNumber;
extern int(&dword_6DD580)[];
extern int& dword_6DD680;
extern int& dword_6DD684;
extern void *& dword_6DD688;
extern int& dword_6DD68C;
extern int& dword_6DD690;