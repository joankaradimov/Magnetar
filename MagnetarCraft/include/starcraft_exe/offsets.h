#pragma once

#include "types.h"

namespace game::starcraft
{
extern void (__cdecl*type_info_destructor_dealloc)(void *location);
ListNodeUnknown * _Unknown_Destructor(ListNodeUnknown *a1, char a2);
void HiddenCtrl_Destructor(ListNodeUnknown *a1);
void somePlayImageCrapThatCrashes(char a1, char a2, CImage *image, CSprite *edi0, int a5);
void hideImage(CImage *a1);
extern void (__thiscall*showImage)(CImage *this_);
void setAllOverlayDirectionsGeneric(CThingy *thingy, unsigned __int8 direction);
extern BOOL (__stdcall*unitIsOwnerByCurrentPlayer)(CUnit *unit);
void unitSetRetreatPoint(unsigned __int8 a1, CUnit *a2);
BOOL UnitIsGoliath(CUnit *a1);
BOOL UnitCanCastSpells(CUnit *a1);
BOOL isDistanceGreaterThanHaltDistance(int a1, CUnit *a2, unsigned int a3, int a4);
void Game_Hdr_Node_Destructor(int a1);
void Saved_Game_Node_Destructor(int a1);
int sub_401310(int result, int a2);
u8 RemoveUnitAirPathing(char a1, CUnit *a2);
signed SetUnitEnergy(CUnit *a1, unsigned __int8 a2);
extern signed (__thiscall*GetMaximumHP)(CUnit *this_);
BOOL UnitIsInstallationTrap(CUnit *a1);
BOOL UnitIsFighter(CUnit *a1);
BOOL BWFXN_UnitIsCarrier(CUnit *a1);
BOOL BWFXN_UnitIsReaver(CUnit *a1);
BOOL UnitHasFighters(CUnit *a1);
CUnit * UnitGetWorkerPowerup(CUnit *a1);
extern BOOL (__thiscall*UnitIsTrainingOrMorphing)(CUnit *this_);
BOOL UnitIsGhost(CUnit *a1);
STREAMED * Streamed_SFX_Cleanup(STREAMED *a1);
void Streamed_SFX_FullDestructor(SFX_related *a1);
STREAMED * Streamed_SFX_Destructor(STREAMED *a1, SFX_related *a2);
void Provider_Destructor(int a1);
void _ID_Destructor(void *a1);
signed _ID_Destructor2(void *a1, int a2);
int * vector_insert(int *a1, int a2, void *a3, int a4);
void GameNode_Destructor(int a1);
int GameNode_Destructor_0_sub(_DWORD *a1, int a2);
void SaveGame_Destructor(int a1);
void _list_unlink(ListNode *a1);
void * vector_remove(void *a1, char a2);
void Device_Destructor(int a1);
void PhoneNumber_Destructor(int a1);
int PhoneNumber_Destructor_0(_DWORD *a1, int a2);
void DrawText_Destructor(int a1);
int DrawText_Destructor_0(_DWORD *a1, int a2);
void Template_Destructor(TemplateList *a1);
signed Template_Destructor_0(TemplateListEntry *a1, int a2);
void vector_delete(ListNode *a1);
extern BOOL (__fastcall*unitIsActiveResourceDepot)(CUnit *a1, CUnit *a2);
BOOL unitIsSubunit(CUnit *a1);
BOOL unitCanSeeCloakedTarget(CUnit *a1, CUnit *a2);
void UnitClearOrderTarget(CUnit *a1);
int isUnitMovableAndAtDestination(CUnit *a1);
void getImageAttackFrame(point *a1, CSprite *a2, int a3, unsigned __int8 a4);
CImage * setSpriteMainImgOffset(CSprite *a1, char a2, char a3);
extern BOOL (__fastcall*isQueueSlotActive)(CUnit *a1, int a2);
char updateUnitTransportData(CUnit *a1);
void fixTargetLocation(UnitType unit_type, Position *a2);
void getAbsoluteUnitBounds(CUnit *a1, rect *rectangle);
__int16 getAbsoluteUnitBoundsFromTarget(int a1, __int16 a2, _WORD *a3, __int16 a4);
BOOL UnitIsFrozenOrInAir(CUnit *a1);
__int16 * fixTargetPoint(__int16 *result);
unsigned getUnitDistanceToHalt(CUnit *unit, int a2, int a3);
extern int (*isUnitPositions2Equal)(void);
void Accelerate(CFlingy *result, int acceleration);
signed CC_CanBeInfested(CUnit *unit);
extern int (__fastcall*unitHPbetween33_66_percent)(_DWORD a1, _DWORD a2);
extern BOOL (__thiscall*unitHPbelow33_percent)(CUnit *this_);
BOOL unitIsPerformingUnbreakableCode(CUnit *a1);
void TriggerNode_Destructor(TriggerList *tirgger_list);
extern signed (__fastcall*IsTargNotVisibleCB)(__int16 a1, __int16 a2, __int16 a3, __int16 a4);
extern signed (__fastcall*isTargVisibleCB)(__int16 a1, __int16 a2, __int16 a3, __int16 a4);
extern int (__fastcall*getVisibilityMaskFromPositionAndSize)(int a1, __int16 width, __int16 y, __int16 x, __int16 height);
extern int (__fastcall*getVisibilityMaskFromPositionAndSize_0)(int a1, __int16 a2, __int16 a3, __int16 a4, __int16 a5);
void BNetMessage_Destructor(int a1);
int BNetMessage_Destructor_0(_DWORD *a1, int a2);
CUnit * setFlagHoldPosition(CUnit *a1);
int UnitGetShieldAndHitpoints(CUnit *a1);
int UnitGetMaxShieldAndHitpoints(CUnit *a1);
BOOL BWFXN_UnitIsQueen(CUnit *a1);
signed allTilesInRectAreVisibleFor(__int16 a1, __int16 a2, int a3, __int16 a4, char a5);
signed allTilesInRectAreExploredFor(__int16 a1, __int16 a2, int a3, __int16 a4, char a5);
void * FileDownloadSession_Destructor(int a1, int a2, int *a3, int a4);
void Ban_Destructor(int a1);
_DWORD * _unk_Destructor_20(int a1);
BOOL sub_4029B0(CSprite *a1, int a2, int a3);
int sub_402A00(int a1, int a2, CUnit *a3);
extern int (*isUnitBurrowed)(void);
BOOL sub_402A90(CUnit *a1);
rect * getDoubleUnitBoundingBoxMashup(rect *result, CUnit *a2, CUnit *a3, __int16 a4, __int16 a5);
BOOL sub_402BA0(CUnit *a1, CUnit *a2);
BOOL isUnitAtWPPosOrFacingDirection(CUnit *a1);
BOOL Unit_IsZergMainBuilding(CUnit *a1);
int getHPGainForRepair(CUnit *a1);
extern char * (__thiscall*unittracker_ctor)(_DWORD *this_);
extern unsigned (__stdcall*packDetailFinderData)(int a1);
extern int (__fastcall*unpackDetailFinderData)(int a1, int a2);
int AITrack_Container_Erase(int result, int a2);
void SaveGame_Destructor_0(int a1);
u8 toggleUnitPathingProperties(CUnit *a1);
_DWORD * resetAIThreadData(_DWORD *a1);
int packAIThreadData(int a1);
extern int (__fastcall*unpackAIThreadData)(int a1, int a2);
_DWORD * AI_Stop(_DWORD *result, int *a2);
BOOL isUnitUpgradeAvailable(int a1, int a2);
BOOL unitIsCleanDetector(CUnit *a1);
unsigned packAICaptainData(int a1);
_DWORD * unpackAICaptainData(_DWORD *result);
extern int (__thiscall*resetPathingData)(int this_);
int packPathingData(unsigned int *a1);
extern int (__stdcall*unpackAllPathingData)(int a1);
int packTownMgr_03_Unit_Data(int a1);
_DWORD * unpackTownMgr_03_Unit_Data(_DWORD *result);
extern char * (__thiscall*sub_403DB0)(_DWORD *this_);
extern int (__stdcall*packTownMgr_01_Data)(int a1);
extern int (__fastcall*unpackTownMgr_01_Data)(int a1, int a2);
extern char * (__thiscall*sub_404280)(_DWORD *this_);
int packTownMgr_02_Data(unsigned int *a1);
extern int (*unpackTownMgr_02_Data)(void);
_DWORD * removeAIWorkerController(_DWORD *result, int *a2);
int * GetNewAITask(_DWORD *a1);
int RemoveAITaskController(int result, int *a2);
int sub_404550(_DWORD *a1);
int packTownMgr_03_Data(int a1);
int unpackTownMgr_03_Data(int *a1);
int contourcalc_upHeap(int a1, _DWORD *a2);
int contourcalc_downHeap(int a1, int a2);
int getDoubleUnitBoundingBoxMashup_0(int result, CUnit *a2, CUnit *a3);
int AreaFixup_Destructor(_DWORD *a1, int a2);
int * pathcalc_downHeap(int a1, struct_a2_1 *a2);
extern int (*sub_4049A0)(void);
_WORD * setRect16(__int16 a1, __int16 a2, __int16 a3, __int16 a4, _WORD *a5);
void BltMask_Destructor(int a1);
signed CtrlNode_Destructor(int a1, int a2);
void DlgGrp_Destructor(int a1);
ChunkListItem * sub_404B20(ChunkNode *a1);
void ChunkNode_Destructor(ChunkNode *a1);
void * sub_404BC0(int a1, ChunkNode *a2);
extern void (*sub_404BFA)();
extern void (*sub_404C1E)();
extern void (__fastcall*renderTerrainGRPToCache)(grpFrame *a1, int a2);
extern char (__fastcall*rle_draw_normal)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
extern char (__fastcall*sub_40AD04)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
extern char (__fastcall*sub_40AE63)(int a1, int a2, grpFrame *a3, _DWORD *a4, int a5);
extern char (__fastcall*sub_40AFD5)(int a1, int a2, grpFrame *a3, tagRECT *a4, int a5);
extern void (__fastcall*rle_draw_cloacked_invis)(int a1, int a2, grpFrame *a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_8)(int a1, int a2, int a3, tagRECT *a4, int a5);
extern char (__fastcall*imageRenderFxn17_0_cntd)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
extern char (__fastcall*rle_draw_effect)(int a1, int a2, grpFrame *a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_shadow)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
extern char (__fastcall*imageRenderFxn5_2__1_common)(int a1, int a2, int a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_cloacked_invis_hflip)(int a1, int a2, int a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_8_hflip)(int a1, int a2, int a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_effect_hflip)(int a1, int a2, int a3, tagRECT *a4, int a5);
extern char (__fastcall*imageRenderFxn17_1_cntd)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
extern char (__fastcall*rle_draw_hflip)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
extern char (__fastcall*rle_draw_shadow_hflip)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
void BlitToBitmap(int result, int a2, void *a3, const void *a4);
extern void (*BWFXN_blitMapTiles)();
extern void (__fastcall*BlitTerrainCacheToGameBitmap)(int this_, int edx0, int a3, int a4);
extern unsigned (__fastcall*getDistancePrecise)(int a1, int a2, int a3, int a4);
extern unsigned (__fastcall*GetApproxDistance)(int x, int a2, int y, int a4);
void drawMinitileImageData(signed int framebuf_pos, int minitile);
extern int (__fastcall*sub_40C4D2)(int a1, int a2, unsigned __int16 *a3, int a4);
extern char * (__thiscall*type_info__szName)(type_info *this_);
extern void (*sub_40CCA6)();
extern void (*sub_40FFCB)();
extern void (__fastcall*scSpecialChars)(_BYTE *a1, _BYTE *a2);
extern void (*sub_4103A0)();
extern void (*restoreStackPartial)();
extern unsigned (__cdecl*crc32pk)(void *a1, int a2, int *a3);
extern int (__cdecl*pk_explode)(int a1, int a2, int a3, int a4);
extern int (__cdecl*pk_Expand)(int a1);
extern int (__cdecl*DecodeLit)(int a1);
extern int (__cdecl*DecodeDist)(_DWORD *a1, int a2);
extern int (__cdecl*WasteBits)(int a1, unsigned int a2);
extern void (__cdecl*GenDecodeTabs)(int a1, int a2, int a3, int a4);
extern unsigned (__cdecl*GenAscTabs)(int a1);
extern int (__cdecl*lmemcpy)(_DWORD *a1, char *a2, unsigned int a3);
extern int (__cdecl*pk_implode)(int a1, int a2, _DWORD *a3, int a4, _DWORD *a5, _DWORD *a6);
extern int (__cdecl*WriteCmpData)(int a1);
extern int (__cdecl*FindRep)(int a1, unsigned __int8 *a2);
extern int (__cdecl*OutputBits)(int a1, unsigned int a2, unsigned int a3);
extern __int16 (__cdecl*lmemset)(char *a1, unsigned __int8 a2, unsigned int a3);
extern int (__cdecl*FlushBuf)(int a1);
extern int (__cdecl*SortBuffer)(int a1, unsigned __int8 *a2, unsigned int a3);
void sha1_init(ShaState *state);
int AES_Comp(_DWORD *a1, int *a2);
void MD5_0(ShaState *a1, char *a2, unsigned int a3);
void MD5_1(ShaState *a1, BYTE *a2);
signed CopySectionData(SectionData *a1, void *a2);
extern _DWORD * (__fastcall*sub_413480)(_DWORD *a1, _DWORD *a2);
extern signed (__stdcall*ChunkNode_Constructor)(SectionData *a1, int a2, ChunkNode *a3);
extern signed (__thiscall*sub_413550)(ChkSectionLoader *loader, ChunkNode *a2, int a3, MapChunks *map_chunks);
signed sub_4135C0(ChkSectionLoader *chk_section_loaders, ChunkNode *a2, int chk_section_loader_count);
extern int (__thiscall*sub_413610)(_DWORD *this_);
int sub_413640(unsigned int *a1, int a2, unsigned int *a3);
signed sub_413670(Chunk *chk_data, ChunkNode *chunk_node, int chk_size_, int (__stdcall *chunk_node_constructor)(SectionData *, _DWORD, ChunkNode *));
signed ReadChunkNodes(int chk_section_loader_count, int chk_size_, ChkSectionLoader *chk_section_loader, void *chk_data, MapChunks *map_chunks);
void mapAuthProc(int (__stdcall *a1)(char *, void *, struct_v3 *), struct_v3 *a2);
BOOL sub_413850(int a1, int a2);
int spreadsCreep(UnitType unit_type, int a2);
extern u8 * (__thiscall*getMapCreepDataBeginAndEnd)(void *this_);
extern u8 * (__thiscall*sub_4138E0)(void *this_);
extern TileID * (__thiscall*getMapCreepData2BeginAndEnd)(void *this_);
extern TileID * (__thiscall*sub_413920)(void *this_);
extern void (__thiscall*sub_413940)(void *this_, int a2, int a3);
int * sub_413980(int *result);
int * sub_4139D0(int *result);
extern void (__fastcall*FreeCreepData)(bool exit_code);
extern signed (__stdcall*getCreepValue)(TileID *a1, int a2, int a3, TileID *a4, unsigned __int8 a5);
extern signed (__stdcall*cb)(TileID *a1, int a2, int a3, TileID *a4, int a5);
extern int (*sub_413AE0)();
BOOL sub_413B20(__int16 a1);
unsigned iterateDirectionalCreepData(int (__stdcall *a1)(char, TileID *, int, int, byte *), byte *a2, int a3, int a4);
_DWORD * sub_413BA0(_DWORD *result, _WORD *a2);
_DWORD * sub_413BD0(_DWORD *result);
extern void (__cdecl*sub_413C00)();
extern void (__cdecl*sub_413C50)();
extern void (*nullsub_7)();
extern int (__cdecl*sub_413D10)(int a1, int a2, int (__cdecl *a3)(int, int, int *));
signed sub_413DB0(int a1, UnitType dx0, signed int a3, signed int a4);
extern BOOL (__thiscall*sub_413F20)(void *this_, int a2);
BOOL sub_413F50(_WORD *a1);
extern int (__fastcall*sub_413F70)(int a1, int a2);
extern void (__stdcall*setCreepRelationalData)(int a1, int a2, int (__stdcall *a3)(TileID *, _DWORD, _DWORD, TileID *, _DWORD), int a4);
extern signed (__stdcall*runCreepRandomizer_notePossibleDesync)(TileID *a1, int a2, int a3, TileID *a4, int a5);
extern grpHead * (__thiscall*readCreepFile)(char *grpFile);
BOOL sub_414180(UnitType a1, int a2, int a3, int a4, int a5, int a6);
extern BOOL (__fastcall*sub_4141F0)(unsigned int a1, unsigned int a2);
extern int (__stdcall*getCreepAtAndSet)(char a1, TileID *a2, int a3, int a4, _BYTE *a5);
extern int (__stdcall*getNumSurroundingCreepTiles)(unsigned int a1, unsigned int a2);
extern int (__stdcall*BWFXN_CreepManagementCB)(char a1, TileID *a2, int a3, int a4, byte *a5);
int sub_4144C0(int a1, int a2);
signed sub_4144E0(int a1, int a2);
signed sub_414520(int a1, int a2);
signed sub_414560(int a1, int a2, UnitType dx0, int a4);
char sub_414680(int a1, int a2, UnitType a3);
extern char (__stdcall*ApplyCreepAtLocationFromUnitType)(unsigned __int16 a1, int a2, int a3);
void InitTerrainGraphicsAndCreep(struct_a1 *a1, TileID *a2, int a3, int a4, void *a5);
dialog * sub_414B50(dialog *a1, int (__thiscall *a2)(_DWORD *));
int sub_414B70(dialog *a1, dialog *a2);
_DWORD * sub_414B90(_DWORD *result, _DWORD *a2);
_DWORD * sub_414BB0(_DWORD *result, _DWORD *a2);
_DWORD * sub_414BC0(_DWORD *a1, int (__thiscall *a2)(_DWORD *), _DWORD *a3);
void scrollerInit(dialog *result);
dialog * sub_414C90(unsigned __int16 a1, int a2, int a3, int a4);
extern int (__thiscall*sub_414D30)(dialog *this_);
dialog * sub_414DB0(dialog *result, char a2, char a3);
u16 sub_414DC0(dialog *a1);
extern __int16 (__thiscall*sub_414DD0)(dialog *this_);
signed ScrollerKeyPress(dlgEvent *a1, dialog *a2);
extern int (__fastcall*sub_414F10)(dialog *a1, dlgEvent *a2);
void sub_415090(dialog *a1);
void scrollerMouseUpdate(dlgEvent *a1, dialog *a2);
void scrollerUpdate(__int16 a1, dialog *a2);
void ScrollBar_SetBounds(__int16 a1, __int16 a2, dialog *a3);
void sub_4153B0(dialog *a1, rect *a2);
extern void (__fastcall*genericHScrollUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericVScrollUpdate)(dialog *dlg, int x, int y, rect *dst);
void updateScroller(dialog *result, dlgEvent *a2);
void selectNextScrollerElement(dialog *a1, dlgEvent *a2, __int16 a3, int a4);
char scrollerLBtnDown(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*genericScrollerInteract)(dialog *dlg, struct dlgEvent *evt);
const char * sub_415C70(__int16 a1, int a2);
int sub_415CA0(int a1, int a2, int a3, int (__fastcall *a4)(int, _DWORD, _DWORD, int, int));
void * loadTBL(int a1, int a2, char *a3, char *a4, char **a5, FastFileRead a6);
int sub_415D20(unsigned __int16 a1, dialog *a2, int a3);
extern int (__thiscall*sub_415D60)(Timer *this_);
extern BOOL (__thiscall*sub_415D70)(Timer *this_);
extern BOOL (__thiscall*sub_415D90)(Timer *this_);
extern void (__cdecl*iterateTimers)();
void freeTimers(dialog *a1);
Timer * waitLoopCntd(__int16 timer_id, dialog *a2);
void SetCallbackTimer(__int16 timer_id, dialog *dlg, int a3, void (__fastcall *a4)(dialog *, __int16));
int sub_4161A0(dialog *a1, char *a2);
char sub_4161B0(char a1, int a2);
signed koreanTextLeadByteCheck(int byte_position, const char *text);
char DlgDrawEditCharacters(dialog *a1);
char * setFontSizeFromFlags(dialog *a1);
__int16 sub_4164D0(int a1, dialog *a2);
void sub_416570(dialog *a1, char a2);
void dlgEditDestroy(dialog *a1);
extern void (__fastcall*sub_416600)(dialog *a1, __int16 a2);
void sub_416650(const char *a1, dialog *a2);
void sub_416690(dialog *a1, char a2);
void sub_416710(dialog *a1, char a2);
void SetTextBoxTimer(char a1, dialog *a2);
void DlgDrawEditText(dialog *a1);
extern bool (__fastcall*genericEditInteract)(dialog *dlg, struct dlgEvent *evt);
extern BOOL (*BWFXN_GameEndTarget)();
int * sub_416E40(int a1, int a2, int a3);
char * sub_416E80(int a1, int a2);
extern void (*sub_416EB0)();
extern void (*sub_416EC0)();
int ExecuteSCode(int a1, int a2, int a3, int a4, int a5, int a6);
extern int (__stdcall*sub_416F30)(int a1, int a2, int a3, int a4, int a5, int a6);
int sub_417130(int result, int a2, int a3, int a4, int a5, int a6, int a7);
bool sub_4171F0(const void *a1, const void *a2);
unsigned sub_417210(unsigned __int8 result, unsigned __int8 a2, unsigned __int8 a3);
int sub_417270(int a1, int a2);
extern int (__fastcall*sub_4172C0)(int a1, int a2);
int DrawTransparencies(int a1, int a2, RECT *a3, int a4, int a5, int a6);
extern int (__stdcall*sub_4174A0)(char *a1, int a2, unsigned __int8 a3);
void sub_4178B0(const void *result, _DWORD *a2);
unsigned effects_render_text(unsigned __int8 a1, char *a2, int a3, int a4, int a5);
void CompileSCode(int a1, int palette);
extern __int16 (__fastcall*sub_417DF0)(int a1, int a2);
extern int (__fastcall*pDLGInteract)(int a1, int a2);
extern int (__thiscall*canTextboxDlgAcceptEvents_CB)(dialog *this_);
int setSelectedIndexDirect(int a1, dialog *a2);
int doUserEvent(unsigned __int16 a1, int a2, dialog *a3);
int DLG_IterateChildren(dialog *a1, int (__fastcall *a2)(_DWORD, _DWORD), int a3);
int dlgUpdate1(dialog *a1, dlgEvent *a2, int (__fastcall *a3)(_DWORD, _DWORD));
int sub_417F20(int result, int a2, _WORD *a3);
BOOL sub_417F50(_WORD *a1, _WORD *a2);
int sub_417F80(int result);
int sub_417FA0(int result);
extern int (*sub_417FB0)();
BOOL sub_417FF0(dialog *a1);
extern signed (__thiscall*isDlgVisible_CB)(dialog *this_);
int dlgMouseOverGenericLabel(dialog *a1);
dialog * sub_418060(dialog *a1, int a2);
dialog * getControlFromIndex(dialog *dlg, __int16 index);
extern dialog * (__thiscall*DLG_prevEntry)(dialog *a1);
extern dialog * (__thiscall*DLG_nextEntry)(dialog *this_);
dialog * sub_4180D0(dialog *result, int a2);
void registerUserDialogAction(dialog *dlg, unsigned int a2, FnInteract *a3);
unsigned sub_418150(dialog *a1);
extern int (__fastcall*dlgPassUpperKeyDwnEventToUserHotkey_CB)(dialog *a1, char *a2);
extern int (__fastcall*dlgPassLowerKeyDwnEventToUserHotkey_CB)(dialog *a1, char *a2);
extern int (__fastcall*SendLowercaseHotkeyEvent_CB)(dialog *a1, char *a2);
int dlgPassHotkeyEventToFlags(int a1, int a2);
int dlgPassHotkeyEventToIndex(dialog *a1, __int16 a2);
dialog * dlgSetMouseOver(dialog *a1, struct dlgEvent *a2);
BOOL isDlgEventCursorInsideDlg(dialog *a1, dlgEvent *a2);
extern unsigned (__thiscall*sub_418440)(int this_);
u8 * FreeDialogDestBuffer(dialog *a1);
int passUppercaseKeyDwnToUserChrEvent(dlgEvent *a1, int a2, dialog *a3);
int passLowercaseKeyDwnToUserChrEvent(dlgEvent *a1, dialog *a2);
int GenericCharEvent_HandleChild_maybe(dialog *a1, dlgEvent *a2);
void sub_418570(dialog *a1);
void UpdateDlgOnFlag(dialog *a1);
void RefreshDlgForCursor(dialog *a1);
void sub_4185E0(dialog *a1, char *a2);
extern void (__thiscall*sub_418600)(dialog *this_);
DialogFlags DisableControl(dialog *a1);
void showDialog(dialog *dlg);
void HideDialog(dialog *dlg);
void SetAsActiveControl_maybe(dialog *a1, dialog *a2);
void sub_418830(dialog *a1);
void setDialogVisibility(int a1, dialog *a2);
void genericDlgMouseMoveEventHandler(dialog *a1, dlgEvent *a2);
void ShowDialog(dlgEvent *a1, dialog *a2, dialog *a3);
signed sub_418A10(dialog *a1, dlgEvent *a2);
signed SetNextActiveElement(dialog *a1, dialog *(__thiscall *a2)(dialog *a1));
u32 genericDlgCharEventHandler(dlgEvent *evt, dialog *dlg);
extern void (__stdcall*sub_418C00)(dialog *a1);
int genericCommonInteract(dlgEvent *a1, dialog *a2);
void EnableControl(dialog *a1);
extern int (__fastcall*statRes_Text_Interact)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*genericDlgInteract)(dialog *dlg, struct dlgEvent *evt);
void sub_419170(int a1, dialog *a2);
extern int (__fastcall*genericLabelInteract)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*genericImageInteract)(dialog *dlg, struct dlgEvent *evt);
BOOL sub_419260(int a1);
__int16 sub_419290(DlgGrp *a1);
int sub_419450(int result);
void snd_set_btn_click(void (__stdcall *result)(int));
extern void (__thiscall*snd_play_btn)(void *this_);
extern BOOL (__thiscall*sub_419480)(void *this_);
extern void (*sub_4194B0)();
void AllocInitDialogData(dialog *a1, dialog *a2, FnAllocBackgroundImage allocFunction, const char *logfile, int logline);
extern void (__cdecl*dlg_focus_free)();
void removeDlgFromTimerTracking(dialog *a1);
void assignNextActiveDlgElement(dialog *dlg, int a2);
void SetActivationDelay_maybe(dialog *dlg);
extern void (__cdecl*pressGlobalDlgHotkey)();
DlgGrp * dlg_load_theme(int a1, char *a2, const char *grp_path, grpHead *(__fastcall *a4)(const char *, int, const char *, int));
extern void (__fastcall*DestroyScreenLayer)(bool exit_code);
void InitializeDialog(dialog *a1, FnInteract a2);
dialog * sub_419E10(int a1, const char *a2, int esi0, int (__fastcall *a4)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD), FnAllocBackgroundImage a5);
void dlg_set_font(dialog *a1);
void DestroyDialog(dialog *a1);
extern void (*sub_419F80)();
int sendInputToAllDialogs(dlgEvent *evt);
extern void (__cdecl*dlg_mgr_init)();
int gluLoadBINDlg(dialog *a1, FnInteract fn_interact);
dialog * comboboxInit(dialog *result);
void comboboxSelNext(dialog *dlg);
char sub_41A180(int a1);
extern int (*sub_41A190)();
extern int (*sub_41A1A0)();
BOOL isEventInDlgField(dialog *a1, dlgEvent *a2);
extern int (*isCursorInDlgControl)(void);
extern int (__thiscall*listboxGetSelectedIndexFromMousePosition)(_DWORD a1);
extern int (*sub_41A3C0)();
extern int (*sub_41A3F0)();
extern int (*sub_41A420)();
extern int (__stdcall*sub_41A430)(int a1);
extern int (*sub_41A450)();
void listboxLButtonUp(dialog *a1);
void comboboxLButtonUp(dialog *a1);
void ResetDropdown(dialog *a1);
void comboboxLButtonDown(dialog *a1);
void DlgSetSelected_UpdateScrollbar(unsigned __int8 a1, dialog *a2);
extern void (__thiscall*scrollerUpdateParent)(dialog *this_);
void dlgFontSize(dialog *a1);
void dlgSetSelectedImmediate(unsigned __int8 a1, dialog *a2);
extern unsigned (__stdcall*sub_41A890)(dialog *a1, int *a2);
int dlgScrollKeyInteract(dialog *a1, dlgEvent *a2);
void listboxLButtonDown(dialog *a1, dlgEvent *a2);
extern void (__thiscall*sub_41AC20)(dialog *this_);
u8 dlgComboboxUpdate(dialog *a1, rect *a2);
void listboxMouseMove(dialog *a1, dlgEvent *a2);
extern void (__fastcall*listboxEntryUpdate)(struct dialog *dlg, u8 selectedIndex, rect *dstRect, int x, int y);
extern void (__fastcall*genericComboboxUpdate)(dialog *dlg, int x, int y, rect *dst);
__int16 listboxInit(dialog *a1);
void setScrollbarVisibility(dialog *a1, int a2);
void listboxHide(dialog *a1);
void listboxShow(dialog *a1);
void List_Update(dialog *a1);
void * ListBox_RemoveEntry(unsigned __int8 a1, dialog *a2);
void sub_41B620(const char *a1, dialog *dlg, unsigned __int8 a3, char a4);
u8 ListBox_AddEntry(const char *a1, dialog *a2, char a3);
extern int (*sub_41B860)();
void ClearListBox(dialog *a1);
int sub_41B8E0(int a1);
BOOL genericListboxDestroy(dialog *a1);
extern void (__fastcall*genericListboxUpdate)(dialog *dlg, int x, int y, rect *dst);
extern int (__fastcall*genericListboxInteract)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*genericComboboxInteract)(dialog *dlg, struct dlgEvent *evt);
extern void (*sub_41BD00)();
Bitmap * sub_41BD20(Bitmap *result);
int sub_41BD30(int result);
int sub_41BD50(int a1);
BOOL isDialogInRect(dialog *a1, tagRECT *a2);
extern int (*sub_41BDF0)();
extern void (*sub_41BE20)();
BOOL sub_41BE70(__int16 *a1);
BOOL sub_41BED0(rect *a1);
extern int (*sub_41BF30)();
extern int (__thiscall*isRectBoundsInside_Assign_16)(_DWORD a1);
BOOL isRectBoundsInside_Assign_32(LPRECT a1, RECT *a2);
extern int (*sub_41C010)();
extern int (*sub_41C030)();
BOOL sub_41C050(__int16 *a1, LPRECT lprc);
Bitmap * sub_41C080(RECT *a1, dialog *a2);
void _RgnUnk(LPRECT a1);
void sub_41C2A0(tagRECT *a1);
extern void (*RefreshCursorRect)();
void updateDialog(dialog *dlg);
void sub_41C4F0(dialog *a1);
int sub_41C5A0(int a1, rect *a2);
extern signed (__stdcall*CtrlNode_Constructor)(dialog *a1, RECT *a2);
extern void (*updateAllDlgs)();
extern void (*sub_41C7B0)();
void sub_41C810(RECT *eax0, dialog *a2);
extern void (*BWFXN_RedrawTarget)();
extern void (__fastcall*DialogUpdateProc)(int a1, int a2, Bitmap *pSurface, bounds *pBounds);
int fixDrawBoundsWithin(__int16 *a1, __int16 *a2);
void BWFXN_PrintIcon(bounds *a1, Bitmap *a2, __int16 a3, __int16 a4);
u8 * sub_41D160(unsigned __int8 a1, Bitmap *a2, int a3, int a4, int a5, int a6, int a7);
extern int (*sub_41D1D0)();
void sub_41D210(Bitmap *eax0, __int16 a2, __int16 a3);
void BlitSurface(bounds *a1, Bitmap *a2, __int16 a3, __int16 a4);
__int16 sub_41D310(int a1, char a2);
extern void (*sub_41D350)();
BOOL sub_41D360(int a1, RECT *a2, int edx0);
BOOL sub_41D370(int a1, int a2);
void BlitDirtyArray(RECT *a1);
extern void (__cdecl*DoBltUsingMask)();
extern int (*BWFXN_UpdateBltMasks)();
extern void (*TransDestroy)();
void updateConsoleImage(void **a1);
BltMask * BltMask_Constructor(Bitmap *a1, char *a2, char *a3);
extern int (__cdecl*realizePalette)();
extern int (__thiscall*sub_41D780)(Bitmap *this_, __int16 a2, __int16 a3);
extern void (__fastcall*drawVertLine)(int a1, unsigned __int16 a2, __int16 a3, unsigned __int16 a4);
__int16 MinimapFill(unsigned __int16 a1, int a2, __int16 a3, __int16 a4);
extern int (*sub_41D860)();
extern int (__thiscall*sub_41D880)(char *logfilename);
extern int (__fastcall*sub_41D8A0)(unsigned int numentries, unsigned int firstentry);
extern HWND (*BWFXN_DDrawDestroy)();
extern void (__cdecl*BWFXN_DDrawInitialize)();
void sub_41DC20(PALETTEENTRY *a1, PALETTEENTRY *a2, int a3);
unsigned sub_41DCF0(unsigned int result);
extern int (*sub_41DD10)();
extern void (__cdecl*sub_41DD20)();
void sub_41DD50(PALETTEENTRY *a1, unsigned int a2, unsigned int a3);
extern void (__cdecl*sub_41DD90)();
extern void (*sub_41DDD0)();
extern char (__stdcall*refreshRect)(int a1, int a2, int a3, int a4);
extern void (__stdcall*BlitBitmap)(Bitmap *a1);
extern void (__fastcall*BlitCursorSurface)(int a1, __int16 a2, Bitmap *a3, __int16 a4);
extern void (__cdecl*sub_41E000)();
extern void (__cdecl*InitializeImage)();
extern void (__fastcall*DestroyImage)(bool exit_code);
void BWFXN_RefreshTarget(int left, int bottom, int top, int right);
int sub_41E1A0(layer *a1);
extern void (__cdecl*RefreshCursorScreen)();
extern void (*DirtyArrayHandling)();
signed sub_41E430(signed int result);
void sub_41E450(int (__thiscall *a1)(PALETTEENTRY *, PALETTEENTRY), PALETTEENTRY *a2);
unsigned SetCurrentPaletteInfo(PALETTEENTRY *a1, unsigned __int16 a2, unsigned __int8 a3);
void CyclePalette(int a1);
void CyclePaletteAdvanced(int cycle_struct_index);
CycleStruct * sub_41E550(unsigned __int8 a1, BYTE a2, BYTE a3, BYTE a4, PALETTEENTRY *a5, BYTE a6);
int sub_41E590(unsigned __int8 a1);
extern int (*sub_41E5A0)();
void setPaletteGamma(int a1, signed int a2);
unsigned DoCycle(CycleStruct *cycle_struct, unsigned int cycle_struct_index, unsigned int a3);
extern BOOL (*updatePaletteEntries)();
void gluDlgFadePalette(unsigned int a1);
extern void (__cdecl*colorCycleInterval)();
extern void (*pauseSetPaletteToGreyscale)();
extern void (__stdcall*sub_41E9E0)(int a1);
extern void (__stdcall*TitlePaletteUpdate)(int a1);
int CreateDirectory(const char *a1);
extern SIZE_T (__stdcall*GetFileInfo)(void *a1);
int createErrorsDirectory(char *a1);
extern HANDLE (*createErrFile)();
extern void (*ProcError)(int a1);
extern void (*ErrorLog)(char *arg0, ...);
extern void (*ErrorLogSystemInfo)();
int ___vsnprintf(char *a1, va_list a2, char *a3, size_t a4);
LPVOID localLoadResource(LPCSTR lpName, const CHAR *a2, int a3);
int localLoadString(UINT a1, int a2, CHAR *a3);
HACCEL InitLocaleAccelerators(const char *a1);
extern HINSTANCE (*localFreeLibrary)();
BOOL localLoadLibrary(const CHAR *a1);
int __snprintf(char *buff, size_t size_, const char *format, ...);
extern unsigned (*LocalGetLang)();
INT_PTR sub_41F230(DLGPROC lpDialogFunc, LPARAM a2, int a3);
char sub_41F270(_DWORD *a1);
LONG WriteWindowText(__int16 *a1, int a2);
int getColourHandle(unsigned __int8 a1);
extern int (*sub_41F7A0)();
extern int (__fastcall*getCharacterWidth)(u8 a1);
extern void (*sub_41F8A0)();
char sub_41F8B0(char result);
extern int (*nullsub_8)();
extern int (*sub_41F8D0)();
u8 * setTextAlignment(u8 *a1);
extern void (__thiscall*BWFXN_SetFont)(Font *this_);
int sub_41FC20(char *a1, int a2);
int getMessageWidth(const char *a1);
FontChar * sub_41FCC0(u8 a1);
BOOL sub_41FCF0(_DWORD *a1);
Font * LoadFont(char *font_name, Font *(__fastcall *a2)(char *, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD, _DWORD));
extern Color * (__stdcall*writeFontApplyColour)(int a1, unsigned int a2);
u8 * BWFXN_PrintXY(char *a1, int a2);
unsigned BWFXN_DrawXY(const char *text, signed int x, signed int y);
BOOL __fwrite(size_t a1, void *a2, FILE *a3);
BOOL __fread(size_t a1, void *a2, FILE *a3);
int __fgetc(FILE *a1);
int __fseek(__int32 a1, FILE *a2, int a3);
int __fclose(FILE *a1);
BOOL DeleteFile(int a1, const CHAR *a2);
FILE * _pfopen(char *filename, __int16 flags);
extern void (__fastcall*saveRegOptions)(bool exit_code);
extern int ** (*ApplyDefaultOptions)();
extern char (*LoadRegOptions)();
void AppExit(bool exit_code);
void sub_420830(unsigned __int8 a1, int a2);
BOOL dlgCenterScreen_0(HWND a1);
BOOL ErrMessageBox(__int16 a1, LPCSTR lpText, LPCSTR lpCaption);
extern BOOL (__stdcall*DialogFunc)(HWND a1, UINT a2, WPARAM a3, LPARAM a4);
int sub_420A20(int a1, char *a2, size_t a3);
int DSERR_GetString(size_t size_, char *dest, int a3);
int DDERR_GetString(size_t size_, char *dest, int a3);
char * GetErrorString(LPSTR lpBuffer, DWORD a2, unsigned int a3);
void ErrorDDrawInit(char *source_file, char *function_name, unsigned int last_error, WORD resource, int source_line);
void SysWarn_FileNotFound(const char *a1, int last_error);
extern BOOL (*SystemWarning_Configuration)();
extern BOOL (*SystemWarning_PhysicalMemory)();
extern BOOL (*SystemWarning_PentiumProcessor)();
extern BOOL (*sub_421420)();
BOOL SystemWarning_20MBDiskSpace(int a1);
extern DWORD (*sub_4214C0)();
extern void (__cdecl*DLGErrFatal)();
extern void (*sub_421510)();
extern void (*FatalError)(const char *arg0, ...);
extern void (__cdecl*SetCursorClipBounds)();
extern LONG (__stdcall*sub_421640)(LONG *a1, LONG *a2);
void _SetCursorPos(__int16 a1, __int16 a2);
int _ClipCursor(RECT *a1);
int sub_4216F0(int result);
void doCursorClip(int a1);
extern int (__thiscall*sub_421770)(_DWORD a1);
extern _DWORD (__stdcall*sub_4217E0)(__int16 a1, char a2);
extern int (__thiscall*sub_4218E0)(_DWORD a1);
extern unsigned (__fastcall*InsertContour)(int a1, int a2, int a3, unsigned int *a4, unsigned int *a5);
extern int (*sub_421A60)();
extern int (*sub_421AA0)();
extern int (*sub_421AF0)();
extern int (__stdcall*sub_421B40)(int a1, int a2);
extern int (__thiscall*sub_421BA0)(_DWORD a1);
SaiContourHub * setContourSearchBounds(SaiContourHub *result, __int16 a2, __int16 a3, __int16 a4, __int16 a5);
extern int (*sub_421CB0)();
extern int (*sub_421CD0)(void);
extern int (*sub_422070)();
SaiContourHub * setContourSearchVariablesFromUnitType(SaiContourHub *result, unsigned __int16 a2);
int sub_422160(int a1);
char sub_422600(__int16 a1, int a2, int a3, char a4);
int * sub_4228E0(__int16 *a1, int *a2);
extern int (*nullsub_9)();
extern int (*sub_422A50)();
signed sub_422A90(struct_a1_1 *a1, Position *a2);
extern int (__stdcall*sub_422C90)(__int16 *a1);
extern signed (__stdcall*sub_422FA0)(struct_a1_1 *a1, int a2);
extern void (__fastcall*BTNSACT_None)(int action_variable, bool is_shift_used);
signed getLarvaeUnitsFromList(CUnit *a1, CUnit **a2);
extern void (__fastcall*CMDACT_CancelNuke)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_MergeDarkArchon)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_MergeArchon)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Lift)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Decloak)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Unburrow)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Burrow)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_CancelAddon)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_CancelUpgrade)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Upgrade)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_CancelResearch)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Research)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_HoldPosition)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_TrainFighter)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_ReaverStop)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_CarrierStop)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Stop)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_CancelUnitMorph)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_CancelConstruction)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Siege)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Unsiege)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_CancelTrain)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Train)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Stimpack)(int action_variable, bool is_shift_used);
extern signed (*unit_CanCloak)();
signed TechUseCheckForGroupEnergyCost(Tech a1);
extern void (__fastcall*CMDACT_Cloak)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_ReturnCargo)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_Morph)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_BuildingMorph)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_SelectLarva)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_Heal)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_UseNuke)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_RechargeShields)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_UnloadAll)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_LoadUnit)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_Harvest)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_Repair)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_BuildingLand)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_PlaceNydusExit)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_ZergBuild)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_PlaceAddon)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_BuildProtoss)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_PlaceCOP)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_BuildTerran)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_UseTech)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_Patrol)(int a1, bool a2);
extern void (__fastcall*BTNSACT_ReaverAttack)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_CarrierAttack)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_CarrierMove)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_TowerAttack)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_AttackUnit)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_AttackMove)(int a1, bool a2);
extern void (__fastcall*BTNSACT_Move)(int a1, bool a2);
extern void (__fastcall*BTNSACT_RallyPoint)(int action_variable, bool is_shift_used);
extern bool (__cdecl*UnitStatCond_Never)();
extern CUnit * (*sub_424510)();
extern bool (__cdecl*UnitStatCond_Powerup)();
extern void (__cdecl*storeSelectionGroupHPAndType)();
extern signed (*isSelGroupUpdated)();
extern CUnit * (*sub_4246B0)();
extern s32 (*sub_4246D0)();
extern bool (__fastcall*sub_424780)(__int16 a1);
extern CUnit * (*sub_4248F0)();
extern bool (__cdecl*UnitStatCond_Standard)();
extern CUnit * (*sub_4249E0)();
extern BOOL (*sub_424A10)();
extern bool (__cdecl*UnitStatCond_Egg)();
extern bool (__cdecl*UnitStatCond_Archon)();
extern CUnit * (*sub_424B10)();
extern bool (__cdecl*UnitStatCond_CarrierReaver)();
void setSpellSpecialBtnGraphic(dialog *a1);
extern bool (__cdecl*UnitStatCond_Dropship)();
extern CUnit * (*sub_424FC0)();
extern bool (__cdecl*UnitStatCond_Building)();
extern CUnit * (*sub_4251F0)();
extern bool (*sub_425230)();
void sub_425310(dialog *a1, unsigned __int16 a2);
void StatHangerCount(dialog *a1, unsigned __int16 a2);
void sub_425510(dialog *a1, unsigned __int16 a2);
void sub_425600(dialog *a1, unsigned __int16 a2);
void sub_425790(dialog *a1, unsigned __int16 a2, WeaponType weapon_type);
void AddTextToDialog(dialog *a1, __int16 a2, const char *a3);
extern bool (__cdecl*UnitStatCond_overlord)();
void sub_425960(dialog *stardata_dlg);
void sub_425A30(dialog *a1);
extern void (__stdcall*SetUnitStatusStrText)(dialog *a1);
void SetKillsStrText(dialog *a1);
extern void (__stdcall*getActivePortraitUnitName)(dialog *a1);
extern void (__fastcall*UnitStatAct_Default)(dialog *this_);
void sub_425F30(dialog *a1);
void sub_4260C0(dialog *a1);
void sub_426190(dialog *a1);
signed StatSpidermineCount(dialog *a1, unsigned __int16 a2);
extern void (__stdcall*setTextStr)(dialog *a1);
extern void (__stdcall*sub_426500)(dialog *a1);
extern void (__stdcall*sub_4266F0)(dialog *a1);
extern void (__stdcall*sub_4268D0)(dialog *a1);
extern void (__stdcall*sub_426C60)(dialog *a1);
extern void (__fastcall*UnitStatAct_Powerup)(dialog *dlg);
extern void (__fastcall*UnitStatAct_Standard)(dialog *this_);
extern void (__stdcall*sub_426FF0)(dialog *a1);
extern void (__fastcall*UnitStatAct_Egg)(dialog *dlg);
extern void (__fastcall*UnitStatAct_Archon)(dialog *dlg);
extern void (__fastcall*UnitStatAct_CarrierReaver)(dialog *dlg);
void sub_427540(dialog *a1);
extern void (__fastcall*UnitStatAct_Building)(dialog *dlg);
void replayStatBtns(dialog *dlg);
extern void (__fastcall*UnitStatAct_Dropship)(dialog *dlg);
extern void (__fastcall*UnitStatAct_Overlord)(dialog *dlg);
signed BriefingActionsLoop(Trigger *a1);
extern void (*sub_427E30)();
extern int (*BRFACT_NoAct)();
extern signed (__fastcall*BRFACT_Wait)(Action *action, BYTE action_index);
extern int (__fastcall*BRFACT_SkipTutorial)(Action *action, BYTE action_index);
extern signed (__thiscall*BRFACT_MissionObjectives)(int this_);
extern signed (__thiscall*BRFACT_HidePortrait)(int this_);
extern int (__fastcall*BRFACT_ShowPortrait)(Action *action, BYTE action_index);
extern signed (__thiscall*BRFACT_TextMessage)(int this_);
extern int (__fastcall*BRFACT_DisplaySpeakingPortrait)(int a1, int a2);
extern int (__fastcall*BRFACT_PlayWAV)(Action *action, BYTE action_index);
extern signed (__fastcall*BRFACT_Transmission)(int a1, int a2);
extern int (__fastcall*isUpgradeInProgress)(char a1, int a2);
extern u8 * (__fastcall*sub_4281E0)(char a1, int a2);
extern u8 * (__fastcall*sub_428210)(char a1, int a2);
int isResearchInProgress(int a1, char a2);
u8 * sub_428270(int a1, char a2);
u8 * sub_4282A0(int a1, char a2);
extern ButtonState (__fastcall*BTNSCOND_Always)(u16 variable, int player_id, CUnit *unit);
extern signed (*sub_4282E0)();
extern ButtonState (__fastcall*BTNSCOND_ScvIsBuilding)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_NoNydusExit)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_LurkerStop)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_Movement)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsLifted)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsLiftedCanMove)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanRechargeShields)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HasCargo)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_NoCargo)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsConstructing)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HatcheryLairHive)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsTraining)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HasCargoTerran)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_NoCargoTerran)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanRepair)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_SCVCanAttack)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_SCVCanStop)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_SCVCanMove)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HasScarabs)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HasInterceptors)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_ZergHasCargo)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_ZergNoCargo)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsLanded)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HasNuke)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_TankMove)(u16 variable, int player_id, CUnit *unit);
extern int (*sub_4288A0)();
extern int (*sub_4288C0)();
extern ButtonState (__fastcall*BTNSCOND_IsResearching)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsUpgrading)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsBuildingAddon)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_SiloHasNoNuke)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_TerranAdvanced)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_TerranBasic)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_ProtossAdvanced)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_ProtossBasic)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_ZergAdvanced)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_ZergBasic)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanMoveSpecialCase)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanMove)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_TrainingFighter)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanBuildUnit)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HasUnit)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_Stationary)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanAttack)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_BattleOrders)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HasRoom)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsBurrowed)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanBurrow)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsSieged)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsUnsieged)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsCloaked)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanCloak)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_IsCloaked_0)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanCloak_0)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanUpgrade)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HasSpidermines)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HasTech)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanResearch)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_Rally)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanMergeDarkArchonTwoSelected)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanMergeDarkArchonOneSelected)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanMergeArchonTwoSelected)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanMergeArchonOneSelected)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_CanMorphLurker)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_HatcheryLairHiveRally)(u16 variable, int player_id, CUnit *unit);
extern void (__fastcall*BTNSACT_TargetOrderCancel)(int action_variable, bool is_shift_used);
extern void (__fastcall*BTNSACT_CancelPlacement)(int action_variable, bool is_shift_used);
extern int (*nullsub_11)();
extern int (__stdcall*sub_4297B0)(int a1);
extern _DWORD (__stdcall*findContourInWork_3)(_DWORD a1, _DWORD a2, _DWORD a3);
extern _DWORD (__stdcall*findContourInWork_2)(_DWORD a1, _DWORD a2, _DWORD a3);
extern _DWORD (__stdcall*findContourInWork_1)(_DWORD a1, _DWORD a2, _DWORD a3);
extern _DWORD (__stdcall*findContourInWork_0)(_DWORD a1, _DWORD a2, _DWORD a3);
extern signed (__thiscall*isContourSpaceAvailable)(SaiContourHub *this_, int x, int y);
extern _DWORD (__stdcall*sub_429D50)(__int16 a1, __int16 a2, _DWORD a3);
extern _DWORD (__stdcall*sub_42A1B0)(_DWORD a1, _DWORD a2, _DWORD a3);
extern int (__stdcall*sub_42A570)(int a1);
extern int (__stdcall*sub_42A5C0)(Position *a1, Position *a2, signed __int16 *a3);
unsigned sub_42A840(unsigned __int8 a1, unsigned __int8 a2, int a3);
extern int (*sub_42A860)();
extern int (__stdcall*sub_42A8A0)(int a1);
extern _DWORD (__stdcall*sub_42A8D0)(_DWORD a1, _DWORD a2, _DWORD a3);
extern _DWORD (__stdcall*sub_42AB50)(_DWORD a1, _DWORD a2);
int sub_42ACB0(_DWORD *a1, char *a2);
BOOL InitializeSightValues(int max_sight_range, SightStruct *sight_data, int map_tile_width);
extern int (*sub_42AE30)();
extern int (*sub_42AE70)();
extern _DWORD (__stdcall*MD5)(_DWORD a1);
_DWORD * sub_42B500(_DWORD *result);
int * sub_42B530(int a1);
int sub_42B570(int result, _DWORD *a2, char *a3);
int sub_42B5D0(int a1, int a2, _DWORD *a3);
extern _DWORD * (*SAI_PathCreate_Sub1_1)();
extern int (__stdcall*SAI_ContoursCreate_1)(BYTE (*a1)[1024], int *a2, int *a3);
extern int (__cdecl*PtFuncCompare)(const void *a1, const void *a2);
void SAI_ContoursRealloc(SaiContourHub *a1);
BOOL SAI_ContoursCreate_2(SaiContourHub *a1);
void sai_contoursCreate_Cleanup(SaiContour **a1);
extern void (__cdecl*SAI_PathCreate_Sub1_0)();
void SAI_ContoursCreate(SaiContourHub *a1);
void SAI_PathCreate_Sub4(SAI_Paths *a1);
extern int (__thiscall*TRGCND_Switch)(int this_);
extern int (*TRGCND_Never)();
extern int (*TRGCND_Always)();
extern int (*sub_42C690)();
int sub_42C6A0(unsigned __int8 *a1);
extern int (*sub_42C6B0)();
extern BOOL (__thiscall*TRGCND_ElapsedTime)(int this_);
extern BOOL (__thiscall*TRGCND_CountdownTimer)(int this_);
extern BOOL (__thiscall*TRGCND_LeastResources)(unsigned __int8 *this_);
extern BOOL (__thiscall*TRGCND_MostResources)(void *this_);
extern BOOL (__thiscall*TRGCND_LowestScore)(unsigned __int8 *this_);
extern BOOL (__thiscall*TRGCND_HighestScore)(unsigned __int8 *this_);
extern BOOL (__thiscall*TRGCND_LeastKills)(unsigned __int16 *this_);
extern BOOL (__thiscall*TRGCND_MostKills)(unsigned __int16 *this_);
extern BOOL (__thiscall*TRGCND_CommandTheLeast)(_WORD *this_);
extern BOOL (__thiscall*TRGCND_CommandTheMost)(_WORD *this_);
extern int (*TRGCND_Score)();
extern int (*TRGCND_Opponents)();
extern int (*TRGCND_Deaths)();
extern int (__thiscall*TRGCND_Kill)(int this_);
extern int (*TRGCND_Accumulate)();
extern int (*TRGCND_Command)();
extern BOOL (__thiscall*TRGCND_CommandTheLeastAt)(_WORD *this_);
extern BOOL (__thiscall*TRGCND_CommandTheMostAt)(_WORD *this_);
extern int (*TRGCND_Bring)();
int sub_42CDD0(int result, int tech, int a3);
char getUnitCostInfo(int *mineral_cost_ptr, int *supply_cost_ptr, UnitType unit_type, int *gas_cost_ptr);
int subtractMorphCost(unsigned __int8 a1);
void refundBuildingCost(UnitType a1, unsigned __int8 a2);
int refundUnitTrainCost(unsigned __int8 playerID, UnitType unitType);
int sub_42CEF0(int a1);
int sub_42CF00(int a1);
int sub_42CF10(int a1);
void sub_42CF20(unsigned __int16 a1, int a2, int a3, char a4, unsigned __int8 a5);
void j_ShowErrorMessageWithSfx(int playerId, __int16 statTxtId, SfxData sfxId);
extern signed (__stdcall*hasSuppliesForUnit)(u8 playerID, UnitType unit_type, int a3);
signed sub_42D0C0(int a1, unsigned __int8 a2, int a3);
int sub_42D140(UnitType a1, u8 a2, int a3, int a4);
int sub_42D190(unsigned __int8 a1, unsigned __int8 a2, int a3);
extern int (__fastcall*sub_42D240)(int a1, Tech a2, int a3);
void refreshImageData(RECT *a1);
extern CSprite * (*sub_42D330)();
extern int (*sub_42D350)();
extern unsigned (*sub_42D370)();
extern unsigned (*sub_42D400)();
extern CSprite * (__cdecl*getFirstSprite)();
int sub_42D4C0(CSprite *a1);
BOOL isVisible(__int16 y, __int16 x);
int sub_42D600(Anims animation);
extern int (__fastcall*getUnitCollision_CB)(CUnit *a1, void *a2);
BOOL sub_42D6B0(CUnit *a1, __int16 a2, __int16 a3, unsigned __int16 a4, __int16 a5, __int16 a6);
extern BOOL (__stdcall*canDimensionsFitAt)(signed int x, signed int y, signed int a3, signed int a4);
BOOL canUnitTypeFitAt(signed int x, UnitType unit_type, __int16 y);
void sub_42D890(CUnit *a1, _DWORD *a2);
void sub_42D8C0(CUnit *unit);
CUnit * getUnitCollision(CUnit *a1);
extern BOOL (__fastcall*DoesBlockPoint)(int a1, CUnit *a2, unsigned __int16 a3, __int16 a4, __int16 a5);
extern BOOL (__fastcall*IsPointAtUnitBorder)(int a1, CUnit *a2, CUnit *a3, int a4);
signed sub_42DB50(CUnit *unit, int a2, int a3, Position *a4);
BOOL CanCollideWith(CUnit *self, CUnit *other);
BOOL HasToDodge(CUnit *a1, CUnit *a2);
CUnit ** GetCollidingUnits(__int16 radius, CUnit *a2, int a3, int a4);
BOOL sub_42E0E0(CUnit *a1, int a2);
CUnit ** sub_42E170(rect *a1, CUnit *a2);
extern int (__stdcall*sub_42E1D0)(CUnit *a1, int a2);
void orders_ResetCollision2(CUnit *unit);
extern void (*nullsub_12)();
extern void (__fastcall*nullsub_1)(bool exit_code);
extern signed (*sub_42E450)();
extern int (*sub_42E460)();
int sub_42E470(int a1, struct_a1_1 *a2, int *a3);
char sub_42E4F0(int a1, int a2);
extern BOOL (__stdcall*CreatePath_PullContours)(struct_a1_1 *a1, int a2, unsigned __int16 a3);
BOOL GetClosestReachable(struct_a1_1 *a1);
extern void (*nullsub_13)();
extern void (*nullsub_14)();
extern void (*nullsub_15)();
char * getUnitRankString(CUnit *a1);
extern int (__thiscall*sub_42F440)(int *this_);
_DWORD * sub_42F480(int a1);
extern void * (*sub_42F4C0)();
extern signed (*AllocAIPathPool)();
extern void (*nullsub_16)();
struct_path_related * createUnitPathFromPathCreate(struct_a1_1 *a1);
extern void (*sub_42F600)();
extern unsigned (__stdcall*sub_42F650)(CUnit *a1, Position a2, Position a3);
signed unitSubtractPathDelayAndCheck(CUnit *a1);
void unitSetPathDelay(CUnit *a1, char a2);
void reAssignPath(CUnit *a1);
struct_a1_1 * assignPathCreateFromUnitPath(struct_a1_1 *result, struct_path_related *a2, CUnit *a3);
struct_path_related * getAllocatedPathSingleStep(CUnit *a1, int a2, int a3);
unsigned getUnitDistanceToPathEnd(CUnit *a1, struct_a1_1 *a2);
signed isLargePath(CUnit *a1, points a2);
BOOL unitHasPathToDestOnGround(CUnit *a1, __int16 a2, __int16 a3);
unsigned unitGetImaginaryPathDistanceToPosition(__int16 a1, CUnit *a2, int a3);
signed sub_42FC10(CUnit *unit, Position a2, points *a3);
signed UMAnotherPath(CUnit *unit, points p);
extern CUnit ** (*sub_42FE90)();
extern int (*sub_42FEC0)();
extern void (__cdecl*resetUnitBoundsLists_GetMaxUnitTypeSize)();
CUnit ** getAllUnitsInBounds(rect *a1);
CUnit ** getUnitsAtPoint(__int16 a1, int a2);
extern s32 * (__thiscall*UnitRelManyFinderUMScoutPath)(CUnit *this_, __int16 a2, __int16 a3);
s32 * unkUnitRelManyFinderEx(__int16 a1, int a2, int a3);
extern CUnit ** (__stdcall*FindAllUnits)(Box16 *box);
CUnit ** findAllUnitsInBoundsUsing(rect *a1, int (__fastcall *a2)(_DWORD, _DWORD), int a3);
extern CUnit ** (__stdcall*getAllUnitsInRegion)(unsigned __int16 a1);
extern int * (__stdcall*getClosestReachableUnit)(CUnit *a1, signed __int16 a2, __int16 a3);
unsigned sub_430D30(CUnit *a1, CUnit *a2);
extern unsigned (__thiscall*sub_430E50)(CUnit *this_, __int16 a2, __int16 a3);
extern BOOL (__thiscall*isTargetWithinMinRange)(CUnit *this_, unsigned int min_range, CUnit *target);
bool ** GetClickableUnits(int a1, __int16 a2);
int sub_4310F0(int a1);
int sub_431100(int a1);
UnitType sub_431110(signed int unitType);
unsigned adjust_unit_strength(UnitType unit_type, unsigned int strength);
int sub_431200(WeaponType weapon_type);
extern int (*sub_431230)();
extern int (*sub_431240)();
extern int (*sub_431250)();
unsigned calculate_strength(UnitType unit_type, WeaponType weapon_type);
int calculate_ground_strength(UnitType unit_type);
int calculate_air_strength(UnitType unit_type);
extern void (*calculate_unit_strengths)(void);
Position sub_4314F0(CUnit *a1, int a2);
BOOL sub_431550(int a1, CUnit *a2);
int BeefUnitStrength_AirOrGround(unsigned int a1, int a2, int a3);
int getUnitStrength_AirOrGround(int a1, CUnit *a2);
int GetAlteredUnitStrength(int a1, CUnit *a2);
unsigned getUnitStrength(CUnit *a1, int a2);
unsigned sub_4318B0(CUnit *a1);
int GetEnemyStrength(__int16 a1, int a2, int a3);
CUnit * GetStrongestUnitInX_AirOrGround(int *a1, int a2, CUnit *a3, int a4, int a5);
extern int (__stdcall*sub_431CE0)(int a1);
int GetEnemyAirStrength(__int16 a1, int a2);
CUnit * GetStrongestUnitInRegion_AirOrGround(CUnit *a1, int a2);
CUnit * AI_GetStrongestGroundUnit(CUnit *a1);
CUnit * AI_GetStrongestAirUnit(CUnit *a1);
extern int (*sub_431F30)();
extern int (__fastcall*AI_GetExpansionCount)(int a1);
extern int (__stdcall*sub_431F60)(int a1);
int AI_BuildAndTechAndUpgrade(int a1, char a2, char a3, UnitType unit_type, char a5, char a6);
signed sub_431FF0(int a1, int a2, int a3);
int * CreateTown(int a1, __int16 a2, __int16 a3);
extern int (*nullsub_17)();
int getPlayerDefaultRefineryUnitType(int playerID);
int sub_432100(int a1);
int getDefaultWorkerUnitType(int a1);
int sub_432150(int a1);
extern int (*sub_432170)();
extern int (*AISomethingToID)();
int sub_4321A0(int result);
extern int (*sub_4321B0)();
extern int (*sub_4321D0)();
extern int (*sub_4321F0)();
extern int (*nullsub_18)();
extern int (*nullsub_19)();
extern int (*sub_432240)();
extern unsigned (__stdcall*AI_RegionSize)(int a1, unsigned int a2);
extern int (__fastcall*AI_getNumOwnedMineralClusters)(int a1);
BOOL playerHasAverageResources(int a1);
extern int (__fastcall*sub_4323B0)(UnitType unit_type);
int sub_4323C0(char a1, char a2, __int16 a3, int a4);
unsigned AI_Build(unsigned int result, char a2, unsigned int unit_type, int a4, char a5);
extern int (__stdcall*sub_432400)(char a1, int a2);
extern int (*isUnitOwnedBy)();
extern int (__thiscall*sub_432430)(_DWORD a1);
extern int (*sub_432450)();
signed isUnitTypeRaceUnitRace(unsigned __int16 a1, CUnit *a2);
extern int (*sub_4324E0)();
extern int (*sub_432500)();
signed sub_432530(int a1, int a2);
int sub_4325A0(int a1, int a2);
extern void (__cdecl*initAITownMgr)();
extern char (__stdcall*sub_4326A0)(int a1);
int AI_getVespeneType(CUnit *a1, int player);
extern int (__thiscall*AI_Unassign)(CUnit *this_);
BOOL sub_4327D0(CUnit *a1);
int unpackTownMgr_02_Unit_Data(_DWORD *a1);
extern unsigned (__stdcall*sub_4328E0)(int a1);
extern int (*sub_4329F0)();
int sub_432A30(int a1);
extern int (__fastcall*AI_getClosestEnemyRace)(int a1, int a2);
signed RegionContainsWorkerOrBuilding(__int16 a1, int a2);
bool AI_CanBuild(CUnit *a1, UnitType unit_type);
CUnit * GetAIRefinery(int a1, int a2, int a3);
int LoadAITownData(FILE *a1);
extern int (__stdcall*WriteAITownData)(FILE *a1);
signed isGroundMap(__int16 a1, __int16 a2, int a3);
int getGuardXY(int a1, int a2, _DWORD *a3, _DWORD *a4);
int AI_WaitBuild(int a1, UnitType unit_type, int a3);
signed sub_433410(int a1);
int sub_433470(int a1, int a2);
signed sub_4335F0(int a1, int a2, CUnit *a3, signed int a4);
int AI_FinishUnit(int a1, CUnit *a2);
char sub_433660(int a1);
extern char (__stdcall*sub_433730)(int a1);
extern BOOL (__stdcall*AI_UnitConstructionBehaviour)(int a1, CUnit *a2, int a3);
void AI_AutoHarvest(CUnit *a1, CUnit *a2, CUnit *a3);
extern signed (__stdcall*AI_SCVRepairController)(CUnit *a1, int a2);
char AI_AddUnitToTown(CUnit *a1, int a2);
char sub_433FE0(CUnit *a1);
char sub_434020(CUnit *a1);
int * AI_StartAreaTown(int a1, int a2, int a3);
int * AI_StartTown(int a1, __int16 a2, __int16 a3, int a4);
signed sub_434330(int a1);
char sub_434450(CUnit *a1);
extern _DWORD * (__stdcall*sub_434480)(int a1, int a2, int a3);
void AI_ResearchBehaviour(CUnit *a1, int player_id);
void AI_UpgradeBehaviour(CUnit *a1, int player_id);
signed AI_TrainBehaviour(CUnit *a1, int a2, int a3);
int sub_4347E0(int a1);
extern signed (__stdcall*AttendTownNeeds)(int a1, CUnit *a2);
signed DetachUnitTaskFromTown(CUnit *a1, int a2);
void AI_NukeSiloBehaviour(CUnit *a1);
void AI_OverlordBehaviour(CUnit *a1);
AiCaptain * AI_ConstructAddonBehaviour(int a1, CUnit *a2, int a3);
signed AI_MorphBehaviour(int a1, int a2, CUnit *a3, int a4);
signed AI_MakeDetectorBehaviour(CUnit *a1, int a2);
extern void (__stdcall*AIWorkerController)(CUnit *a1);
extern char (__stdcall*AI_GetOldPeons)(int a1, int a2);
char AI_TrainingWorker(CUnit *a1, CUnit *a2);
__int16 AI_TrainingOverlord(CUnit *a1, CUnit *a2);
void sub_4358D0(CUnit *result);
char sub_435900(s32 a1, int a2);
extern unsigned (*AI_PanicControl)();
void AI_TrainingNormal(CUnit *a1, CUnit *a2);
extern signed (__stdcall*AI_PlanDoMergeMorph)(int a1, CUnit *unit, int a3);
extern signed (__thiscall*AI_PerformTask)(CUnit *this_);
extern char (__stdcall*AI_UpgradesFinished)(int a1);
int sub_436880(int result, int a2, char a3);
extern void (*sub_4368B0)();
extern _DWORD (__stdcall*sub_4368C0)(_DWORD a1, _DWORD a2);
BOOL sub_4368F0(int a1, int a2);
BOOL OrderIsSpell(Order order);
extern int (__thiscall*DecCaptainScalerCounterValue)(_DWORD a1);
extern int (*sub_4369D0)();
BOOL sub_4369F0(AiCaptain *a1);
int sub_436A10(int result);
extern unsigned (__thiscall*sub_436A20)(void *this_);
extern void (__cdecl*freeAICaptains)();
int allocateAICaptains(int a1);
extern int (*nullsub_20)();
int Unit__hasNoCaptainType(CUnit *a1);
extern _DWORD (__stdcall*AI_getZergAirScore)(char a1);
extern _DWORD (__stdcall*AI_getZergGroundScore)(char a1);
extern _DWORD (__stdcall*AI_getTerranInfantryScore)(char a1);
extern BOOL (__fastcall*AI_WaitTurrets)(int a1);
extern BOOL (__fastcall*AI_WaitBunkers)(int a1);
extern signed (__stdcall*AISomethingHasOwnershipOfRegion)(int a1, unsigned __int16 a2);
extern signed (__fastcall*AI_isAttacking)(int a1);
_BYTE * PopulateRgnsWithSecondaryEnemyNeighbors(const void *a1);
signed PopulateRgnsWithNeighbors(const void *a1);
AiCaptain * sub_436E10(int a1, int a2);
int UNIT_FinishedSummon(CUnit *a1);
BOOL IsMilitaryCaptain(CUnit *unit, int a2);
StatusFlags sub_436EB0(AiCaptain *a1);
extern BOOL (__thiscall*loadedProc_UnitIsFirebat)(CUnit *this_);
extern signed (__fastcall*sub_436F00)(int a1);
extern AiCaptain * (*j_freeAICaptains)();
extern int (__stdcall*AssignCaptainToSlowestUnit)(AiCaptain *a1);
int isUnknownSpellcaster(int a1);
extern int (__fastcall*RecalcRegionPriorities)(int a1, int a2, int a3);
extern signed (__fastcall*IsRegionANeighborOfRegionB)(int a1, int a2, unsigned __int16 a3);
int sub_4371D0(int result, AiCaptain *a2);
extern int (*sub_437230)();
extern int (__thiscall*playerHasTransports)(_DWORD a1);
extern AiCaptain * (__fastcall*sub_437290)(unsigned int a1);
extern int (__thiscall*sub_4372E0)(unsigned __int8 *this_);
signed AI_GetDarkTemplarsForSummon(int a1, int a2, int a3);
extern signed (__stdcall*AI_GetHighTemplarsForSummon)(int a1, int a2, int a3);
CUnit * AI_GetHydraliskForMorph(int a1);
CUnit * AI_GetMutaliskForMorph(int a1);
signed GetTurretPosition(int a1, int a2);
signed GetBunkerPosition(int a1, Position *a2);
int populateAttackRegions(int a1, int a2, int a3, int a4, int a5, int a6, int a7);
CUnit * sub_4379B0(int a1, int a2, int a3, int a4);
extern void (__stdcall*InitRegionCaptains)(int a1);
extern int (__thiscall*isCaptainTrackingNonCritter)(_DWORD a1);
BOOL isImportantRegionAccessible(unsigned int a1, int a2, int a3);
extern signed (__fastcall*sub_437F20)(int a1, int a2);
extern unsigned (__stdcall*sub_438050)(AiCaptain *a1, int a2, int a3);
extern int (__thiscall*isAIControllerNotABuilding)(CUnit *this_);
extern int (*sub_438200)();
int packAIPathingData(int a1);
int sub_4382C0(int a1, int a2, int a3);
extern int (__thiscall*sub_4383B0)(CUnit *this_);
extern int (__thiscall*sub_4383E0)(CUnit *this_);
extern signed (__fastcall*sub_438410)(int a1, CUnit *a2);
extern int (__thiscall*sub_438470)(CUnit *this_);
int isUnitTypeFoundInRegion(unsigned __int16 a1, int a2, int a3);
extern u8 (__stdcall*AI_PatrolController)(CUnit *a1, int a2, int *a3);
unsigned AI_BuildTurrets(int a1);
unsigned AI_BuildBunkers(int a1);
BOOL sub_438910(CUnit *a1);
extern unsigned (__stdcall*getBestAttackRegion_LeastEnemyStrength)(int a1, unsigned int a2, unsigned int *a3);
UnitPrototypeFlags PopulateRgnsWithOwn(int a1, UnitPrototypeFlags a2);
AiCaptain * getAIRegionInfoFromUnitLocation(CUnit *a1);
extern int (__stdcall*sub_438C20)(CUnit *a1);
extern int (__thiscall*sub_438E10)(_DWORD a1);
BOOL sub_438E70(CUnit *a1, signed int y, signed int x);
signed sub_438EF0(__int16 a1, int a2);
extern int (__fastcall*CB_AICaptainStrengthIterator)(CUnit *a1, CUnit *a2);
void getAITownCapabilities(AiCaptain *a1, int a2, int a3, int a4);
extern BOOL (__fastcall*sub_439050)(int a1, int a2);
char AI_AssignCaptain(int a1, AiCaptain *a2);
signed LoadAIPathingCaptainData(FILE *a1);
extern int (__stdcall*WriteAIPathCaptainData)(FILE *a1);
extern unsigned (__stdcall*AI_Implode)(int a1);
extern BOOL (__fastcall*AI_EnterTransportProc)(CUnit *a1, CUnit *a2);
extern unsigned (__stdcall*AI_AttackClear)(int a1);
BOOL sub_439550(CUnit *a1);
extern char (__stdcall*AI_ClearCombatData)(int a1, int a2);
u8 AI_ValueArea(signed int a1, signed int a2, int a3);
extern signed (__stdcall*AI_GetSpiderMineLocations)(CUnit *a1, int a2, int a3);
extern signed (__fastcall*AssignMilitaryToRegion)(int a1, int a2, int a3, int a4, int a5, int a6, int a7);
extern void (__stdcall*PopulateRgnsWithEnemy)(int a1, int a2);
extern signed (__stdcall*AI_CaptExpand)(int a1, signed int a2);
signed sub_439D50(CUnit *a1);
extern signed (__stdcall*ClearUnitFromGlobalAIEntry)(CUnit *a1, int a2);
extern unsigned (__stdcall*AI_HelpIfTrouble)(int a1);
extern char (__stdcall*AI_MakeGuard)(int a1, CUnit *a2);
u8 sub_43A1D0(int a1, int a2, int a3);
extern int (*sub_43A250)();
signed sub_43A2E0(int a1);
unsigned sub_43A390(AiCaptain *a1);
extern CUnit * (__stdcall*sub_43A510)(AiCaptain *a1);
extern signed (__stdcall*sub_43A790)(AiCaptain *a1, AiCaptain *a2);
extern CUnit * (__stdcall*sub_43A8F0)(int a1, signed int y, signed int x);
signed sub_43AA10(CUnit *a1);
extern char (__stdcall*AI_BuildTurret)(int a1, int a2);
extern BOOL (__stdcall*AI_AttackManager)(int a1, int a2, int a3, int a4, int a5);
CUnit * sub_43AD60(CUnit *a1, CUnit *a2);
extern int (__stdcall*sub_43ADA0)(CUnit *a1, CUnit *a2, int a3);
signed AI_Rush(int a1, int a2, int a3, int a4);
signed AI_EvalHarass(int a1, int a2, int a3);
BOOL sub_43B6D0(int unit_type, CUnit *a2, int a3);
CUnit * sub_43B790(CUnit *a1, CUnit *a2, CUnit *a3);
void AI_orderUnitCloaking(CUnit *a1);
extern char (__thiscall*sub_43B9E0)(void *this_, int a2);
extern void * (__stdcall*sub_43BAC0)(AiCaptain *a1, unsigned int a2, int a3, int a4, int a5, int a6);
extern _DWORD * (__stdcall*sub_43BC40)(AiCaptain *a1, int a2, int a3, int a4, int a5);
extern int (__stdcall*AI_OrderAllUnitsInLocation)(int a1, int a2, int a3, Order a4);
int AI_ExitTransport(int a1, int a2);
int AI_EnterTransport(int a1, int playerID);
void sub_43C170(CUnit *a1);
void AI_orderLurkerBurrow(CUnit *a1);
int AI_EnterBunker(int a1, int a2);
int AI_MakePatrol(int a1, int a2);
signed AI_Defender_Bunker_Behaviour(__int16 a1, CUnit *a2);
void AI_RespondToCloaked(CUnit *a1, CUnit *a2);
void IssueCaptainUnitOrder(int order_id, CUnit *a2);
signed sub_43CA30(CUnit *a1);
signed sub_43CB00(CUnit *a1);
CUnit * sub_43CC40(AiCaptain *a1);
void prepSuicide(CUnit *a1);
extern char (__stdcall*AI_CaptainUpdate_Type3)(AiCaptain *a1);
extern void (__stdcall*AI_OrderToDestination)(CUnit *a1, signed int order, int a3, int a4);
void AI_ManageMilitaryController(CUnit *a1);
char sub_43DA20(AiCaptain *a1, CUnit *a2, int a3);
char sub_43DB10(CUnit *a1, signed int edi0, int a3);
signed AI_TransportAction(CUnit *a1);
void * sub_43DD20(AiCaptain *a1);
extern int (__fastcall*sub_43DDE0)(CUnit *a1, AiCaptain *a2);
signed sub_43DE40(AiCaptain *a1);
extern void (__stdcall*AIUnloading)(int a1);
void AI_SendSuicide(char a1, int a2);
extern char (__stdcall*AI_TrainingBroodling)(CUnit *a1, CUnit *a2);
signed sub_43E2E0(AiCaptain *a1, int a2, unsigned int a3);
signed sub_43E400(CUnit *a1, CUnit *a2);
CUnit * sub_43E580(AiCaptain *a1, AiCaptain *a2, CUnit *a3, int a4, int a5);
unsigned sub_43E670(AiCaptain *a1);
int sub_43E760(unsigned __int16 *a1, AiCaptain *a2, int a3);
extern void (*AI_SuicideControl)();
extern char (__stdcall*AI_BuildBunker)(int a1, int a2);
extern char (__stdcall*AI_CaptainUpdate_Military12)(AiCaptain *a1);
extern char (__stdcall*AI_CaptainUpdate_Military89)(AiCaptain *a1);
extern char (__stdcall*AI_CaptainUpdate_Type7)(AiCaptain *a1);
unsigned sub_43F100(AiCaptain *a1, WORD *a2, int a3, unsigned int a4);
extern void (__fastcall*WpnHit)(CUnit *a1, CUnit *a2, int unknown_flag, int a4);
extern unsigned (__stdcall*sub_43F990)(int a1);
void AI_CaptainTownUpdate(int a1, int player_id);
extern int (__fastcall*compareGeneralTarget)(CUnit *a1, CUnit *a2);
extern void (__cdecl*AIScriptLoopEnd)();
void interceptorTargets(CUnit *unit);
void getMaelstromTarget(CUnit *unit);
void getTargetSomething(CUnit *unit);
extern void (__stdcall*AI_AttackUnit)(CUnit *a1);
unsigned SetAttackPriorityUnit(int a1, int a2);
extern BOOL (__fastcall*isDisabledAndOwnedProc)(CUnit *a1, int unit_type);
int RndGetAtkPriorityUnit(int a1);
extern BOOL (__fastcall*AIUnitCanEnterBunkerProc)(CUnit *a1, CUnit *a2);
extern int (__stdcall*sub_440240)(int a1, int a2, int a3);
CUnit * IterateAllScannerSweeps(int (__fastcall *a1)(CUnit *a1, int a2), int a2);
extern int (__fastcall*compareUnitToUnitTypeProc)(CUnit *a1, void *a2);
extern BOOL (__fastcall*GetBestSCVForRepairProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*buildingCanConnectToAddonProc)(CUnit *a1, CUnit *a2);
extern int (__thiscall*sub_440410)(CUnit *this_);
extern CUnit * (__stdcall*GetDisabledUnitInRange)(int unit_type, int a2);
void sub_440480(CUnit *a1);
CUnit * connectAddonCheck(CUnit *a1);
void GetStaticMinRange(CUnit *a1);
extern CUnit * (__stdcall*GetAttackTargetFromPriority)(CUnit *a1, int a2);
CUnit * sub_440720(Box16 *a1, unsigned __int16 a2);
CUnit * sub_440740(CUnit *a1);
CUnit * AI_AssignBestUnitRepairSCV(CUnit *unit);
extern bool (__fastcall*AI_RecallRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_RestorationRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_RestorationRequirementsProc2)(CUnit *a1, CUnit *a2);
extern int (__fastcall*IsUnitVisibleIteratorProc)(CUnit *a1, int a2);
extern int (__fastcall*powerupCanBePickedUpProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*isUnitTypeOwnerAllied)(CUnit *unit, UnitType unit_type);
extern CUnit * (__fastcall*sub_4409D0)(int a1, int a2);
extern int (__fastcall*AI_targetEnemyProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*unitShieldsClumpInAreaAccumulatorProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*unitEnergyClumpInAreaAccumulatorProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*getEnemyClumpValueProc)(CUnit *a1, CUnit *a2);
CUnit * IsUnitInUnsafeRegion(CUnit *a1);
CUnit * AI_AssignBestRestorationTarget2(int a1, CUnit *a2);
CUnit * AI_AssignBestRestorationTarget(CUnit *a1);
extern _DWORD (__stdcall*isCurrentOrderTargetUnitAllied)(_DWORD a1);
extern int (__fastcall*AIEnemyOrganicUnitHPAccumulatorProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AIAllyUnitHPAccumulatorProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AIEnemyUnitHPAccumulatorProc)(CUnit *a1, CUnit *a2);
signed AI_TargetUnitIsWorthHitting(CUnit *a1, CUnit *a2);
extern int (__fastcall*SpiderMine_EnemyProc)(CUnit *a1, CUnit *a2);
extern BOOL (__thiscall*sub_440F10)(CUnit *a1);
extern BOOL (__fastcall*sub_440F50)(CUnit *a1, __int16 a2);
extern int (__thiscall*sub_440F80)(CUnit *this_);
extern int (__fastcall*returnCargoToBestDepotProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*FindNearestEnemyAndClumpProc)(CUnit *a1, CUnit *a2);
CUnit * checkArbiterCloakingRange(CUnit *a1, unsigned __int16 a2);
int RevealUnits(CUnit *a1);
extern int (__fastcall*Medic_HealTargetProc)(CUnit *a1, CUnit *a2);
CUnit * SpiderMine_AcquireTarget(CUnit *unit);
extern int (__fastcall*AIsiegeTankCheckUnitCanBeAttackedProc)(CUnit *a1, CUnit *a2);
CUnit * FindBestReturnCargoTarget(CUnit *a1);
CUnit * AI_AcquireNearestEnemyTarget(CUnit *a1);
extern int (__fastcall*AI_EMPShieldRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_EMPEnergyRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_IrradiateRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_LockdownRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_NukeRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_EnsnareRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_PlagueRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*canHitUnit)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_PsiStormRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_StasisRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_OpticalFlareRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_ParasiteRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_MindControlRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_FeedbackRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_MaelstromRequirementsProc)(CUnit *a1, CUnit *a2);
extern signed (__fastcall*AI_DisruptionWebRequirementsProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*AI_BroodlingRequirementsProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*AI_YamatoRequirementsProc)(CUnit *a1, CUnit *a2);
int unitGetAttackPriorityFor(CUnit *a1, CUnit *a2);
int sub_442210(CUnit *a1, CUnit *a2);
CUnit * AI_FindBestEnemyClump(CUnit *a1, int a2, int a3);
extern char (__stdcall*MedicHeal_TargetAcquire)(CUnit *a1);
extern BOOL (__fastcall*AI_SiegedTankCanAttackUnitNear)(int a1, CUnit *a2);
extern BOOL (__fastcall*AI_SCVBestRepairProc)(CUnit *a1, CUnit *a2);
CUnit * AI_AssignBestEMPTarget(CUnit *a1, int a2);
extern int (__fastcall*AI_DefensiveMatrixRequirementsProc)(CUnit *a1, CUnit *a2);
CUnit * AI_AssignBestIrradiateTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestLockdownTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestNukeTarget(CUnit *a1);
CUnit * AI_AssignBestEnsnareTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestPlagueTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestDarkSwarmTarget(int a1, CUnit *a2);
extern BOOL (__fastcall*AI_HallucinationRequirementsProc)(CUnit *a1, CUnit *a2);
CUnit * AI_AssignBestPsiStormTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestStasisTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestOpticalFlareTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestParasiteTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestBroodlingTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestMindControlTarget(CUnit *a1);
CUnit * AI_AssignBestFeedbackTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestMaelstromTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestDisruptionWebTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestYamatoTarget(int a1, CUnit *a2);
extern int (__fastcall*getStandardAttackTargetProc)(CUnit *a1, CUnit *a2);
extern BOOL (__fastcall*findClosestMineralPatchproc)(CUnit *a1, CUnit *a2);
extern CUnit * (__thiscall*getNextNearestResource)(CUnit *this_, int a2);
int getRandomAttackTarget(CUnit *unit);
CUnit * ChooseAttackTarget(CUnit *a1);
CUnit * AI_SCV_FindBestRepairUnit(CUnit *a1);
CUnit * AI_AssignBestDefensiveMatrixTarget(int a1, CUnit *a2);
CUnit * AI_AssignBestHallucinationProc(int a1, CUnit *a2);
extern BOOL (__fastcall*findClosestMineralPatchprocEx)(CUnit *a1, CUnit *a2);
CUnit * getNextNearestMineralsEx(int a1, int a2, int a3);
int j_getRandomAttackTarget(CUnit *a1, CUnit *a2);
void CheckUnitVisibility(CUnit *a1);
extern int (*sub_443410)();
extern int (*sub_443440)();
extern int (__fastcall*sub_443470)(int a1, int a2);
extern int (__fastcall*sub_4434A0)(int a1, int a2);
baseLocation * sub_4434E0(unsigned int a1);
extern int (*sub_443500)();
extern int (*sub_443520)();
extern int (*sub_443530)();
extern int (*sub_443540)();
extern int (*sub_443550)();
extern int (*sub_443560)();
extern int (*sub_443570)();
extern int (__thiscall*getNextEmptyBaseLocation)(unsigned int *this_);
extern int (*sub_4435D0)();
extern int (*sub_4435E0)();
extern int (*nullsub_21)();
extern _DWORD (__stdcall*trimPlacement)(Position a1);
extern unsigned (__stdcall*excludePlacementSpotsDifferentHeight)(const void *a1, Position y);
signed reserveOnPlacemap(int a1, int a2, unsigned int a3, unsigned int a4, int a5, unsigned __int16 a6, int a7, Position a8);
extern _DWORD (__stdcall*excludeNonAIOwnedSpots)(_DWORD a1, _DWORD a2);
extern int (__stdcall*excludePlacementSpotsOutsideRegion)(int a1, Position position);
extern int (__thiscall*AI_GetNumWorkersForMinerals)(_DWORD a1);
extern int (__fastcall*AI_AlliesWatchInit)(_DWORD a1, _DWORD a2);
unsigned getClosestBaseFromStartLocation(int a1, int a2, int y);
extern unsigned (__stdcall*reserveTurretPlacementPosition)(const void *a1, int a2, Position a3, __int16 a4, unsigned int a5);
extern unsigned (__stdcall*excludeAddonBuildLocations)(unsigned __int16 a1, const void *a2, int a3, Position a4);
extern unsigned (__stdcall*reserveBuildingOnPlacemap)(unsigned __int16 a1, int a2, Position a3);
signed reserveStaticBuildingOnPlacemap(CUnit *a1, int a2, int a3, Position a4, int a5);
signed isRegionTraversable(int a1, int a2, int a3);
extern int (__stdcall*BWFXN_getTileDistance)(int x, int y, int x2, int y2);
extern signed (__stdcall*getBunkerPlacementRegion)(int a1, int a2);
int AI_GetNumDesiredWorkersForBase(unsigned int a1, int a2);
extern unsigned (__stdcall*sub_444460)(int a1, signed int *a2, signed int *a3, signed int *a4);
extern CUnit * (__fastcall*sub_4445E0)(int a1, int a2);
extern __int16 (__stdcall*GetSecondHatcheryBuildLocation)(int a1, int a2, int a3);
CUnit * sub_4447D0(int a1, CUnit *a2, int a3, int a4);
extern int (__stdcall*sub_444850)(int a1, int a2, int a3, int a4, int a5, int a6);
extern _DWORD (__stdcall*reservePylonPlacementPosition)(_DWORD a1, _DWORD a2, _DWORD a3);
extern unsigned (__thiscall*reservePlayerUnitsOnPlacement)(void *this_, const void *a2, int a3, Position a4);
extern void (__fastcall*reserveStructureSpacing)(int a1, int a2, const void *a3, int a4, Position a5);
extern int (__thiscall*excludePlacementSpotsTooFar)(char *this_, int a2, unsigned int a3);
extern CUnit * (__stdcall*DoAreaFixupsForEnemy)(int a1, unsigned __int16 a2, unsigned int a3);
unsigned compareBases(int a1, int a2, int a3, int a4, int a5);
int sub_4450E0(int a1, int a2, int a3, int a4, int a5);
extern int (*WriteAIBaseData)(void);
BOOL ReadAIBaseData(FILE *a1);
extern void (__fastcall*ReassignAllCaptainsInRegions)(unsigned int a1, int a2, unsigned int a3, int a4, unsigned int a5);
int getNextBaseLocationID(int a1, int a2, int a3);
extern char (*RecountBaseLocationStats)();
BOOL sub_445820(int y, CUnit *a2, int x, int a4, int a5);
signed sub_445930(CUnit *a1);
void sub_445AA0(signed int a1, signed int a2, unsigned int a3, unsigned int a4);
extern int (__stdcall*sub_445B00)(int a1, int a2, int a3);
extern signed (__stdcall*sub_445BA0)(int a1, int a2, int a3);
int getBuildPlacementInfo(unsigned int a1, int a2, int a3, int a4, Position a5);
extern void (__stdcall*sub_445E80)(int a1, int a2);
unsigned AIReservePlacementData(void *unit_type, char *a2, int a3, Position a4, unsigned int a5);
extern void (*sub_446350)();
extern signed (__thiscall*AIManageBuildingPlacement)(CUnit *this_, signed int a2, Position a3, int a4, unsigned int a5);
extern int (__thiscall*AIBuildAtLocation)(signed int a1, Position a2, int a3);
extern _DWORD (__stdcall*_AIBuildAtLocation)(_DWORD a1, _DWORD a2);
extern int (*sub_446AE0)();
extern int (__thiscall*AI_SetGenCmd)(_DWORD a1);
extern int * (__fastcall*AI_GiveMoney)(int a1);
extern int (__stdcall*sub_446B80)(char a1);
extern int (*AI_SetTargetExpansion_Off_SubAttacks)(void);
extern int (*sub_446BC0)();
extern int (*sub_446BE0)();
extern int (__stdcall*sub_446C10)(char a1);
extern int (*sub_446C30)();
extern int (*sub_446C50)();
extern int (*sub_446C70)();
extern int (*sub_446C90)();
extern int (*sub_446CB0)();
extern int (*sub_446CD0)();
extern int (*sub_446CF0)();
extern int (__stdcall*sub_446D00)(__int16 a1);
extern int (*sub_446D20)();
extern int (__thiscall*AI_Creep)(_DWORD a1);
extern int (*sub_446D60)();
extern int (*sub_446D70)();
extern int (*sub_446DB0)();
extern int (*sub_446DE0)();
extern int (*sub_446DF0)();
extern int (*sub_446E10)();
int sub_446E30(int a1);
bool IsNukeTimerReady(int player_id);
int sub_446E80(int a1);
extern int (__stdcall*sub_446EA0)(char a1);
extern int (*sub_446EC0)();
extern int (__stdcall*sub_446ED0)(__int16 a1);
extern int (*sub_446EF0)();
extern int (*sub_446F10)();
extern int (*sub_446F30)();
extern int (*sub_446F50)();
extern int (*sub_446F70)();
extern int (*sub_446F90)();
extern int (*sub_446FA0)();
extern int (*sub_446FC0)();
extern int (*sub_446FE0)();
extern int (*sub_447000)();
extern int (__stdcall*sub_447010)(char a1);
extern int (*sub_447030)();
u16 * AIClearUnitTypeFromAttackGroup(int a1, int a2);
extern u32 (__fastcall*AI_AttackTimerDecrement)(int a1);
BOOL sub_4470D0(int a1);
int sub_447100(int a1);
extern int (*sub_447120)();
extern int (*sub_447130)();
extern int (*sub_447140)();
extern int (*sub_447150)();
extern int (*sub_447170)();
extern int (*sub_447180)();
int sub_4471A0(int result, int a2);
int sub_4471E0(int result, __int16 a2, int a3);
extern int (*sub_447220)();
unsigned AI_AttackAdd(unsigned int result, unsigned int a2, unsigned int a3);
extern int (*sub_4472A0)();
extern int (*sub_4472C0)();
extern int (*sub_4472F0)();
extern int (*sub_447300)();
extern int (*sub_447310)();
extern int (*sub_447320)();
extern int (*sub_447330)();
extern int (*sub_447340)();
extern int (*sub_447350)();
extern int (*sub_447360)();
BOOL AI_HasNoDefenseBuild(int a1);
extern int (*AI_DefenseClear_aa)(void);
extern int (*AI_DefenseClear_ga)(void);
extern int (*AI_DefenseClear_ag)(void);
extern int (*AI_DefenseClear_gg)(void);
void AI_DefenseSet(_WORD *a1, unsigned int a2, UnitType a3);
extern BOOL (__fastcall*sub_447530)(int a1);
extern int (*sub_447570)();
extern int (*sub_447580)();
int getAIRequestedBuildType(int a1);
s32 sub_4475B0(int a1, int a2, s32 a3);
int sub_447650(int a1);
extern int (*sub_447670)();
extern void (__cdecl*initAIControllerData)();
s32 * UpdateTownPriorities(int a1);
int sub_447780(int a1, int a2, int a3);
extern int (*nullsub_22)();
void sub_4477C0(CUnit *a1);
BOOL sub_447810(CUnit *a1);
bool isAIAllowedToBuild(int player_id, UnitType unit_type);
extern int (*sub_447880)();
extern int (*sub_4478A0)();
extern int (*sub_4478C0)();
extern int (*sub_4478E0)();
extern int (*sub_447900)();
extern int (*sub_447920)();
extern int (*sub_447940)();
extern int (*sub_447960)();
char AI_MergeMorph(UnitType unit_type, int a2, char a3, char a4, int a5);
extern int (*nullsub_23)();
BOOL sub_447A70(CUnit *a1);
extern CUnit ** (__thiscall*sub_447AF0)(CUnit *this_);
char AIGetMultiCost(int a1, int a2, int a3, int a4, char a5, int arg_4);
void AI_HarassFactor(int a1, int a2);
extern void (__thiscall*AI_Reserve)(int a1, int a2);
int AI_ReserveCost(int a1, int a2, int a3);
extern signed (__stdcall*ReadAIBankerData)(FILE *a1);
extern int (__stdcall*WriteAIControllerData)(FILE *a1);
extern int (__stdcall*sub_448160)(int a1);
s32 * sub_4481A0(int a1);
s32 * sub_4481B0(int a1);
char sub_4481C0(int a1, int eax0, int a3, int a4, char a5);
extern int (*sub_448220)();
signed ReadAIScriptControllerData(FILE *a1, unsigned __int16 a2);
char sub_4483D0(int a1, int a2, char a3);
char sub_448400(int a1, int a2, int a3, int a4);
extern _DWORD (__stdcall*AI_MergeMorphSwitch)(_DWORD a1);
extern _DWORD (__stdcall*sub_4485B0)(_DWORD a1, _DWORD a2);
u32 sub_448630(int a1, int eax0);
BOOL sub_4486C0(int a1, Tech a2);
BOOL sub_448750(int a1, unsigned __int8 a2);
extern BOOL (__fastcall*hasResourcesForUnit)(UnitType a1, int a2, int a3);
extern unsigned (*sub_448890)();
extern char (*AI_UpdateControllerTimers)();
BOOL sub_4489E0(HWND hDlg, void *a2);
int sub_4489F0(const CHAR *a1, HWND hWnd);
extern char * (*cleanBNImages)();
HFONT sub_448B20(HWND a1, int a2);
signed sub_448BB0(HWND a1, const CHAR *lpString);
extern int (__stdcall*GhettoErrorProc)(HWND a1, unsigned int Msg, HDC hdc, HWND hWnd);
extern char * (__stdcall*BattleErrorDialog)(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType);
extern void * (*sub_449030)();
extern int (*sub_449060)();
int GetBNIconImageRect(unsigned int a1, int a2);
extern void (__cdecl*LoadBNIcons)();
BOOL sub_449140(unsigned int a1, HWND hWnd, char *a3, int a4);
BOOL sub_449190(unsigned int eax0, int a2, int a3, int a4, int a5);
extern int (*sub_4491E0)();
int BNBlitToWindow(signed int a1, int arg0, int a3, int a4);
extern void (__cdecl*sub_449390)();
extern int (__stdcall*ParseSCIcon)(int a1, int arg4, int arg8);
int DrawChannelUser_maybe(int a1, int a2, int a3, LPCSTR lpString, int a5, char a6, int a7);
extern signed (__stdcall*BattleGetErrorString)(signed int a1, int a2, int a3, int a4, int a5, char *dest, size_t size_);
int GluBN_SetMapStatsInfo(const CHAR *a1, int a2, char a3, time_t a4, int a5);
extern int (__stdcall*BattleUpdateIcons)(int a1, int a2, LPCSTR lpString, int a4, int a5, char a6, int a7, int a8, int a9, COLORREF color);
extern LONG (__stdcall*GetObjectHeight)(HGDIOBJ h);
BOOL sub_44A070(const char *a1, HWND hDlg);
extern int (__stdcall*addItemProc)(MapDirEntry *a1, char *a2, MapDirEntryFlags a3);
extern void * (*sub_44A250)();
extern BOOL (*sub_44A2B0)();
signed openDlg_0(const CHAR *a1);
extern char (__stdcall*sub_44A380)(HWND hWnd);
LRESULT sub_44A3C0(HWND a1);
extern char (__stdcall*sub_44A410)(HWND hWnd);
LRESULT sub_44A450(HWND a1);
char sub_44A4A0(HWND a1);
LRESULT sub_44A510(HWND a1);
extern int (__stdcall*sub_44A560)(MapDirEntry *a1, char *a2, MapDirEntryFlags a3);
extern BOOL (__stdcall*_ShowWindow)(int a1, HWND hWnd, int a3);
LRESULT sub_44A5F0(HWND a1, LPARAM lParam);
HFONT updateFont(int *a1, int a2, HWND hWnd);
extern char * (*sub_44A730)();
LONG sub_44A7C0(LONG a1, LPARAM a2);
extern int (*sub_44A7E0)();
extern int (*sub_44A7F0)();
extern int (*sub_44A800)();
extern int (*sub_44A810)();
extern BOOL (__stdcall*sub_44A820)(HWND hWnd);
BOOL ApplyBNButtonGraphic(HWND a1);
extern int (__stdcall*sub_44AB40)(int a1, HWND a2, LPARAM a3);
extern LRESULT (__thiscall*sub_44ABB0)(void *this_, LPARAM lParam, int a3, int a4, int a5);
COLORREF sub_44AC00(int a1);
COLORREF BnetMapBrowse_DrawItem(int a1);
extern int (*sub_44AF10)();
LRESULT sub_44B030(HWND a1);
extern LPARAM (__stdcall*BNET_GetLastGameSpeed)(HWND hWnd);
BOOL BNET_SaveLastGameSpeed(HWND a1);
HWND InitBnetMapListBox(LPARAM listbox_handle, HWND hWnd);
extern unsigned (__stdcall*sub_44B240)(int a1, int a2, GotFileValues *a3, int a4);
ListNode * InitBnetCreateGameScreen(HWND parent_dlg, HWND hWnd);
BOOL InitBnetMapDialog(HWND a1);
char sub_44B7E0(HWND a1);
LRESULT sub_44B9C0(HWND a1, int a2, char a3);
void sub_44BA90(int a1);
void sub_44BAE0(HWND a1);
int sub_44BB20(HWND a1);
HWND DLG_GlueBNETClick2(HWND a1);
void sub_44C030(HWND a1, __int16 a2, char a3, char a4);
extern int (__stdcall*gluBN_CREATE_BROWSE_Proc)(HWND hDlg, UINT Msg, WPARAM wParam, LPARAM lParam);
BOOL gluBN_CREATE_BROWSE_Create(HWND a1, HWND hWnd);
signed gluBN_CREATE_LIST_Proc(HWND a1, unsigned int a2, HWND hWnd, int a4);
extern LPARAM (__stdcall*gluBN_CREATE_GAME_Proc)(HWND hDlg, UINT Msg, WPARAM wParam, LPARAM lParam);
extern signed (__stdcall*BattleMakeCreateGameDialog)(int a1, int a2, int a3, int a4, int a5, int a6);
extern void * (*BNProfileImageCleanup_0)();
extern void (__cdecl*BNProfileImageCreate)();
int sub_44CEB0(int *a1, int a2, int a3, HWND hWnd);
extern char * (*BNProfileImageCleanup)();
HANDLE CreateFontHandle(int a1);
int sub_44D050(int a1, int result, int ebx0, int edi0);
char sub_44D0C0(int a1, _BYTE **a2, void (__fastcall *a3)(const char *a1, LPARAM a2, HWND hDlg), int a4);
struc_500F60 * sub_44D100(_DWORD *a1);
extern char * (*sub_44D120)();
extern void (__fastcall*sub_44D140)(const char *a1, LPARAM a2, HWND a3);
extern int (__stdcall*SaveProfileChanges)(_DWORD a1, _DWORD a2, _DWORD a3, _DWORD a4);
BOOL sub_44D450(HWND a1);
extern void (__fastcall*sub_44D540)(const char *a1, LPARAM a2, HWND a3);
extern void * (*sub_44D5B0)();
int gluBN_PROFILE_LinkHandler(LPCSTR lpszString, HDC a2, int a3, int a4, int a5);
char sub_44D740(int a1);
LRESULT gluBN_PROFILE_Description(int a1);
HINSTANCE openWebWindow(const CHAR *a1, HWND hWnd);
int websiteLaunch(HWND a1, HWND a2);
HANDLE sub_44D9F0(int a1, int a2, int a3);
HANDLE sub_44DE70(int esi0, int a2, int a3);
HWND InitProfileDialog(HWND a1);
extern int (__stdcall*BattleDrawProfileInfo)(int a1, int a2, int a3, int a4, int a5, int a6, _BYTE **a7, int a8, int a9, int a10, int a11);
extern int (__stdcall*DLG_PROFILE_Proc)(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
extern BOOL (__stdcall*BattleMakeProfileDialog)(int a1, int a2, int a3, int a4, LPARAM a5, int a6, int a7, int a8, int a9, int a10);
extern int (*sub_44E400)();
void sub_44E420(CheatHashMaybe *result, CheatHashMaybe *a2);
extern int (*sub_44E4A0)(void);
extern int (*sub_44E510)();
unsigned makeHash(int a1, CheatHashRelated *a2, int a3);
char * sub_44E780(CheatHashRelated *a1, _WORD *a2);
CheatHashMaybe * sub_44E8D0(int *a1, int a2, int a3);
unsigned sub_44E950(int a1, int a2, int a3);
extern int (*sub_44E970)();
extern int (*sub_44E9B0)();
extern bool (__fastcall*gluPortrait_Update)(dialog *dlg, struct dlgEvent *evt);
extern int (*sub_44EA80)();
extern void (__cdecl*sub_44EAA0)();
int gluRdy_Portrait_Destroy(dialog *a1, dialog *a2);
extern void (__stdcall*sub_44EB90)(dialog *a1);
extern void (__stdcall*sub_44EC90)(dialog *a1);
void sub_44ED80(dialog *a1);
void StartUnitPortrait(dialog *dlg);
void sub_44EE40(dialog *a1, __int16 a2);
extern void (__fastcall*videoSpeakingPortraitLoop)(dialog *dlg, __int16 timer_id);
extern void (__thiscall*sub_44EED0)(dialog *this_, int a2);
void gluRdy_Portrait_InitChildren(dialog *a1);
extern int (__fastcall*gluRdy_Portrait)(dialog *dlg, dlgEvent *evt);
void LoadBriefingFrameImages(const char **highlighted_frame_paths, const char **normal_frame_paths);
extern void (*loadPortdataDAT)();
extern void (*sub_44F4C0)();
extern int (__thiscall*getHumansOnTeam)(int team);
extern int (*sub_44F590)();
extern int (__fastcall*LeagueStats)(const char *string2, int a2);
extern int (*sub_44F600)();
extern int (__fastcall*sub_44F640)(int a1, int a2);
int sub_44F680(int result, char a2);
extern int (*sub_44F6B0)();
extern int (*sub_44F6C0)();
extern BOOL (__stdcall*sub_44F6D0)(unsigned __int8 a1, unsigned __int8 a2);
Timer * resetPlayerLobbySlotInfo(dialog *a1);
extern int (*sub_44F7B0)();
int sub_44F860(int result);
_DWORD * slotUpdate(_DWORD *result, int a2);
int sub_44F8D0(int a1, _DWORD *a2, const char *a3, int a4, _DWORD *a5);
BOOL sub_44FA60(int a1, char a2);
extern void (__fastcall*sub_44FAC0)(dialog *dlg, int x, int y, rect *dst);
int sub_44FC20(int a1);
extern void (__stdcall*sub_44FCD0)(int a1, int a2);
extern void (__stdcall*LockLobbySlots)(dialog *a1);
extern void (__cdecl*sub_44FEE0)();
void sub_44FF20(dialog *a1);
void sub_44FF30(dialog *a1);
extern void (__fastcall*sub_44FF50)(int a1, int a2);
extern void (*getPlayerCaps)();
extern void (*sub_4500D0)();
extern int (*updateDownloadPercentages)();
void sub_4502F0(int a1);
extern void (__fastcall*sub_450330)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*sub_4503A0)(dialog *dlg, int x, int y, rect *dst);
int sub_4503D0(int result, int a2);
extern bool (__fastcall*sub_4503F0)(dialog *dlg, dlgEvent *evt);
void sub_450420(dialog *a1);
extern bool (__fastcall*sub_450470)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*sub_4504A0)(dialog *a1, dlgEvent *a2);
void sub_450560(dialog *a1, int a2);
void sub_450600(int a1, const char *a2, char a3);
void sub_450650(__int16 a1, LobbySlot *a2, int a3);
extern int (__stdcall*createOwnerDropdown)(int a1, __int16 a2);
extern int (__fastcall*sub_450A60)(dialog *dlg, dlgEvent *evt);
void CreateRaceDropdown(dialog *dlg, RaceId race);
void sub_450C00(dialog *a1);
signed playerOwnerDropdownCommands(dialog *a1, unsigned __int8 a2);
extern bool (__fastcall*playerOwnerDropdownLoop)(dialog *dlg, dlgEvent *evt);
extern char (__stdcall*CreatePlayerOwnerDropdown)(dialog *a1, int a2, int a3, int a4, char a5, int a6);
extern int (*sub_451370)();
void sub_4513A0(dialog *a1);
extern void (__stdcall*playerOwnerDropdownCreate2)(dialog *a1);
extern void (__stdcall*dropdownUpdate)(LobbySlot *a1, int a2, int a3, char a4, int a5, int a6);
void sub_451940(LobbySlot *a1, int a2, int a3, char a4);
void sub_451AA0(LobbySlot *a1, int a2, int a3, int a4);
extern void (__stdcall*sub_451D40)(int a1);
extern int (__stdcall*sub_451FB0)(int a1);
extern int (__stdcall*sub_452250)(dialog *lobby_dlg);
extern int (*sub_452300)();
extern int (*sub_452310)();
extern int (*MakeGamePublic)();
extern int (__thiscall*_swapPlayers)(_DWORD a1);
int sub_452370(unsigned __int8 a1, char a2);
int sub_4523C0(char a1);
int sub_452410(int a1, char a2);
extern int (__cdecl*_startGame)();
BOOL sub_452530(char *a1);
extern void (__thiscall*sub_452570)(signed int a1);
extern void (__cdecl*sub_452590)();
int sub_4525A0(int a1, int result);
extern void (__stdcall*sub_4525C0)(char a1);
signed BanPlayerSlot(int a1);
int CloseSlot(int a1);
int OpenSlot(int a1);
extern signed (__stdcall*MakeComputerSlot)(int a1);
extern BOOL (*sub_452900)();
signed j_JoinNetworkGame(GameData *a1);
signed Begin_BNET(Char4 network_provider_id);
extern int (*sub_452A70)();
extern int (*sub_452A90)();
extern int (__stdcall*sub_452AB0)(int a1);
char * GetBattleNetOption(char *a1, BNetGateways *a2);
extern int (*sub_452BA0)();
BNetGateways * sub_452BD0(int a1, BNetGateways *a2);
char * OverwriteBNGatewayList(BNetGateways *a1);
extern BNetGateways * (__stdcall*LoadDefaultGatewayList)(BNetGateways *a1);
char * sub_452EC0(BNetGateways *a1);
__int32 sub_452F40(BNetGateways *a1, char *a2);
extern BNetGateways * (__stdcall*sub_452F80)(BNetGateways *a1, int a2);
void LoadBNGatewayList(BNetGateways *a1);
extern void (__cdecl*sub_453150)();
extern void (__cdecl*sub_453170)();
extern unsigned (*sub_4531A0)();
char sub_4531F0(CUnit *a1);
void setRepulseAngle(CUnit *a1);
void removeRepulseTile(CUnit *result);
signed sub_453420(CUnit *a1);
int sub_4535A0(CUnit *a1, int a2);
extern int (__cdecl*sub_453680)(const void *a1, const void *a2);
extern int (__cdecl*sortRules)(const void *a1, const void *a2);
extern int (*sub_453700)();
unsigned sub_453710(int ebx0, int (__fastcall *a2)(unsigned int, int, int));
unsigned LeaderBoardSorting(int (__fastcall *ebx0)(unsigned int, int, int));
extern unsigned (*sub_453800)();
extern int (*sub_453890)();
extern void (*updateLeaderboardSorting)();
extern int (__stdcall*sub_453AE0)(int a1, int a2);
int SBigCompareToBinary(unsigned int a1, int a2);
int sub_453BA0(const void *a1, size_t a2, const void *a3, size_t size_);
void sha1(void *this_, BYTE *edi0, int a3, int a4);
extern BOOL (__stdcall*parseLocalSBigBuffer)(int a1, void *a2, size_t a3, const void *str, size_t size_, const void *a6, size_t a7);
extern void (__thiscall*refundTech75percent)(unsigned __int8 a1, Tech a2);
int sub_453D90(unsigned __int8 a1, Tech tech);
extern bool (__fastcall*UnitIsOfType)(CUnit *unit, UnitType unit_type);
u8 * Unit_RefundPartialTechnology(CUnit *a1);
void Unit_RefundFullTechnology(int a1, CUnit *a2, int a3);
int getUpgradeGasCost(unsigned __int8 a1, unsigned __int8 a2);
int getUpgradeOreCost(unsigned __int8 a1, unsigned __int8 a2);
extern int (*getUpgradeTimeCost)(void);
u8 getArmorCount(CUnit *a1);
extern bool (__fastcall*UnitIsUltralisk)(CUnit *unit, UnitType unit_type);
extern bool (__fastcall*UnitIsVulture)(CUnit *unit, UnitType unit_type);
extern int (__fastcall*refundUpgrade75percent)(unsigned __int8 a1, int a2, unsigned __int8 a3);
int refundUpgradeFull(unsigned __int8 a1, unsigned __int8 a2);
void Unit_RefundPartialUpgrade(CUnit *a1, int a2);
void Unit_RefundFullUpgrade(CUnit *a1);
void UpdateSpeed(CUnit *unit);
void sub_454360(CUnit *a1);
void ApplySpeedUpgradeFromUnitType(CUnit *a1);
void ApplySpeedUpgradeFromUpgradeType(__int16 a1, CUnit *unit);
void orders_Upgrade(CUnit *unit);
void orders_ResearchTech(CUnit *unit);
signed BeginUpgrade(unsigned __int8 a1, int a2);
signed BeginResearch(Tech tech, CUnit *a2);
extern int (*sub_454C80)();
BOOL UnitIsIrradiatable(CUnit *a1);
int sub_454CD0(int a1);
void sub_454D00(CUnit *a1, unsigned int a2);
void RemoveMaelstrom(CUnit *a1);
void RemoveLockdown(CUnit *a1);
void IrradiateHit(CUnit *target, CUnit *attacker, char attacking_player);
void ApplyIrradiate(CUnit *unit);
void RemoveMatrixFrom(CUnit *a1, signed int damage);
void CreateDefensiveMatrix(CUnit *a1);
void ApplyDefensiveMatrix(CUnit *a1);
extern void (__stdcall*orders_DefensiveMatrix)(CUnit *a1);
void OpticalFlareHit(CUnit *a1, char attacking_player);
void RestoreHit(CUnit *a1);
void LockdownHit(CUnit *a1, unsigned __int8 a2);
void SetMaelstromTimer(CUnit *a1, unsigned __int8 time);
u8 sub_455460(CUnit *a1);
int sub_455480(CUnit *a1);
void StimpackSFXRand(CUnit *unit);
void sub_455500(int a1, CUnit *a2);
extern int (__fastcall*irradiateUnitDamageProc)(CUnit *a1, CUnit *a2);
extern void (__thiscall*IrradiateDamageLoop)(CUnit *this_);
extern _DWORD (__stdcall*OrderAcquire_Nothing)(_DWORD a1, _DWORD a2, _DWORD a3);
signed CanRClickGround_maybe(CUnit *unit);
BOOL DoesAcceptRclickCommands(CUnit *a1);
extern char (__fastcall*getGenericUnitIdleOrder)(int a1, CUnit *a2);
signed OrderAcquire_genericRighClickHarvestProc(CUnit *a1, CUnit *a2);
extern signed (__thiscall*OrderAcquire_genericReturnToIdleProc)(CUnit *unit, int a2, CUnit **a3, int a4);
extern signed (__thiscall*OrderAcquire_genericIdleUnitProc)(CUnit *this_, int a2, int *a3, __int16 a4);
extern int (__thiscall*OrderAcquire_genericRighClickHarvestIdleProc)(CUnit *this_, int a2, int *a3, __int16 a4);
extern signed (__stdcall*ShowRClickErrorIfNeeded)(CUnit *a1);
extern int (__thiscall*OrderAcquire_genericRightClickUnitProc)(CUnit *this_, int a2, CUnit **a3, __int16 a4);
extern int (__thiscall*OrderAcquire_genericRightClickUnitProc2)(CUnit *this_, int a2, int a3, __int16 a4);
void sub_455F20(CUnit *a1, int a2, __int16 a3, __int16 a4, unsigned __int16 a5);
extern void (__stdcall*sub_4560D0)(signed int a1, signed int a2, int a3, signed int a4, char a5);
void CMDACT_RightClick(dlgEvent *a1);
CThingy * sub_456490(int x, __int16 y, CUnit *unit);
extern void (__fastcall*input_Game_RightMouseClick)(dlgEvent *dlg);
extern void (*sub_456630)();
extern void (__cdecl*destroy_wirefram_grp)();
char sub_4566B0(CUnit *a1);
extern int (__thiscall*sub_456730)(CUnit *this_);
int sub_4567C0(CUnit *a1);
extern void (*sub_4568B0)();
extern void (__fastcall*statdata_UnitWireframeUpdate)(dialog *dlg, int x, int y, rect *dst);
dialog * sub_456A30(dialog *result);
extern int (__fastcall*statdata_UnitWireframeInteract)(dialog *dlg, dlgEvent *evt);
extern void (*load_WireframeGRP)();
extern int (*sub_456AE0)();
extern u8 * (*ProgressBar_Destroy)();
extern void (__fastcall*statdata_ProgressBarUpdate)(dialog *dlg, int x, int y, rect *dst);
char sub_456C10(char result);
extern char (*sub_456C20)();
signed sub_456C30(dialog *a1);
char sub_456D30(dialog *dlg);
extern void (__thiscall*statdata_LabelUnknownUpdate)(dialog *dlg, int x, int y, rect *dst);
extern int (__fastcall*statdata_Unknown)(dialog *dlg, dlgEvent *evt);
extern void (__cdecl*destroyStatdata)();
extern void (__fastcall*statdata_UnitWireframeSelectUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*statdata_UnitWireframeTransUpdate)(dialog *dlg, int x, int y, rect *dst);
void sub_4571B0(dialog *a1);
void DLGsetProgressBarValue(dialog *a1, __int16 a2, __int16 a3);
void sub_457250(dialog *a1, __int16 a2, __int16 a3);
void sub_4572F0(dialog *a1);
void sub_457310(dialog *a1);
void CreateContextHelpFromDialog(dialog *a1, const char *a2);
void sub_457390(int a1);
extern void (__stdcall*CMDACT_CancelGeneric)(dialog *dlg);
extern void (__fastcall*statdata_buttonUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*statdata_iconOverlayUpdate)(dialog *dlg, int x, int y, rect *dst);
extern int (*sub_457540)();
extern int (*sub_457550)();
extern int (*sub_457560)();
extern int (*sub_457570)();
extern int (*sub_457580)();
extern int (*sub_457590)();
void drawCancelUpgradeContextHelp(dialog *a1);
extern void (__stdcall*statdatalUserInteract)(dialog *a1);
void drawCancelUnitContextHelp(dialog *a1);
void drawUnloadUnitContextHelp(dialog *a1);
void DlgButton_Create(dialog *a1);
void statdataMouseOverInteract(dialog *a1, dialog *a2);
void sub_457DE0(dialog *dlg, struct dlgEvent *evt);
void statdata_Destroy(dialog *dlg, struct dlgEvent *evt);
extern int (__fastcall*statdata_UnitWireframeTransit)(dialog *dlg, dlgEvent *evn);
extern int (__fastcall*statdata_buttonInteract)(dialog *dlg, dlgEvent *evt);
extern void (__cdecl*sub_457FE0)();
void ProgressBar_Create(dialog *dlg);
extern void (*sub_458120)();
extern int (__fastcall*statdata_ProgressBarInteract)(dialog *dlg, dlgEvent *evt);
extern void (__fastcall*StatusScreenButton)(dialog *a1, dialog *a2);
extern int (__fastcall*statdata_UnitWireframeSelection)(dialog *dlg, dlgEvent *evt);
void statdata_extendedCtrlID(dialog *dlg);
extern int (__fastcall*statdata_dlg_Interact)(dialog *dlg, dlgEvent *evt);
extern void (*load_Statdata_BIN)();
extern void (*sub_4586E0)();
extern u8 * (*sub_4586F0)();
extern void (__fastcall*ConsoleDlgUpdateCB)(dialog *dlg, int x, int y, rect *dst);
__int16 setDefaultTooltipInfo(__int16 a1, __int16 a2, __int16 a3, __int16 a4, __int16 a5, __int16 a6, __int16 a7, __int16 a8);
int sub_458850(int result);
extern BOOL (__fastcall*sub_4588C0)(dialog *this_, int a2);
extern void (__fastcall*statbtn_Btn_Update)(dialog *dlg, int x, int y, rect *dst);
int statBtn_dlg_CharPress(dlgEvent *a1);
void sub_458BB0(dialog *dlg);
extern void (__cdecl*updateButtonSetEx)();
extern void (__cdecl*destroy_statbtn_BIN)();
extern void (*sub_458D50)();
extern void (__cdecl*updateButtonSet)();
void sub_458E70(dialog *a1);
extern void (__stdcall*sub_458E90)(int a1);
extern signed (__stdcall*sub_458EF0)(signed int a1);
extern void (__stdcall*CreateTooltip)(char *a1);
extern void (__thiscall*CreateUpgradeLevelTooltip)(char *this_);
extern void (*sub_4591D0)();
extern void (__cdecl*resetTooltipInfo)();
void getTooltipInfo(dialog *a1, dialog *a2);
void sub_4596A0(dialog *a1);
extern void (__cdecl*sub_459770)();
void sub_4597C0(dialog *a1, struct dlgEvent *a2);
void statBtn_dlg_MouseMove(dialog *a1, struct dlgEvent *a2);
extern int (__fastcall*statbtn_BIN_ReplayProgressbar)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*statbtn_Btn_Interact)(dialog *dlg, dlgEvent *evt);
extern void (*updateCurrentButtonset)();
void statbtn_BIN_CustomCtrlID(dialog *a1);
extern void (__fastcall*BTNSACT_ChangeButtons)(int action_variable, bool is_shift_used);
extern int (__fastcall*statbtn_DLG_Interact)(dialog *dlg, dlgEvent *evt);
extern void (*load_statbtn_BIN)();
void sub_459D90(DownloadListMaybe *result, int a2, int a3);
DownloadListMaybe * sub_459DC0(DownloadListMaybe *result);
unsigned sub_459E00(DownloadListMaybe *a1, unsigned int a2);
extern int (__stdcall*sub_459EC0)(int *a1, int a2, int a3);
int sub_459EF0(int result, char a2, int a3);
char * SendMapNameData(MapDownload *a1, int a2);
BOOL extensionIsValidMap(const char *a1);
DownloadListMaybe * sub_45A010(char a1, char a2);
BOOL Download_maybe(_BYTE *a1);
void sub_45A0B0(char a1);
int dataXFer_0x05(int a1, int a2);
int dataXFer_0x03(int a1, char a2, int a3);
int dataXFer_0x02(int a1, int a2, char a3);
BOOL openMapFile(DownloadListMaybe *a1);
BOOL dataXFer_0x04(unsigned int a1, int a2, int a3);
int fd_user(char *a1, int a2, int a3);
extern int (__stdcall*sub_45A520)(int a1, int a2);
signed CreateMapDownloadString(size_t a1, const char *a2, int a3);
int dataXFer_0x01(unsigned int eax0, int a2, int a3);
extern int (*sub_45A840)();
extern int (*sub_45A860)();
extern int (*sub_45A890)();
char sub_45A8B0(char a1, char a2);
extern char (__fastcall*sub_45A900)(int a1, char a2);
extern int (*sub_45A920)(void);
extern int (__fastcall*sub_45A950)(size_t size_, char *dest);
extern int (__thiscall*sub_45A970)(char *source);
char sub_45A990(int a1);
extern void (__fastcall*sub_45A9B0)(int a1, unsigned __int8 a2, char a3);
extern _DWORD (__stdcall*sub_45AB20)(char a1, char a2);
extern int (*sub_45ABA0)();
int sub_45ABE0(size_t size_, char *dest, int result);
extern signed (__thiscall*sub_45AC10)(u8 *this_);
extern unsigned (*GetEmptiestTeam)();
extern void (__cdecl*updatePlayerForce)();
extern int (__fastcall*GetFreeSlotFromEmptiestTeam)(_DWORD a1, _DWORD a2);
void sub_45AE20(int a1);
BOOL isAIScriptNameValid(int player, int a2);
struct_v4 * AI_RunAIScript(Location *a1, int a2, int a3, int a4);
extern int (__fastcall*AISCRIPT_Get_u32)(int a1, int a2);
extern __int16 (__fastcall*AISCRIPT_Get_u16)(int a1, int a2);
extern char (__fastcall*AISCRIPT_Get_u8)(int a1, int a2);
extern int (*sub_45B050)();
extern int (*nullsub_24)();
extern void * (*sub_45B080)();
CUnit * AI_GetNuclearSilo(int a1);
extern s32 (__fastcall*getStandardUnitCount)(UnitType a1, int a2, unsigned __int8 a3);
int ParseAIScriptName(int a1, int *a2);
struct_v4 * sub_45B1D0(int a1, int a2, int a3);
CUnit * AI_FindSuitableUnit(int a1, unsigned int a2, __int16 a3);
extern _BYTE * (__stdcall*AI_GuardResources)(int a1, __int16 a2);
int ReadAIThreadData(FILE *a1, __int16 a2);
int WriteAIThreadData(FILE *a1);
extern int (__stdcall*AI_ExpandAt)(int a1, int a2, int a3);
int AI_Expand(int a1, int a2, int a3);
extern _DWORD (__stdcall*AIScript_CreatePanicThread)(_DWORD a1, _DWORD a2, _DWORD a3);
extern void (*load_AIScript_BIN)();
void AI_CreateNuke(CUnit *a1);
void AI_StartShareTown(int player_id);
extern int (__stdcall*AIScript_RunScriptOpcodes)(int a1);
extern void (*AIScriptLoop)(void);
BOOL isValidMorph(UnitType a1);
extern int (*isRectOutOfScreen_fixup)(void);
BOOL isMorphing(CUnit *unit);
extern void (__stdcall*sub_45CD50)(int a1, int a2, int a3, int a4, int a5);
void updateNewUnitVision(UnitType a1, int pos_x, int pos_y);
void orders_DroneStartBuild(CUnit *a1);
extern signed (__stdcall*sub_45D040)(CUnit *a1);
extern void (__stdcall*orders_Morph2)(CUnit *a1);
void DroneBuild_Execute(CUnit *a1);
void ZergPlaceBuildingCntd(CUnit *a1);
void orders_ZergBuildSelf(CUnit *unit);
void DroneMorphExtractor(CUnit *a1);
void DroneMorphStandard(CUnit *a1, UnitType a2);
extern CUnit * (__stdcall*ZergUnitBirth)(CUnit *a1);
extern void (__stdcall*ZergPlaceBuilding)(CUnit *a1);
void orders_Build5(CUnit *a1);
void orders_ZergBirth(CUnit *unit);
void orders_Morph1(CUnit *unit);
extern void (__stdcall*orders_DroneBuild)(CUnit *unit);
extern void (*sub_45E310)();
u16 setBuildingSelPortrait(UnitType unit_type);
extern u8 * (*statport_alloc)();
int setLastEventPosition(int a1, int a2);
extern int (*sub_45E3E0)();
__int16 sub_45E400(Bitmap *a1, int a2, char a3);
unsigned rgbValue(int a1, int a2, int a3);
signed sub_45E4C0(HANDLE video, int *esi0, int a3);
BOOL sub_45E510(_DWORD *a1, int a2, char *filename, int arg4, int a5, int a6, int a7);
extern int (*sub_45E560)();
int sub_45E570(rect *a1, unsigned __int8 a2);
extern void (__fastcall*GameTalkingPortrait_CB)(dialog *a1, __int16 timer_id);
extern void (__fastcall*statPortBtnUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__cdecl*clearSelectionPortrait)();
void sub_45E770(dialog *dlg);
extern void (__stdcall*displayIdlePortrait)(unsigned __int16 a1);
extern void (__stdcall*displayTalkingPortrait)(unsigned __int16 a1);
extern void (*sub_45E9A0)();
void sub_45E9C0(int a1);
signed sub_45E9F0(dlgEvent *a1);
void displayUpdatePortrait(WORD a1, CUnit *a2, __int16 a3);
void sub_45EB80(signed int a1);
extern void (*updateSelectedUnitPortrait)();
extern void (__fastcall*sub_45EC40)(dialog *a1, __int16 timer_id);
extern void (*sub_45ED90)();
signed DisplayTalkingPortrait_maybe(int a1, UnitType unit_type, int x, int y);
extern int (__fastcall*statPortBtnInteract)(dialog *dlg, dlgEvent *evt);
extern void (__fastcall*sub_45EF50)(dialog *a1, __int16 a2);
void DoUnitEventNotify(CUnit *unit, char a2, int a3, int *a4, unsigned int a5);
void statport_Buttonpress(dialog *dlg);
extern int (__fastcall*statport_Dlg_Interact)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadPortdata_BINDLG)();
extern char (*CommandAt)();
extern void (*sub_45F7F0)();
void IncreaseUnitCountsAtLocation(CUnit *result);
__int16 IncrementUnitCountForAllLoadedUnits(CUnit *a1);
int isUnitAtHeight(CUnit *a1, char location_flags);
int KillRemoveUnits_Force(int eax0, int a2, int a3, int a4, int (__fastcall *a5)(signed int, int, int, int));
int KillRemoveUnits_AllPlayers(int a1, int a2, int a3, int (__fastcall *a4)(_DWORD, _DWORD, _DWORD, _DWORD));
int KillRemoveUnits_NeutralPlayers(int a1, int a2, int a3, int (__fastcall *a4)(_DWORD, _DWORD, _DWORD, _DWORD));
int KillRemoveUnits_Allies(int a1, int a2, int a3, int (__fastcall *a4)(_DWORD, _DWORD, _DWORD, _DWORD));
int KillRemoveUnits_Foes(int a1, int a2, int a3, int (__fastcall *a4)(_DWORD, _DWORD, _DWORD, _DWORD));
extern int (__stdcall*KillRemoveUnits_NonAlliedVictoryPlayers)(int arg0, int a2, int (__fastcall *a3)(unsigned int, int, int, int), int a4);
int getForcePlayers(int eax0, int (__fastcall *a2)(int, int, struct_a3 *), int a3, struct_a3 *a4);
extern int (__stdcall*GetAllPlayers)(int arg0, struct_a3 *a2, int (__fastcall *a3)(int, int, struct_a3 *));
extern int (__stdcall*GetNeutralPlayers)(int arg0, struct_a3 *a2, int (__fastcall *a3)(int, int, struct_a3 *));
extern int (__stdcall*GetAllies)(int arg0, struct_a3 *a2, int (__fastcall *a3)(int, int, struct_a3 *));
extern int (__stdcall*GetFoes)(int arg0, struct_a3 *a2, int (__fastcall *a3)(int, int, struct_a3 *));
extern int (__stdcall*GetNonAlliedVictoryPlayers)(int a1, struct_a3 *a2, int (__fastcall *a3)(_DWORD, _DWORD, struct_a3 *));
extern __int16 (__fastcall*sub_45FE40)(int a1, CUnit *a2);
extern int (__fastcall*increaseHangerCountsAtLocation)(int a1, int a2);
extern int (__thiscall*isUnitOwnedByPlayerEx)(int player, CUnit *a2);
extern int (__fastcall*Score)(_DWORD a1, _DWORD a2, struct_a3 *a3);
extern int (__fastcall*Opponents)(_DWORD a1, _DWORD a2, struct_a3 *a3);
extern int (__fastcall*Deaths)(_DWORD a1, _DWORD a2, struct_a3 *a3);
extern int (__fastcall*Kill)(_DWORD a1, _DWORD a2, struct_a3 *a3);
extern int (__fastcall*Accumulate)(_DWORD a1, _DWORD a2, struct_a3 *a3);
extern int (__fastcall*Command)(_DWORD a1, _DWORD a2, struct_a3 *a3);
extern __int16 (__thiscall*IncreaseCompletedUnitCountsAtLocation)(CUnit *this_);
extern int (__fastcall*TrgBringProc)(CUnit *a1, int a2);
extern unsigned (__fastcall*Bring)(int a1, char a2);
extern int (*sub_460A80)();
extern void (__fastcall*sub_460A90)(dialog *a1);
int sub_460B00(int a1);
int sub_460B20(dialog *a1);
dialog * sub_460BB0(dialog *a1);
int spdDlgDestroy(dialog *a1, dlgEvent *a2);
extern void (__thiscall*sub_460C80)(dialog *this_);
extern bool (__fastcall*snd_SoundCheckbox)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*snd_SoundSlider)(dialog *dlg, dlgEvent *evt);
void snd_dlg_UserCTRLID(dialog *a1);
char spdDlgCreate(dialog *a1);
void load_Options_BIN(dialog *dlg);
extern int (__fastcall*snd_dlg_BINDLG_Main)(dialog *dlg, dlgEvent *evt);
extern void (*open_sound_options_menu)();
extern int (*sub_460F20)();
extern void (__cdecl*lmissionDlgActivate)();
extern void (__cdecl*sub_460F70)();
extern void (__cdecl*wmissionDlgActivate)();
void lmissionDlgCreate(dialog *a1);
void sub_461160(dialog *dlg);
extern int (__fastcall*lmission_DLG_Interact)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*wmission_BINDLG_Main)(dialog *dlg, dlgEvent *evt);
extern void (*open_lose_mission_dialog)();
extern int (*open_win_mission_dialog)();
extern int (*nullsub_25)();
extern int (*sub_4616E0)();
extern signed (__fastcall*sub_4616F0)(int a1, const char *a2);
extern BOOL (*isSaveGameTimerReady)();
extern void (__cdecl*sub_461750)();
int PrintfNetworkTblString(__int16 network_tbl_entry, char *buff, size_t size_, int a4);
TSAVEGAME * sub_4617C0(const char *a1);
extern void (__stdcall*SaveGame_Constructor_0)(int a1);
dialog * sub_4618F0(dialog *result);
int CMDACT_LoadGame(char *source, int a2);
int sub_461980(char *a1);
void sub_4619A0(dialog *a1);
void DLG_loadsave_Act(dialog *dlg);
extern void (__thiscall*sub_461A90)(dialog *this_);
int DLG_loadsave_Destroy(dialog *pDlg, dlgEvent *a2);
extern bool (__fastcall*loadSave_Delete)(dialog *dlg, dlgEvent *evt);
void loadsave_editbox_onCharEvt(dlgEvent *a1, dialog *a2);
extern bool (__fastcall*loadsave_EditBoxInteract)(dialog *dlg, dlgEvent *evt);
void sub_461D80(dialog *a1);
extern bool (__fastcall*loadsave_ListBox)(dialog *dlg, dlgEvent *evt);
char DLG_loadsave_Create(dialog *dlg, dlgEvent *a2);
extern int (__fastcall*DLG_LoadGame_Interact)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*open_savegame_menu)(__int16 _unused);
extern void (*LoadGame_DlgCreate)();
extern signed (__fastcall*okBIN)(__int16 a1);
extern int (__fastcall*savegameBIN)(__int16 a1);
void sub_4622A0(__int16 a1, int a2, int (__fastcall *a3)(__int16));
void dlg_loadsave_delete(dialog *dlg);
void dlg_loadsave_overwrite(dialog *dlg);
void DLG_Loadsave_Activate(dialog *dlg);
extern int (__fastcall*savegameBIN_DLG_Interact)(dialog *dlg, dlgEvent *evt);
extern void (__cdecl*savegameMenu)();
int * AI_CreateGuard(__int16 a1, int a2, __int16 a3, __int16 a4);
_DWORD * RemoveAllGuards(int a1);
int ** sub_462760(int a1, unsigned __int16 a2);
extern int (*nullsub_26)();
extern int (*sub_4627C0)();
extern int (*sub_4627D0)();
extern int (*nullsub_27)();
int sub_4627F0(int a1, int a2, int a3);
_WORD * SetDesiredAIControllerDestination(CUnit *unit, __int16 x, __int16 y);
extern int (*sub_462860)();
int sub_462880(int a1, int a2);
extern int (*sub_462900)();
extern BOOL (__thiscall*IsAtHome)(CUnit *this_);
extern CUnit * (__stdcall*sub_462960)(CUnit *a1);
extern void (__cdecl*initDetailFinder)();
int LoadUnitFinderData(FILE *a1);
int WriteUnitFinderData(FILE *a1);
int * AI_PlaceGuard(int a1, int location, int a3, __int16 unit_type);
signed AI_Guard_AttackTarget_Proc(CUnit *a1, int a2);
void sub_463040(CUnit *unit);
extern int * (__stdcall*sub_4630C0)(int a1);
extern int (*sub_4632F0)();
UnitType getSiegeModeUnitType(UnitType result);
extern CUnit * (__thiscall*findAddonOwner)(void *this_);
CUnit * GetLoadedSilo(CUnit *ghost, int a2, CUnit *ghost_);
extern int (*sub_4633B0)();
void sub_4633D0(CUnit *a1);
CUnit * j_secondaryOrd_Cloak(CUnit *result);
extern int (*sub_463420)();
u8 setPathingFromUnitElevation(CUnit *a1);
void setGroundBuildingPathing(CUnit *a1);
int AI_OrderHeal(CUnit *a1, CUnit *a2);
extern signed (__fastcall*liftoffCheck)(CUnit *a1, CUnit *a2);
void orders_nuke_paint(CUnit *unit);
void BuildingLiftoffIfLandingInterrupted(int a1);
void orders_MedicHeal2(CUnit *unit);
char orderReturnToIdle(CUnit *a1);
extern void (__stdcall*orders_HealMove)(CUnit *unit);
void orders_Medic(CUnit *a1);
BOOL sub_463A10(UnitType a1, CUnit *geyser);
void orders_lift_off(CUnit *unit);
ButtonState doMedicHeal(CUnit *a1, CUnit *a2);
void orders_scanner(CUnit *unit);
void completeAddon(CUnit *a1, CUnit *a2);
char CheckCreateAddon(CUnit *a1);
void orders_vulture_mine(CUnit *unit);
extern signed (__fastcall*SiegeTank_SelfDestructProc)(CUnit *a1, CUnit *a2);
extern int (__fastcall*Proc_UnitSelfDestructingCB)(CUnit *a1, CUnit *a2);
void orders_MedicHoldPosition(CUnit *unit);
void orders_MedicHeal1(CUnit *unit);
BOOL SiegeTank_UnderBuilding_GlitchPrevention(CUnit *a1);
extern CUnit * (__thiscall*DestroyUnitsUnderLandingSite)(CUnit *this_);
void orders_BuildingLand(CUnit *unit);
void orders_nuke_launch(CUnit *unit);
void bldgLiftoff(CUnit *a1);
void orders_BuildingLiftoff(CUnit *unit);
void orders_TankMode(CUnit *unit);
void orders_SiegeMode(CUnit *unit);
void orders_NukeTrack(CUnit *unit);
void orders_PlaceScanner(CUnit *a1);
void orders_PlaceMine(CUnit *unit);
extern _DWORD (__stdcall*sub_465200)(_DWORD a1, _DWORD a2);
extern char (__fastcall*getHangerTrainCount)(int a1, int a2);
extern int (*Unit__GetHangerUnitType)(void);
extern int (__thiscall*convertCurrentOrderToCarrierReaverFightOrder)(_DWORD a1);
extern Order (__thiscall*convertCurrentOrderToCarrierReaverIdleOrder)(CUnit *this_);
extern char (__thiscall*getMaxHangerSpace)(CUnit *this_);
extern int (__thiscall*unitIsCarrierReaverSecondaryOrderState2)(CUnit *this_);
extern _DWORD (__stdcall*isDistanceGreaterThanPathDistanceToOrderTarget)(_DWORD a1);
extern void (__stdcall*orders_ReaverStop)(CUnit *a1);
void returnAllInterceptors(CUnit *a1);
void orders_ReaverAttack1(CUnit *a1);
void setInterceptorsOnStandby(CUnit *a1);
signed returnInterceptorIfCannotAttack(CUnit *a1);
void orders_carrier_stop(CUnit *unit);
void orders_CarrierAttack1(CUnit *a1);
signed carrierReaverIdle(CUnit *a1, int a2, int a3);
int getNextStrafePosition(CUnit *a1, unsigned __int8 a2, UnitDimentions a3);
void orders_StrafeUnit2(CUnit *unit);
void orders_StrafeUnit(CUnit *a1);
char killAllHangerUnits(CUnit *a1);
void sub_466270(CUnit *a1, CUnit *a2);
void addHangerUnit(CUnit *a1, CUnit *a2);
void orders_return(CUnit *unit);
CUnit * sub_466440(CUnit *a1);
void orders_Reaver(CUnit *unit);
void orders_Carrier(CUnit *unit);
void orders_carrier_ignore2(CUnit *unit);
void secondaryOrd_TrainFighter(CUnit *a1);
extern _DWORD (__stdcall*setRallyPosition)(__int16 a1, __int16 a2);
extern int (__thiscall*decrementRemainingBuildTime)(_WORD *this_);
extern int (*sub_466990)();
extern unsigned (__fastcall*getQueuedUnitCount)(int a1, CUnit *a2);
int getRemainingBuildTimePercentage(CUnit *a1);
extern int (__thiscall*sub_466A30)(CUnit *this_);
void refundQueueSlot(signed int a1, CUnit *a2);
extern int (__thiscall*setRallyUnit)(_DWORD a1);
BOOL AIGetQueuedCount(CUnit *a1, int a2);
int getRepairInfo(CUnit *a1, int a2, int a3, int a4);
char refundLastSlot(int a1);
int refundAllQueueSlots(CUnit *a1);
signed verifyResources(int a1, int a2, int a3, int a4);
extern int (__thiscall*orderNewUnitToFollowRallyDirective)(_DWORD a1);
signed ord_repair_subtract(int a1, CUnit *a2);
signed sub_467030(CUnit *a1);
void orders_ResetCollision1(CUnit *unit);
signed HasMoneyCanMake(int a1, CUnit *a2, UnitType a3);
signed sub_4672F0(CUnit *a1, int a2, UnitType a3, char a4, int a5);
void SetUnitHp(CUnit *unit, signed int a2);
char sub_4673C0(CUnit *a1, int a2);
void orders_Repair1(CUnit *unit);
void orders_TerranBuildSelf(CUnit *unit);
CUnit * CreateUnitOnGeyser(CUnit *a1, unsigned __int8 a2);
int buildingAddon(CUnit *a1, int a2, int a3);
void orders_SCVBuild2(CUnit *unit);
extern void (__stdcall*orders_SCVBuild)(CUnit *unit);
CUnit * attemptTrainHatchUnit(UnitType unit_type, CUnit *a2, int a3);
extern void (__thiscall*Base_CancelStructure)(CUnit *unit);
void sub_468670(CUnit *unit);
_DWORD * sub_4686D0(_DWORD *result, int a2);
extern int (*sub_468730)();
_DWORD * sub_468770(int a1);
extern int (*sub_4687F0)();
extern int (*sub_468800)();
void setResourceCount(CUnit *this_);
BOOL unit_isMineralField(CUnit *a1);
BOOL UnitIsGasBuilding(CUnit *a1);
BOOL UnitIsResource(CUnit *unit);
extern int (*sub_468910)();
extern BOOL (__thiscall*unit_isGeyserUnitEx)(CUnit *this_, CUnit *a2);
CUnit * sub_468970(int a1);
extern int (*sub_468A20)();
extern CUnit * (__thiscall*sub_468A60)(CUnit *this_);
void setGatheringFlags(CUnit *a1);
extern BOOL (__stdcall*sub_468B00)(CUnit *a1, CUnit *a2, Position *a3, Position a4);
signed sub_468C70(CUnit *a1, CUnit *a2);
void sub_468D10(CUnit *a1, CUnit *a2);
char sub_468DB0(CUnit *a1);
CUnit * sub_468E40(CUnit *result, int a2);
void orders_HarvestOreInterrupted(CUnit *unit);
void orders_HarvestWTF(CUnit *unit);
char sub_468EF0(CUnit *nextGatherer, CUnit *a2);
void orders_CanHarvestMinerals(CUnit *a1);
void orders_enter_gas(CUnit *unit);
void orders_return_resource(CUnit *unit);
void orders_MoveToHarvestMinerals(CUnit *unit);
void orders_harvest(CUnit *unit);
char CheckDepletedGas(CUnit *a1, char a2, int a3, int a4);
char sub_4696D0(CUnit *a1, CUnit *a2, int a3);
void orders_HarvestingMinerals(CUnit *a1);
void orders_EnterExitGas(CUnit *a1);
unsigned finderIdxFromValue_binary_search(int a1, UnitFinderData *a2, int a3);
BOOL isUnitInBoundsOfOtherUnit(int a1, int a2);
extern int (*nullsub_28)();
extern UnitDimentions * (*sub_469BF0)();
int assignUnitSorting_Y(int result, int a2, int a3);
int assignUnitSorting_X(int result, int a2, int a3);
void * SortTopBottom(void *result, int a2, int a3);
void * sortLeftRight(void *result, signed int a2, UnitFinderData *a3);
char * setUnitSorting_Y(char *result, int a2, int a3);
void * setUnitSorting_X(void *result, UnitFinderData *a2, int a3);
void updateBuildingLandFog2(CUnit *unit, __int16 x, __int16 y);
void sub_469F40(CUnit *a1);
void updateBuildingLandFog(CUnit *a1, __int16 x, __int16 y);
void sub_469FE0(CUnit *a1);
int updateUnitSortingInfo(int result, CUnit *a2, int a3);
signed sortUnit(CUnit *a1);
unsigned updateUnitOrderFinder(CUnit *a1);
void updateUnitSorting(CUnit *a1);
void sub_46A5A0(CUnit *a1);
extern int (__cdecl*UMHidden)();
extern int (*sub_46A5F0)();
CUnit * sub_46A600(CUnit *result);
CUnit * sub_46A620(CUnit *result, char a2);
int UMScoutFree(CUnit *a1);
signed UMAtMoveTarget(CUnit *a1);
int UMInitSeq(CUnit *a1);
void UMFailedPath(CUnit *this_);
extern int (__thiscall*sub_46A700)(CUnit *this_);
int sub_46A720(CUnit *a1);
extern char (__thiscall*sub_46A740)(CUnit *this_);
void setArchonWarpPathing(CUnit *a1);
signed UMForceMoveFree(CUnit *a1);
signed UMDormant(CUnit *a1);
int DestinationAndCollisionCheck(CUnit *a1, int a2);
signed UMSlidePrep(CUnit *a1);
signed UMNewMoveTarget(CUnit *a1);
signed UMUIOrderDelay(CUnit *a1);
extern signed (__stdcall*UMScoutPath)(CUnit *unit);
signed UMFaceTarget(CUnit *a1);
int UMBunker(CUnit *unit);
int UMBldgTurret(CUnit *unit);
signed MoveUnit_Partial(CUnit *unit);
signed UMTerrainSlide(CUnit *unit);
signed UMFixTerrain(CUnit *a1);
signed UMSlideFree(CUnit *a1);
signed UMWaitFree(CUnit *a1);
int UMMoveToLegal(CUnit *a1);
int UMFlyer(CUnit *a1);
void sub_46B500(CUnit *a1);
signed UMGetFree(CUnit *a1);
signed UMLumpWannabe(CUnit *a1);
signed UMAtRest(CUnit *a1);
signed UMFollowPath(CUnit *a1);
int sub_46BBA0(CUnit *a1);
signed UMRepathMovers(CUnit *unit);
signed UMRepath(CUnit *unit);
signed UMTurnAndStart(CUnit *unit);
signed UMStartPath(CUnit *unit);
signed UMCheckIllegal(CUnit *a1);
int UMTurret(CUnit *unit);
void SetMoveTarget_unit(CUnit *a1);
signed UMFixCollision(CUnit *a1);
signed UMRetryPath(CUnit *unit);
signed UMInitialize(CUnit *unit);
void Unit_ExecPathingState(CUnit *a1);
extern int (__fastcall*sub_46C6E0)(dialog *this_, int x, int y, rect *a4);
extern void (__fastcall*waitLoop)(dialog *a1, __int16 a2);
void sub_46C770(int a1);
extern signed (__stdcall*AddBriefingTrigger)(BriefingEntry *a1);
extern void (__fastcall*BRF_RectLoop2)(dialog *dlg, __int16 timer_id);
extern void (__fastcall*BRF_RectLoop1)(dialog *a1, __int16 a2);
extern void (__fastcall*textScrollLoop)(dialog *a1, __int16 a2);
extern void (*CreateSkipTutorialButton)();
extern void (__fastcall*HidePortrait)(unsigned __int8 a1);
extern void (__stdcall*sub_46CA90)(dialog *a1);
extern void (__stdcall*sub_46CBC0)(dialog *a1);
extern void (*updateMissionObjectives)();
void BRF_displayText(char *text, unsigned int a2);
extern void (__fastcall*ShowPortrait)(unsigned __int8 a1, int a2, UnitType unit_type);
void briefingFramesCleanup(dialog *a1);
extern void (__fastcall*SpeakingPortrait)(unsigned __int8 a1, int a2, int a3);
void BriefingStart(dialog *a1, int a2);
int sub_46D160(dialog *dlg);
extern void (__fastcall*MissionBriefingLoop)(dialog *dlg, __int16 a2);
extern void (*sub_46D1F0)();
extern void (__stdcall*sub_46D200)(MusicTrack a1);
void sub_46D220(dialog *a1);
extern bool (__fastcall*sub_46D340)(dialog *this_);
void sub_46D3C0(dialog *dlg);
extern __int16 * (*parseOrdersDatReqs)();
extern void (__cdecl*parseTechUseData)();
extern __int16 * (*parseTechResearchData)();
extern __int16 * (*parseUpgradeData)();
ButtonState parseRequirementOpcodes(__int16 a1, CUnit *a2, Tech2 a3, int a4, int a5);
ButtonState OrderAllowed(CUnit *a1, Order order, int a3);
ButtonState CanUseTech(CUnit *unit, Tech2 tech_id, int player_id);
ButtonState ReasearchAllowed(Tech2 tech, int a2, CUnit *unit);
ButtonState UpgradeAllowed(Tech2 tech, int player_id, CUnit *unit);
extern int (*sub_46E0E0)();
int sub_46E0F0(int result);
extern unsigned (*parseUnitsDatReqs)();
__int16 TTBaseUnitType(int a1);
ButtonState TTAllowed(UnitType unit_type, CUnit *a2, int player_id);
unsigned CHK_PerformVCODcheck(PlayerInfo *lobby_players, unsigned int a2, int a3, signed int a4);
extern int (*nullsub_29)();
extern int (*nullsub_30)();
extern int (*sub_46E920)();
extern int (*sub_46E990)();
extern int (*nullsub_31)();
extern int (*sub_46EA20)();
extern int (*nullsub_32)();
extern signed (__stdcall*loadSaiPaths)(int a1);
signed prepContourInfoForSaving(BYTE *a1);
extern int (*sub_46ED60)();
signed unit_isUnselectable(__int16 a1);
extern BOOL (*sub_46EE70)();
extern void (__cdecl*refreshDragSelectBox)();
extern void (__fastcall*input_dragSelect_MouseMove)(dlgEvent *this_);
extern void (__cdecl*DisableDragSelect)();
void getTargettingErrorString(WeaponType a1, WORD *a2, CUnit *a3);
CUnit * sub_46F040(int a1, CUnit **a2, CUnit *a3, CUnit *a4);
extern signed (__stdcall*SortAllUnits)(CUnit **a1, CUnit **a2, CUnit *a3);
int sub_46F290(CUnit **a1, CUnit **a2, int a3, CUnit *a4);
int sub_46F380(int a1, int a2, CUnit *a3);
extern CUnit * (__stdcall*FindUnitAtPoint)(int x, int y);
void sub_46F5B0(int x, int y, CUnit *unit, signed int unit_type);
void UI_doSelectUnits_IfAltNotHeld(CUnit **a1, int a2, char a3, int a4);
extern void (__stdcall*getSelectedUnitsInBox)(Box16 *box);
extern void (__fastcall*getSelectedUnitsAtPoint)(int a1, int a2);
extern void (__fastcall*input_dragSelect_MouseBtnUp)(dlgEvent *a1);
extern void (__fastcall*input_Game_LeftMouseClick)(dlgEvent *a1);
extern void (__cdecl*BWFXN_drawDragSelBox)();
extern int (*sub_4700A0)();
extern int (*sub_4700B0)();
int sub_4700C0(int a1, unsigned __int8 a2, u8 a3);
extern int (*sub_470100)();
extern PlayerInfo * (*sub_470120)();
extern PlayerInfo * (*updatePlayerOwnerInternal)();
void bootPlayer(int result, int a2);
extern char (__thiscall*ForceNameTransfer)(const char *this_, int a2);
extern void (__thiscall*LOBSEND_0x50)(unsigned int playerID);
void LOBSEND_DataRequest(int a1);
extern void (__stdcall*LOBSEND_ForceNames)(unsigned int playerID);
void LOBSEND_PlayerForceData(unsigned int a1);
extern void (__stdcall*LOBSEND_SendMapData)(const void *a1, unsigned int a2, unsigned __int8 a3);
void LOBSEND_BootPlayer(char a1, int a2, unsigned int a3);
extern void (__fastcall*lobbyChat_4D)(unsigned __int8 a1, int a2, int a3);
void LOBSEND_0x4D(unsigned __int8 a1, const char *a2);
void lobbyChat_4C(int result, int a2);
char onPlayerJoin(int a1, int a2);
void BWFXN_SendLobbyCallTarget(const char *a1);
extern int (__stdcall*playerForceDataTransfer)(int data, int net_player);
extern signed (*LobbyRecv)();
extern __int16 (__thiscall*sub_470BB0)(_WORD *this_);
__int16 sub_470BC0(__int16 result);
extern void (*sub_470BD0)();
char * getPlayerName(unsigned __int8 player);
int getPlayerFlags(unsigned __int8 a1, _WORD *a2);
int sub_470C30(unsigned __int8 a1, __int16 a2);
int sub_470C40(unsigned __int8 a1, _WORD *a2, _WORD *a3, _WORD *a4);
BOOL sub_470C90(unsigned __int8 a1);
extern int (*isValidSlot)(void);
int sub_470CE0(unsigned __int8 a1);
extern int (*sub_470CF0)();
extern BOOL (__stdcall*SetPlayerData)(unsigned __int8 a1, __int16 a2, __int16 a3, __int16 a4);
extern _BYTE * (*sub_470D80)();
extern _BYTE * (__stdcall*swapPlayers)(char a1, char a2);
extern _BYTE * (__stdcall*SetSlotOwner)(char a1, char a2);
_BYTE * sub_470E30(char a1);
int sub_470E60(char a1);
_BYTE * sub_470EA0(unsigned __int8 a1, char a2);
int createUnknownConfirmationBuffer(int player);
_BYTE * createGameSlotModBuffer(PlayerInfo *a1);
void createMapDownloadPercentBuffer(char a1);
extern _BYTE * (*sub_471050)();
extern char (*sub_471080)();
char sub_471090(char result);
extern void (__cdecl*clearGameNextMenu)();
extern void (*sub_471260)();
extern int (*CreateGameInitBuffer)();
extern _BYTE * (__stdcall*RECV_raceChange)(int a1, int a2);
void RECV_PlayerVersion(int a1, int a2);
void RECV_GameSlotMod(int a1, int a2);
void RECV_SlotChange(int a1, int a2);
extern char (__stdcall*RECV_ForceChangeUMS)(int a1, int a2);
extern char (__thiscall*RECV_ForceChangeMelee)(int this_, int a2);
void sub_471840(int a1);
unsigned RECV_SwapPlayers(int a1, int a2);
extern void (__cdecl*ProgressCountdown)();
extern void (__cdecl*JoinGame)();
int sub_471CD0(int a1, int result);
extern void (__fastcall*versionCheck)(int a1, char a2, int a3, int a4, int a5);
extern BOOL (__stdcall*createVersionBuffer)(__int16 net_player_flags, __int16 net_player_x4, __int16 protocol_version, char save_player_unique_id, char save_player_id, int save_hash, BOOL create);
extern void (*RECV_StartGame)(int a1);
void RECV_SetRandomSeed(signed int a1, struct_v2 *a2);
extern int (*sub_4721E0)();
extern int (__fastcall*replaceNewlines)(_DWORD a1, _DWORD a2);
extern int (*hex_to_int)();
extern int (__stdcall*sub_4722C0)(char *buff);
void sub_472300(char *a1, int a2, size_t a3);
extern int (*sub_472500)();
extern int (__thiscall*sub_472570)(_DWORD a1);
extern int (*sub_472720)();
extern int (*sub_472750)();
void initializeProviderVersion(SNETPROGRAMDATA *a1);
int isPlayerBanned(const char *a1);
extern int (__stdcall*Ban_Constructor)(char *source);
extern void (*sub_4728E0)();
extern void (*sub_4728F0)();
void dataXFer_0x06(DownloadListMaybe *result);
int sub_472940(int a1);
extern int (*sub_4729E0)();
extern int (*sub_4729F0)();
int dataXFer_0x00(int a1, char a2, int a3);
int IsDownloadComplete(MapDownload *a1);
extern const char * (__stdcall*UserInfo_Constructor)(MapDownload *a1, int a2);
_DWORD * sub_472BA0(MapDownload *a1, char a2);
extern MapDownload ** (__stdcall*sub_472C10)(MapDownload **a1);
MapDownload * CreateMapDownload(char *a1);
extern int (*sub_472D50)();
extern int (__cdecl*killTimerFunc)();
extern void (__stdcall*TimerFunc)(HWND a1, UINT a2, UINT a3, DWORD a4);
extern void (*SetTimerFunc)();
void SetFogMask(int a1, int a2, int a3, int x, int y);
void AddFogMask(int a1, int a2, int some_flags_maybe, int x, int y);
extern int (__fastcall*sub_472F00)(unsigned __int8 a1);
int sub_472F20(unsigned __int8 a1);
extern BOOL (__fastcall*sub_472F40)(__int16 a1, __int16 a2, MegatileFlags a3, MegatileFlags a4);
BOOL getActiveTileFlag(__int16 x, __int16 y, MegatileFlags a3, MegatileFlags a4);
extern MegatileFlags (__fastcall*sub_472FD0)(__int16 a1, __int16 a2);
extern int (*sub_472FF0)();
int canPlaceCreepBuildingAt(unsigned __int8 player_id, __int16 a2, __int16 a3, int a4, int a5, int a6, int a7);
int canPlaceNydusBuildingAt(unsigned __int8 a1, __int16 a2, __int16 a3, int a4, int a5, int a6);
signed sub_473290(unsigned __int8 a1, int a2, __int16 a3, __int16 a4, __int16 a5);
signed sub_4732C0(unsigned __int8 a1, int a2, __int16 a3, __int16 a4, __int16 a5);
BOOL j_canUnitTypeFitAt(signed int a1, UnitType a2, __int16 a3);
signed sub_473300(_DWORD *a1, int a2, int a3, int a4, char a5, char a6);
BOOL sub_473410(int a1, int a2, int a3);
extern int (__fastcall*UnitIsResourceContainer)(CUnit *a1, CUnit *a2);
CUnit * sub_4734B0(__int16 a1, __int16 a2, UnitType unit_type);
extern signed (__thiscall*IsAccessibleForHarvest)(CUnit *this_);
int sub_473720(__int16 a1, int a2, int a3, unsigned __int8 a4, unsigned __int16 a5, int a6, int a7, char a8, char a9, int a10);
signed canPlacePoweredBuildingAt(char a1, unsigned __int16 a2, __int16 a3, __int16 a4);
int sub_473970(__int16 a1, __int16 a2);
BOOL PlaceBuildingResourceRestrictionCheck(int a1, __int16 a2, __int16 a3);
int canPlaceStandardBuildingAt(unsigned __int16 a1, __int16 a2, __int16 a3, unsigned __int8 a4, int a5, int a6, int a7);
int sub_473BD0(unsigned __int16 a1, int a2, int a3, int a4, int a5);
extern int (__stdcall*vespeneGeyserPlacebox)(int a1, int a2, unsigned __int8 a3, int a4);
int sub_473EF0(unsigned __int16 a1, __int16 a2, int a3, unsigned __int8 a4, int a5);
extern signed (__stdcall*canBuildOnTileLocation)(CUnit *a1, int a2, int a3, int a4, UnitType a5, int a6, int a7, int a8, int a9);
signed sub_4741A0(__int16 a1, int a2, int a3, int a4, int a5);
extern int (__thiscall*AssignSecondaryOrderNoParam)(_DWORD a1);
extern int (*sub_4742B0)();
COrder * removeOrderFromUnitQueue(COrder *result, CUnit *a2);
void playSubunitIscript(CUnit *a1, Anims a2);
extern int (*sub_4743C0)();
CUnit * setSecondaryOrder(CUnit *unit, Order order);
extern COrder * (__fastcall*sub_474400)(CUnit *a1, Order order);
COrder * j_removeOrderFromUnitQueue(COrder *result, CUnit *a2);
extern int (*sub_4744D0)(void);
extern int (*sub_4744F0)();
signed sub_474500(CUnit *a1, UnitType unit_type);
void unknownSpecialOrder(u16 a1, Order a2, COrder *a3, CUnit *a4, Position a5, CUnit *a6);
void QueueOrderEx(Order a1, COrder *a2, CUnit *a3, u16 dx0, Position a5, CUnit *a6);
signed sub_4746D0(CUnit *a1, char a2, UnitType a3, int a4);
void _orderSelfSpecial(Order a1, COrder *a2, CUnit *a3);
void sub_474790(Order a1, COrder *a2, CUnit *a3, __int16 a4, __int16 a5);
void sub_4747C0(Order a1, COrder *a2, CUnit *a3, Position a4, CUnit *a5);
void sub_4747E0(CUnit *a1, Order a2, COrder *a3, CUnit *a4);
void order(int a1, CUnit *a2, Order a3, Position a4, CUnit *a5, u16 a6);
extern void (__stdcall*sub_4748E0)(__int16 a1, __int16 a2);
void sub_474910(Order a1, COrder *a2, CUnit *a3, u16 a4, u16 a5, u16 a6);
void sub_474940(CUnit *a1, Order a2, COrder *a3, CUnit *a4);
void sub_474980(Order a1, COrder *a2, CUnit *a3, Position a4, CUnit *a5);
void QueueOrder(Order order_id, COrder *order, CUnit *unit);
void sub_4749D0(Order a1, CUnit *a2);
void sub_474A20(Order a1, __int16 a2, __int16 a3, CUnit *a4);
void moreOrdersFML(CUnit *a1, CUnit *a2, Order a3);
void sub_474AF0(Order a1, CUnit *a2, Position a3, CUnit *a4);
void orderImmediate(CUnit *unit, Order order);
void queueNewOrder(COrder *result, __int16 a2, __int16 a3, CUnit *a4, Order a5, CUnit *a6, u16 a7, Position a8, CUnit *a9);
void orderInterrupt(CUnit *unit, Order order_id, Position a3, CUnit *a4);
extern void (__stdcall*doOrder)(CUnit *a1, Order order_id, __int16 x, __int16 y, int a5);
extern Order (__stdcall*sub_474CB0)(CUnit *a1, Order order_id, u16 a3, __int16 pos_x, __int16 pos_y, int a6);
void _order(CUnit *unit, Order order_id, Position a3, CUnit *a4, int a5);
void issueQueuedOrderTarget(CUnit *a1, CUnit *a2, Order order_id, int a4);
extern void (__fastcall*__order)(Order order_id, CUnit *a2, int a3);
signed isOrderValid(char a1, CUnit *a2, CUnit *a3, int a4);
void sub_474FB0(CUnit *a1, Order order_id, u16 a3, __int16 pos_x, __int16 pos_y);
extern void (__thiscall*PrepareForNextOrderFunc)(CUnit *this_);
void sub_475220(CUnit *a1, Order order_id, Position position, CUnit *a4, u16 a5);
void OrderToPos(CUnit *a1, Order order_id, __int16 pos_x, __int16 pos_y);
void UnitOrderTo(CUnit *unit, CUnit *target, Order order_id);
void orderComputer_cl(CUnit *unit, Order order_id);
void sub_475350(CUnit *a1, __int16 a2, __int16 a3);
extern void (__thiscall*toIdle)(CUnit *this_);
void ISCRIPT_NoBrkCodeEnd(CUnit *a1);
void actUnitReturnToIdle(CUnit *a1);
void OrderQueuedCommand(__int16 a1, __int16 a2, Order a3, COrder *a4, CUnit *a5, CUnit *a6, u16 a7, Position a8, CUnit *a9);
void ExecuteQueuedOrder(__int16 a1, __int16 a2, u16 a3, CUnit *a4, COrder *a5, int a6, Order order, CUnit *a8, Position a9, CUnit *a10);
void sub_4756B0(Order a1, u16 a2, CUnit *a3, int a4, __int16 a5, __int16 a6);
void sub_4756E0(CUnit *a1, CUnit *a2, int a3, Order a4);
void RemoveUnit(CUnit *unit);
extern void (*nullsub_33)();
extern int (*nullsub_34)();
BOOL UnitIsInvincible(UnitType unit_type);
extern WeaponType (__thiscall*UnitGetAirWeapon)(CUnit *this_);
int getUnitMaxWpnRange(CUnit *a1, WeaponType weapon_type);
extern void (__fastcall*incrementUnitKillCount)(CUnit *a1);
int sub_4759F0(CUnit *a1);
extern int (*sub_475A00)();
BOOL hasGrndWeaponGraphic(CUnit *a1);
BOOL unitHasNoMainOrderType(CUnit *a1);
extern int (*sub_475A70)();
extern WeaponType (__thiscall*getGroundWeaponType)(CUnit *this_);
extern WeaponType (__thiscall*UnitGetGrndWeapon)(CUnit *this_);
extern int (*sub_475AF0)();
extern int (*sub_475B40)();
int orders_Guard(CUnit *a1);
BOOL unitIsPositionInAttackAngle(int a1, int a2, CUnit *a3, unsigned __int8 a4);
BOOL unitCanAttackGroundType(UnitType unit_type, CUnit *a2);
int CanWeaponTargetUnit(WeaponType weaponId, CUnit *target, CUnit *attacker);
unsigned getUpgradedWpnCooldown(WeaponType a1, CUnit *a2);
int getUpgradedDamageAmtForGUI(WeaponType weapon_type, CUnit *a2);
int getUnitDamageBonus(CUnit *a1, WeaponType weapon_type);
int getDamageAmtForGUI(CUnit *a1, WeaponType weapon_type);
char sub_475F50(CUnit *a1, unsigned int a2, unsigned int a3);
char GetUnitAckRangeUpgrade(CUnit *a1);
extern BOOL (__thiscall*AI_UnitCanAttack)(CUnit *this_);
int getUnitMissChance(CUnit *a1);
extern void (__stdcall*sub_4762C0)(CUnit *unit, int *x, int *y);
BOOL isTargetWithinMinMovementRange(CUnit *a1, unsigned int a2, CUnit *a3);
BOOL isUnitTargetOutOfMaxRange(CUnit *a1, CUnit *a2);
BOOL isUnitTargetInsideMinRange(CUnit *unit, CUnit *target);
void IgnoreAllScriptAndGotoIdle(CUnit *a1);
unsigned weaponBehaviourCanHitTargetCheck(CUnit *target, CUnit *attacker);
extern int (*sub_476610)(void);
signed IsReadyToAttack(CUnit *a1, WeaponType weapon_type);
extern int (*sub_4766F0)();
BOOL unitCanAttackTarget(CUnit *a1, CUnit *a2, int a3);
BOOL isUnitInWeaponRange(CUnit *a1, CUnit *a2);
BOOL isBunkerBusy(int a1, CUnit *a2);
BOOL IsBetterTarget_maybe(CUnit *old_target, CUnit *unit, CUnit *new_target);
__int64 sub_476A50(CUnit *a1, CUnit *a2);
BOOL sub_476C50(CUnit *a1, CUnit *a2);
signed doWeaponIscript(CUnit *a1, WeaponType a2, int a3, Anims a4);
void sub_476D30(CUnit *a1);
void AskForHelp(CUnit *enemy, CUnit *unit);
void getWeaponBeginIscript(CUnit *result, Anims a2);
void orders_tower_guard(CUnit *unit);
void SetAttackTarget(CUnit *a1, CUnit *a2, int a3, int a4);
int sub_4770E0(CUnit *unit);
extern signed (__thiscall*AI_AggressiveUnitTask)(CUnit *this_, int a2, int a3, signed int a4);
void orders_guard_play(CUnit *unit);
extern void (__stdcall*holdPositionProc)(CUnit *a1);
void ReactToHit(CUnit *attacker, CUnit *target);
void orders_TurretGuard(CUnit *unit);
char sub_477820(CUnit *a1, Order a2);
void orders_guard_post(CUnit *unit);
void orders_TurretAttack(CUnit *unit);
void orders_AttackFixedRange(CUnit *unit);
u8 sub_477F10(CUnit *a1, CUnit *a2);
void appyBunkerWeaponAnimation(CUnit *a1);
void orders_Patrol(CUnit *unit);
BOOL sub_478370(CUnit *a1, Order a2);
void orders_comp_return(CUnit *unit);
signed OrderAttackBehaviour(CUnit *unit);
void orders_SapUnit(CUnit *a1);
void orders_SapLocation(CUnit *unit);
int attackApplyCooldown(CUnit *unit);
void orders_hold_position(CUnit *unit);
void orders_AttackMoveEP(CUnit *a1);
void orders_HarassMove(CUnit *unit);
void orders_AttackMove(CUnit *a1);
void orders_tower_attack(CUnit *unit);
extern void (__stdcall*orders_NukeGround)(CUnit *a1);
void orders_nuke_unit(CUnit *unit);
extern void (__stdcall*BWFXN_KillUnitTarget)(CUnit *unit);
void DoWeaponHit(CUnit *target, CUnit *attacker, int show_attacker);
int attackOverlayAndNotify(CUnit *a1, CUnit *a2, unsigned __int8 weapon_type, char a4);
void DamageUnitHp(s32 a1, CUnit *a2, CUnit *a3, int player_id, int a5);
void DoWeaponDamage(unsigned int result, CUnit *a2, WeaponType weapon_type, unsigned int a4, char a5, CUnit *a6, int a7);
void WeaponBulletShot(CBullet *bullet, CUnit *target, unsigned int dmg_divide);
void ISCRIPT_AttackMelee(CUnit *unit);
void orders_AttackUnit(CUnit *unit);
void ISCRIPT_UseWeapon(CUnit *unit, WeaponType weapon_type);
void FireUnitWeapon(CUnit *unit, WeaponType weapon_id);
void ISCRIPT_CastSpell(CUnit *unit, WeaponType weapon_id);
void ISCRIPT_AttackWith(CUnit *attacker, u8 is_ground_weapon);
extern int (__stdcall*sub_479DD0)(__int16 a1, __int16 a2);
extern int (__stdcall*sub_479E00)(__int16 a1, __int16 a2);
extern int (*sub_479E30)();
extern int (*nullsub_35)();
extern bool * (__thiscall*minorUnpackSharedSaveData)(CBullet *bullet);
void minorPackSharedSaveData(CBullet *a1);
extern int (__stdcall*sub_479F70)(int a1, int a2);
int unitOrderMoveToTargetUnitResetOrderState(int result, char a2, int a3);
extern int (__thiscall*unitOrderMoveToTargetUnit)(_DWORD a1);
CSprite * sub_47A010(char a1, __int16 a2, char player_id, CUnit *unit, FlingyID flingy_id, int a6);
extern int (*nullsub_36)();
void image_Insert(CImage *result, CImage **a2, CImage *a3);
extern int (*sub_47A090)();
extern int (*sub_47A0B0)();
extern int (*sub_47A0F0)();
int sub_47A120(int result, int a2, unsigned __int16 a3, int a4);
extern signed (__stdcall*sub_47A350)(int a1, int a2, int a3, signed int a4, int a5);
extern signed (__stdcall*sub_47A4E0)(int a1, int a2, int a3, signed int a4, int a5);
extern _DWORD (__stdcall*sub_47A670)(_DWORD a1);
extern _DWORD (__stdcall*sub_47A6E0)(_DWORD a1);
extern _DWORD (__stdcall*sub_47A750)(_DWORD a1);
extern char * (__fastcall*sub_47A7C0)(int a1);
extern char * (__fastcall*sub_47A7E0)(int a1);
extern char * (__fastcall*sub_47A800)(int a1);
extern unsigned (__fastcall*rle_draw_hpfloat)(int a1, int a2, int a3, int a4, CUnit *a5);
extern void (*sub_47AAC0)();
extern int (__stdcall*sub_47AAF0)(int a1);
void sub_47AB40(LO_Header **a1, signed int a2);
extern int (*sub_47ABB0)();
grpHead * readImageFile_lowMem(int *grp_file_arr, unsigned __int16 *images_tbl, int image_id, grpHead **a4, LPOVERLAPPED a5, _DWORD *a6);
void * readImageFile(int *overlay_index, unsigned __int16 *a2, int image_id, HANDLE hFile, LPOVERLAPPED a5, _DWORD *a6);
extern void (__stdcall*loadImagesData_lowMem)(grpHead **a1, int *a2, u16 *images_tbl, int a4, LPOVERLAPPED a5, void *a6);
extern void (__stdcall*loadImagesData)(LO_Header **a1, int *a2, unsigned __int16 *images_tbl, int a4, LPOVERLAPPED a5, _DWORD *a6);
BOOL unit_isRefineryUnit(UnitType unit_type);
extern int (*sub_47B000)();
extern int (*sub_47B030)();
extern int (*unitIsFloorTrap)(void);
extern const char * (__fastcall*getUnitNameStatString)(UnitType unit_type);
extern int (*sub_47B0F0)();
extern int (*sub_47B120)();
char unitGetRace(CUnit *a1);
u32 UpdateHPGain(CUnit *a1);
int CUnitToUnitID(CUnit *a1);
CUnit * unitIDtoUnitMemFast(CUnit *a1);
extern int (__thiscall*unitIDtoCUnit)(_DWORD a1);
UnitType getLastQueueSlotType(CUnit *a1);
extern int (*sub_47B2C0)();
BOOL Unit_IsFactoryBuilding(CUnit *unit);
extern int (__stdcall*increaseUpgradeLevel)(int a1, unsigned __int16 a2, unsigned __int8 a3, unsigned __int8 a4);
extern int (__stdcall*researchTech)(int a1, unsigned __int16 a2, char a3, unsigned __int8 a4);
BOOL BWFXN_IsCritter(CUnit *a1);
BOOL UnitIsRescuableOrUnknown0(CUnit *a1);
__int16 Thg2SpecialDIsableUnit(CUnit *a1);
extern const char * (__thiscall*UnitGetName)(CUnit *this_);
unsigned GetModifiedUnitSpeed(unsigned int result, CUnit *a2);
extern int (*sub_47B660)();
char updateBuildingConstructShieldsAmount(CUnit *a1);
char hasOverlay(CUnit *a1);
extern BOOL (__fastcall*unitIsEnemy)(CUnit *a1, int a2);
extern BOOL (__thiscall*unit_IsStandardAndMovable)(CUnit *unit);
int unitLurkerIsNotIdle(CUnit *a1);
extern unsigned (__thiscall*getModifiedUnitTurnRadius)(CUnit *this_);
extern unsigned (__thiscall*getModifiedUnitAcceleration)(CUnit *this_);
unsigned GetUnitSpeed(CUnit *unit);
BOOL isUnitEnemyOf(CUnit *unit, CUnit *target_unit);
extern signed (__stdcall*ApplyAllUnitSpeedUpgradesProc)(CUnit *a1, char a2, char a3, int a4);
void DisableDoodadState(CUnit *a1);
void EnableDoodadState(CUnit *a1);
void orders_WatchTarget(CUnit *a1);
void orders_stop(CUnit *unit);
void ToggleDoodadState(CUnit *a1);
void orders_CloseDoor(CUnit *a1);
void orders_OpenDoor(CUnit *a1);
void orders_disable_doodad(CUnit *unit);
void orders_enable_doodad(CUnit *unit);
void sub_47BF80(CUnit *unit);
void orders_HideTrap(CUnit *unit);
void orders_RevealTrap(CUnit *unit);
void orders_JunkYardDog(CUnit *a1);
void orders_Critter(CUnit *unit);
void orders_StayInRange(CUnit *a1);
void orders_follow(CUnit *unit);
void orders_ignore(CUnit *unit);
void GiveAllUnitPropertiesToPlayerAndMakeIdle(CUnit *a1, int a2);
void GiveUnitToNeutral(CUnit *a1);
extern int (*nullsub_37)();
extern int (*sub_47CC20)();
extern int (*sub_47CC30)();
extern int (*sub_47CC40)();
extern void (*CMDACT_GameHash)();
extern char (*saveMinimapCounts)();
BOOL GameHash(int a1, _BYTE *a2);
extern int (*CreateResourcesHash)(void);
extern int (*sub_47CDA0)();
BOOL CMD_GameHash(int a1);
extern int (*CreateMaskHash)();
extern int (*sub_47CE90)();
extern unsigned (*CreateUnitsHash)();
unsigned CreateHash(unsigned __int8 a1);
extern unsigned (*UpdateGameHash)();
extern unsigned (*resetGameValues)();
extern int (*nullsub_38)();
extern void (*nullsub_39)();
extern int (*nullsub_40)();
extern int (*nullsub_41)();
extern void (*nullsub_42)();
extern int (*nullsub_43)();
extern void (*nullsub_2)();
extern void * (__thiscall*sub_47D170)(void *this_, int a2);
int sub_47D180(int result);
int sub_47D190(int result);
extern unsigned (__fastcall*sub_47D1B0)(__int16 a1, __int16 a2);
extern unsigned (__fastcall*sub_47D1E0)(int a1, __int16 a2);
extern int (__stdcall*isTileVisible)(int a1, int a2);
extern __int32 (__stdcall*isCreepCovered)(int a1, int a2);
extern int (__fastcall*sub_47D2C0)(int a1, int a2);
extern int (*sub_47D300)();
int sub_47D320(int result);
int sub_47D370(int result);
extern int (__fastcall*sub_47D3C0)(int *this_);
int * sub_47D400(int *result);
extern int (__thiscall*sub_47D460)(int *this_);
extern unsigned (*sub_47D500)();
int sub_47D540(int a1, int a2);
extern int (__thiscall*sub_47D5F0)(int this_);
extern __int16 * (*sub_47D660)();
BOOL sub_47D730(unsigned int a1, unsigned int a2);
extern int (__stdcall*sub_47D770)(CUnit *a1);
extern int (__stdcall*sub_47D860)(int a1, int a2, CUnit *a3);
void sub_47D920(RECT *a1);
int LoadDisappearingCreepChunk(FILE *a1);
BOOL SaveDisappearingCreepChunk(FILE *a1);
extern char (__stdcall*RecheckSurrondingCreepDisappearance)(int x, int y);
int sub_47DD60(unsigned int a1, unsigned int a2);
signed sub_47DE40(int a1, int a2, int eax0, UnitType a4);
extern signed (__stdcall*sub_47DF90)(CUnit *a1);
extern signed (__stdcall*sub_47E100)(CUnit *a1);
extern void (__stdcall*sub_47E2D0)(int x, int y, int a3, TileID a4, RECT *a5);
extern unsigned (*InitializeRandomizerInfo)();
extern int (__thiscall*sub_47E440)(dialog *this_);
extern void (__fastcall*sub_47E480)(dialog *a1, int a2);
extern void (__fastcall*sub_47E590)(dialog *dlg, int x, int y, rect *dst);
void * sub_47E630(dialog *a1, dlgEvent *a2);
void sub_47E690(dialog *dlg);
extern unsigned (__fastcall*tips_PrevNext)(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*tips_ShowAtStartup)(dialog *dlg, dlgEvent *evt);
void tips_BinDLG_CustomCtrlID(dialog *a1);
extern int (__fastcall*tips_dialog_main)(dialog *dlg, dlgEvent *evt);
void open_tips_dialog(int a1);
extern int (*sub_47EA50)();
void sub_47EA60(_BYTE *a1, int a2, int a3, u8 *a4, int a5);
int GetScrollSpeed(int *a1);
extern char (*CenterCursorGameScreen)();
void assignCenterViewProc(int a1, int a2, void (*a3)(void));
extern char (*sub_47EBB0)();
extern void (__cdecl*destroy_spk_handle)();
extern void (__cdecl*refreshStars)();
extern void (__cdecl*drawStars)();
void getScreenMoveState(_DWORD *vertical_delta, _DWORD *horizontal_delta);
extern void (__cdecl*PollInput)();
extern void (*loadParallaxStarGfx)();
extern int (__thiscall*getLastWhisperPlayerIDIfStrEqual)(size_t a1, char *a2, int a3);
extern int (__fastcall*verifyChatCommand)(size_t a1, char *a2, int a3, int a4);
extern void (*sub_47F580)();
extern void (__cdecl*LeagueChatFilter)();
extern char (__stdcall*AUTBNETMESSAGE)(const char *a1);
extern void (__stdcall*BWFXN_GlobalPrintText)(s_evt *evt);
void sendWhisper(int result, const char *a2);
extern signed (__stdcall*chatCommandFilter)(char *text);
extern void (__cdecl*maskSomething0)();
extern int (*maskSomething2)();
extern int (__fastcall*fogGraphicSomething)(int a1, int a2, int a3, int a4, int a5);
extern int (__fastcall*fogGraphicSomething_0)(_BYTE *a1, int a2);
extern void (__thiscall*ResetFogSomething)(_DWORD *this_);
extern u32 (__fastcall*gndSightCB_Edge)(int megatile_x, int megatile_y, SightStruct *a3, MegatileFlags *a4, MegatileFlags a5, int a6);
extern int (__fastcall*gndSightCB_Inside)(int a1, int a2, SightStruct *a3, MegatileFlags *a4, unsigned int a5, MegatileFlags a6);
extern MegatileFlags * (__fastcall*airSightCB_Edge)(int megatile_x, int megatile_y, SightStruct *a3, MegatileFlags *a4, int a5, int a6);
extern int (__fastcall*airSightCB_Inside)(int a1, int a2, SightStruct *a3, MegatileFlags *a4, unsigned int a5, MegatileFlags a6);
extern void (__cdecl*DestroyFogSightData)();
extern MegatileFlags * (*sub_480410)();
extern int (*sub_480430)();
extern int (*j_maskSomething2)();
extern int (*maskSomething1)();
extern void (__cdecl*sub_4805D0)();
void updateFog(int result, signed int a2, signed int a3, signed int a4);
int revealSightAtLocation(int sight_range, unsigned int vision_mask, signed int x, signed int y, int reveal_from_air);
extern void (__cdecl*sub_4807F0)();
extern void (__cdecl*RemoveFoWCheat)();
void updateAllFog(int a1);
extern void (__cdecl*sub_480960)();
extern _DWORD (__stdcall*GetKeyRandomizerSequence)(_DWORD a1);
extern void (__fastcall*saveColorSettings)(bool exit_code);
extern int (__thiscall*sub_480AE0)(dialog *this_);
extern int (*sub_480B20)();
extern unsigned (__fastcall*sub_480B30)(dialog *a1, dialog *a2);
void sub_480B90(dialog *dlg);
int sub_480BD0(dialog *a1);
extern void (*loadColorSettings)();
void video_Cancel(dialog *a1, dlgEvent *a2);
extern int (__fastcall*video_PortraitRadioBtns)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*video_CCyclingCheckbox)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*video_GammaSlider)(dialog *dlg, dlgEvent *evt);
void video_CustomCTRLID(dialog *a1);
void video_Main(dialog *a1);
void video_OK(dialog *dlg);
extern int (__fastcall*video_BINDLG_Main)(dialog *dlg, dlgEvent *evt);
extern void (__cdecl*open_video_options_menu)();
extern void (__fastcall*DestroyHelpContext)(bool exit_code);
extern void (__fastcall*ContextHelpUpdateProc)(int a1, int a2, Bitmap *pSurface, bounds *pBounds);
extern void (__stdcall*sub_481160)(Bitmap *a1);
extern void (__stdcall*BitContextHelpSurface)(Bitmap *a1);
void sub_481260(__int16 a1, Bitmap *a2, __int16 a3);
extern int (*sub_481310)();
extern Bitmap * (*sub_481320)();
extern void (__cdecl*CreateHelpContext)();
void refreshSelectionScreenEx(WORD *a1);
extern void (__cdecl*refreshSelectionScreen)();
void CreateContextHelp(int a1, int a2, const char *a3);
extern int (*sub_481690)();
void md5_ctx_init(int a1, int a2);
int DecryptKey(int a1, int a2, unsigned int a3);
extern void (__fastcall*exit_throttling_options)(bool exit_code);
extern int (__thiscall*speedOptnsScreenScrollSliders)(int this_);
void createUpdateSpdOptionsScrollers(dialog *a1);
extern void (__cdecl*init_throttling_options)();
bool destroySpdDlg(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*spd_speedSlider)(dialog *dlg, struct dlgEvent *evt);
extern bool (__fastcall*spd_CPUThrottleCheckbox)(dialog *dlg, dlgEvent *evt);
void sub_481E60(dialog *a1);
char copyOptionsInfoToDialog(dialog *a1);
void change_speed_options(dialog *a1);
extern int (__fastcall*spd_dlg_Interact)(dialog *dlg, dlgEvent *evt);
extern void (*open_speed_options_menu)();
void SAI_PathCreate_Sub3_1_1_0_0(SAI_Paths *a1, int x, int y, UnknownPathRelated *result);
void SAI_PathCreate_Sub3_1_1_1(SAI_Paths *a1, SaiRegion *a2);
extern void (__stdcall*SAI_PathCreate_Sub3_1_1_0)(SAI_Paths *sai_paths, int a2, SaiRegion *a3);
void SAI_PathCreate_Sub3_1_1(SAI_Paths *a1);
BOOL sub_482890(int a1, int a2, int a3, int a4);
void SAI_PathCreate_Sub3_1_0(SAI_Paths *a1);
__int16 * sub_482A80(__int16 *result);
void SAI_PathCreate_Sub3_0_2(int a1, SAI_Paths *a2, rect *a3, SaiAccessabilityFlags a4);
void SAI_PathCreate_Sub3_0_1(__int16 a1, rect *a2, SAI_Paths *a3);
int sub_482CC0(int a1, __int16 *a2);
extern void (__fastcall*SAI_PathCreate_Sub3_1_2_0)(SAI_Paths *a1, SaiRegion *a2, int a3);
int SAI_CreateRegionGroupings(SAI_Paths *a1);
extern void (__stdcall*SAI_PathCreate_Sub3_2)(SAI_Paths *a1);
extern void (__stdcall*SAI_PathCreate_Sub3_3)(SAI_Paths *a1);
unsigned SAI_PathCreate_Sub5(SaiRegion *a1);
extern void (__cdecl*FreeSAI_Paths)();
extern void (__cdecl*AllocateSAI_Paths)();
extern void (__cdecl*SAI_PathCreate_Sub3_4)();
void SAI_PathCreate_Sub3_0_0(int a1, int a2, SAI_Paths *a3, rect *a4, __int16 a5);
void SAI_PathCreate_Sub3_1(int a1, SAI_Paths *a2);
unsigned sub_483BD0(int *a1);
extern void (__thiscall*CreateUIUnreachableRegion)(SAI_Paths *paths);
void SAI_PathCreate_Sub1(MegatileFlags *a1);
extern void (__cdecl*freeSaiPaths)();
int SAI_PathCreate_Sub3_0(SAI_Paths *a1, Position a2, MapSize size_);
int SAI_PathCreate_Sub3(PathCreateRelated *a1, SAI_Paths *a2);
extern int (__stdcall*SAI_PathCreate)(MegatileFlags *a1);
extern void (__fastcall*nullsub_3)(dlgEvent *a1);
int saveScreenLocation(int result);
extern void (__fastcall*input_Game_LeftMouseBtnDwn)(dlgEvent *a1);
extern void (__fastcall*_input_Game_Idle)(dlgEvent *this_);
extern void (__fastcall*input_Game_MiddleMouseBtnUp)(dlgEvent *a1);
void resetGameInputProcs(CursorType a1);
extern void (__fastcall*input_MiddleBtnScreenMove_MouseMove)(dlgEvent *a1);
void recallScreenLocation(int a1);
extern void (__fastcall*input_Game_MiddleMouseBtnDwn)(dlgEvent *a1);
extern void (__fastcall*input_standardSysHotkeys)(dlgEvent *this_);
extern void (__fastcall*input_targetOrder_RightMouseClick)(dlgEvent *a1);
extern void (__fastcall*input_placeBuilding_RightMouseClick)(dlgEvent *a1);
extern void (__fastcall*input_Game_RightMouseBtnDwn)(dlgEvent *a1);
extern void (__fastcall*input_Game_UserKeyPress)(dlgEvent *a1);
extern void (__fastcall*CMDACT_Hotkey)(dlgEvent *event);
extern void (*SetInGameInputProcs)();
extern void (*sub_484D90)();
signed getPlayerCountInForce(char a1);
extern int (__fastcall*sub_484DF0)(_DWORD a1, _DWORD a2);
extern int (*sub_484E20)();
extern int (*sub_484E50)();
extern int (*sub_484E80)();
char sub_484E90(char a1);
extern int (*sub_484EF0)(void);
extern int (*sub_484F20)(void);
extern BOOL (__cdecl*gameIsTeamGame)();
extern _DWORD (__stdcall*GetMainPlayerForTeam)(char a1);
char getOpenObsPlayerCount(char a1);
unsigned getNextActivePlayer(unsigned int *a1);
const char * getTeamString(unsigned __int8 a1);
extern int (*sub_485130)();
extern int (*randomizeTeamGame)();
extern char (*sub_4855E0)();
extern u8 (*illegalTeamCheck)();
char sub_4857B0(char a1, unsigned __int8 a2);
extern int (*sub_485820)();
extern int (*sub_485860)();
extern int (*sub_4858B0)();
extern void (*sub_485900)();
extern int (*sub_485920)();
extern int (*sub_485930)();
int isStringValid(unsigned int a1, unsigned int a2, int a3, const char *a4, int a5);
extern void (__cdecl*BWFXN_sendTurn)();
extern void (*GameKeepAlive)();
void newGame(int is_in_game);
extern void (__fastcall*BWFXN_QueueCommand)(const void *buffer, unsigned int buffer_size_);
void sub_485C70(int a1, int a2);
extern void (*sub_485CC0)();
extern void (__stdcall*CMDACT_set_latency)(char a1);
extern int (__fastcall*SendTextMessage)(unsigned int a1, int edx0, int a3, int a4, int a5);
void CMDRECV_SetLatency(int a1);
extern int (__fastcall*SendTextMessagePrivate)(int a1, int a2, unsigned int a3);
extern int (__fastcall*SendTextMessagePublic)(int a1, int a2, unsigned int a3);
extern void (__cdecl*RecvMessage)();
void LOBBYCLASS2_RECV(int a1, int a2, int a3);
extern void (__cdecl*Cls2RecvFrom)();
extern BOOL (*RecvSaveTurns)();
void Game_RECV(u8 *a1, int a2, int a3);
extern void (*ParseGameRecvInfo)();
extern int (__cdecl*gameLoopTurns)();
extern void (__cdecl*replayLoop)();
BOOL BriefingLoopTurns(int *a1);
extern int (*nullsub_44)();
extern CThingy * (*sub_4872B0)();
extern void (*sub_4872C0)();
extern int (__thiscall*isValid)(void *a1);
extern int (__thiscall*isNull)(void *a1);
extern int (*sub_4872F0)();
extern int (*sub_487310)();
int sub_487320(int result);
unsigned sub_487330(unsigned int result);
extern int (*sub_487340)();
int sub_487350(int result, CThingy *a2, int a3);
unsigned sub_4873E0(unsigned int *a1, CThingy *a2, unsigned int a3);
int * initializeThingyArray(unsigned __int16 count, CThingy **a2, CThingy **a3, CThingy *a4, int (__thiscall *a5)(void *));
extern void (__cdecl*packThingyData)();
extern void (__cdecl*unpackThingyData)();
extern BOOL (__stdcall*sub_487690)(CThingy *a1);
bool isThingyOnMap(signed int a1, signed int a2, CThingy *a3);
void sub_4878F0(CThingy *a1);
extern void (__cdecl*initializeThingyArrays)();
CThingy * sub_487A10(int a1, int a2);
extern int (__fastcall*sub_487A90)(CUnit *a1, CUnit *a2);
extern CThingy * (__stdcall*getPlacementRestrictionsFromSpriteID)(int a1, int a2, int a3);
extern CThingy * (__stdcall*sub_487C70)(int a1, int a2, int a3, int a4);
int CThingyIsVisible(int a1, CThingy *a2);
void sub_487D90(CThingy *a1);
extern int (*readThingyArray)(FILE *file, CThingy *a2, int a3);
extern BOOL (__stdcall*writeThingys)(FILE *file, CThingy *a2, __int16 a3);
CUnit * sub_487FD0(__int16 a1, __int16 a2, unsigned __int16 a3);
void sub_488020(CThingy *a1);
signed ReadThingyArrays(FILE *file);
BOOL sub_488140(FILE *a1);
extern void (__cdecl*BWFXN_drawAllThingys)();
BOOL sub_4881E0(char player_id, int a2, int position_x, CThingy *a4, unsigned __int16 position_y);
CThingy * CreateThingy(int sprite_id, int position_x, unsigned __int16 position_y, char player_id);
extern char (*sub_488310)();
void sub_488350(CThingy *a1);
extern CThingy * (__stdcall*sub_488410)(__int16 a1, CSprite *a2);
extern void (*updateThingys)();
extern void (__cdecl*InitializeThingyArray)();
void GroundAttackInit(__int16 x, __int16 y);
u8 sub_4886E0(int a1);
extern BYTE (__thiscall*sub_4886F0)(void *this_);
BOOL sub_488710(int a1);
extern int (*sub_488750)();
extern BOOL (*isSinglePaused)();
extern int (*BWFXN_IsPaused)();
extern void (__stdcall*unpause_game)(int a1);
extern void (*PauseGame_maybe)(void);
int sub_488880(unsigned __int16 a1, unsigned __int8 a2);
int sub_4888A0(unsigned __int16 a1, unsigned __int8 a2);
int getSuppliesUsed(unsigned __int8 a1, unsigned __int8 a2);
extern int (__thiscall*getSuppliesAvailable)(_DWORD a1);
char sub_488960(unsigned __int16 a1);
s32 getSuppliesMax(unsigned __int16 a1, unsigned __int8 a2);
unsigned getSuppliesRemaining(unsigned __int8 a1, unsigned __int16 a2);
void incrementUnitDeathScores(unsigned int player_id, CUnit *a2);
void incrementUnitScores(CUnit *a1, int a2);
void incrementUnitScoresEx(int a1, CUnit *a2, int a3);
__int16 sub_488F50(CUnit *a1);
__int16 sub_488F60(CUnit *a1);
extern void (__cdecl*InitializeUnitCounts)();
extern int (*nullsub_45)();
extern int (*nullsub_46)();
extern Location * (*sub_4890F0)();
extern void (*sub_489100)();
extern void (*sub_489110)();
extern void (*sub_489120)();
char ExecuteTriggerActions(TriggerListEntry *a1);
signed ExecuteTriggerConditions(TriggerListEntry *a1);
extern DWORD (*sub_489250)();
extern TriggerListEntry * (*sub_489270)();
extern TriggerListEntry * (*sub_489280)();
extern TriggerListEntry * (*sub_489290)();
extern TriggerListEntry * (*sub_4892A0)();
extern TriggerListEntry * (*sub_4892B0)();
extern void (*sub_4892C0)();
extern int (*sub_4892D0)();
extern int (*sub_4892E0)();
int sub_4892F0(int result, int a2);
EndgameState GetEndgameState(int player);
void SetEndgameState(int player, EndgameState new_endgame_state);
int sub_489330(int result);
BOOL isPlayerIDValidForScoreChange(unsigned __int8 a1);
extern int (*nullsub_47)();
extern void (*sub_4893A0)();
extern int (*resetTriggerProperties)(void);
extern void (*sub_489410)();
extern int (*TimerTick)();
void executeGameTrigger(TriggerList *a1);
extern void (*defCenterViewProc)(void);
extern signed (__stdcall*AddGameTrigger)(Trigger *a1);
extern unsigned (*setTriggerPlayerActivityState)();
extern int (__stdcall*ReadTriggerNodeData)(FILE *a1);
extern int (__stdcall*WriteTriggerData)(FILE *a1);
extern int (*initializeTriggerInfo)();
extern void (*UpdateCountdownTimer)();
void countdownTimersExecute(unsigned int a1);
extern void (__cdecl*keyPress_Escape)();
extern void (__fastcall*AnnouncePlayerEliminated)(int a1);
dlgEvent * ApplyPlayerLeftRoutine(unsigned __int8 a1);
extern dlgEvent * (__stdcall*Game_PlayerDropped)(int a1);
extern dlgEvent * (__stdcall*Game_PlayerLeft)(int a1);
extern void (*endgameCheck)();
extern void (__cdecl*load_endmission)();
extern void (__stdcall*BWFXN_ExecuteGameTriggers)(signed int dwMillisecondsPerFrame);
CBullet * sub_48A530(CBullet *result);
extern int (*sub_48A550)();
void BulletBehaviour_Instant(CBullet *bullet);
extern void (__thiscall*j_BulletBehaviour_ReAssign)(CBullet *a1);
extern int (*sub_48A610)();
extern int (*sub_48A650)();
extern void (*sub_48A670)();
extern int (*nullsub_48)();
extern void (__cdecl*InitializeBulletArray)();
extern int (*nullsub_49)();
extern CBullet * (*reorderBulletArrayReferences)();
extern char * (__thiscall*unpackBulletData)(CBullet *bullet, char *a2);
int packBulletData(CBullet *a1, int a2);
void assignWpnData(CBullet *result, BulletState a2);
extern CBullet * (__thiscall*BWFXN_clearUnitTarget)(CUnit *this_);
signed ReadBulletData(FILE *a1);
signed ReadBulletDataEx(FILE *a1);
char * sub_48ACA0(int a1);
int GetUnitBulletDamage(CUnit *a1, CBullet *a2);
extern BOOL (__thiscall*isUnitDistanceWithin)(CUnit *this_, CBullet *a2, unsigned int splash_radius);
extern signed (__fastcall*ReadBulletsArray)(int a1, FILE *a2, unsigned __int16 a3);
extern int (__stdcall*WriteBullets)(FILE *file);
extern BOOL (__thiscall*FindNextBounceTargetProc)(CUnit *this_);
extern signed (__fastcall*AirSplashProc)(CUnit *a1, CBullet *a2);
CUnit * FindNextBounceTarget(CBullet *a1);
void ProgressBulletMovement(CBullet *bullet);
void BulletBehaviour_Bounce(CBullet *bullet);
void BulletBehaviour_Fly(CBullet *bullet);
void BulletBehaviour_Area(CBullet *a1);
void BulletBehaviour_Follow(CBullet *a1);
int Splash(CBullet *a1, CUnit *a2);
extern int (__fastcall*SplashProc)(CUnit *a1, CBullet *a2);
extern int (__fastcall*AirSplashProc2)(CUnit *a1, CBullet *a2);
extern int (__fastcall*LurkerSplashProc)(CUnit *a1, CBullet *a2);
extern void (__stdcall*CBullet_Damage)(CBullet *bullet);
extern void (__thiscall*BulletBehaviour_Persist)(CBullet *bullet);
void ProgressBulletState(CBullet *bullet);
void BulletBehaviour_ReAssign(CBullet *a1);
signed InitializeBullet(CUnit *unit, __int16 a2, char player_id, CBullet *bullet, int weapon_type, int a6, int a7);
CBullet * CreateBullet(CUnit *a1, WeaponType weapon_id, int a3, __int16 a4, char a5, int a6);
extern void (__cdecl*ImageDrawingBulletDrawing)();
int sub_48C4A0(int result);
int sub_48C4B0(int result);
COrder * sub_48C4D0(COrder *result);
extern COrder * (__fastcall*createOrder)(Order a1, u16 a2, Position a3, struct CUnit *a4);
extern void (__cdecl*InitializeOrderArray)();
extern BOOL (*sub_48C720)();
extern int (*nullsub_50)();
extern int (*sub_48C740)();
extern COrder ** (*unpackOrderData)();
extern int (*packOrderData)(void);
signed ReadOrdersArray(FILE *a1);
size_t WriteOrders(FILE *savegame_file);
extern char (*sub_48C9F0)();
extern void (*sub_48CA00)();
extern void (__cdecl*CancelTargetOrder)();
extern char (__stdcall*sub_48CA90)(int a1, __int16 a2);
extern char (__stdcall*sub_48CAC0)(int a1);
extern void (*j_CancelTargetOrder)();
void issueTriTargetOrder(char a1, Order order, char a3);
extern u8 (*sub_48CB50)();
extern int (*nullsub_51)();
void updateTextDisplay(signed int line_number);
extern void (__cdecl*refreshGameTextIfCounterActive)();
void setUnitStatTxtErrorMsg(const char *message);
extern void (__cdecl*refreshGameTextIfFlagIsSet)();
void PrintText(const char *text, Color color, int tick_count, char flags);
extern void (*resetTextAndLineData)();
void showStatTxtToPlayer(char *result, int player);
void createTextMessageWithTimer(const char *text_message, int display_time);
extern void (*sub_48CF40)();
extern void (*BWFXN_DrawHighTarget)();
void InfoMessage(int timeout_ms, const char *text);
void display_error(const char *error_message, Color color);
void BWFXN_PrintText(int player, char *string, int replay_recorded_message);
extern void * (*freePlaceboxBuffer)();
extern int (*sub_48D5A0)();
extern int (*sub_48D5B0)();
extern void (__stdcall*placebuildingUpdateProc)(Bitmap *a1, WORD *arg4);
signed InitPlacementBoxPos_maybe(int a1);
extern WORD * (*sub_48D700)();
void getUnitPlaceboxSize(UnitType unit_type, WORD *height, WORD *width);
void sub_48D7B0(int a1);
int sub_48D7F0(int a1, int a2);
extern void (*sub_48D910)();
int placeBuildingMsg(int a1);
extern void (__cdecl*refreshLayer3And4)();
void sub_48DA30(UnitType unit_type);
extern void (__stdcall*sub_48DAF0)(int a1, UnitType a2);
BOOL CMDRECV_PlaceBuildingAllowed(CUnit *a1, UnitType ax0, Order a3);
extern CUnit * (__stdcall*sub_48DCD0)(int a1);
extern int (*UpdatePlacementStateForPlacementBox_maybe)();
extern BOOL (*_PlaceBuildingAllowed)();
extern void (__fastcall*refreshScreen)();
void sub_48DE70(CUnit *a1, Order a2, int a3, UnitType a4);
void sub_48DFF0(CUnit *a1);
extern void (__stdcall*cmdRECV_PlaceBuildingNormal)(__int64 a1, int unit_type);
extern void (__stdcall*cmdRECV_PlaceBuildingAddon)(__int64 a1, int a2);
int cmdRECV_PlaceBuilding(unsigned __int16 ax0, unsigned int a2, int a3);
void placebuildingRefineryCheck(CUnit *result);
extern void (__stdcall*doPlacebuildingChecking)(CUnit *a1);
extern void (*refreshPlaceBuildingLocation)();
extern void (*placebuildingRefineryProc)();
extern void (__cdecl*placebuildingNormalProc)();
void input_placeBuilding_Click_Notify(BYTE *a1, UnitType *a2, char a3);
extern void (*sub_48E5A0)();
extern void (__fastcall*input_placeBuilding_LeftMouseClick)(dlgEvent *event);
extern void (__stdcall*sub_48E640)(char a1);
extern void (*pracebuildingProc)();
void issuePlacebuildingOrder(UnitType a1, char a2);
int getSfxPanFromXDistance(signed int a1);
extern int (*sub_48E8C0)();
int getSfxVolumeFromScreenDistance(__int16 x, __int16 y);
SfxData rndGetSfxBetween(SfxData a1, SfxData a2);
extern void (__fastcall*input_Game_Idle)(dlgEvent *this_);
extern int (__fastcall*resetUnitAttackNotifyTimer)(CUnit *a1, CUnit *a2);
extern unsigned (__fastcall*sub_48EA00)(SfxData a1);
SfxData getUnitPissSfxOrBldgWhatSfx(UnitType unit_type, int a2);
extern SfxData (__fastcall*GetRndYesSfx)(UnitType a1);
CUnit * resetAllUnitAttackNotifyTimersInRange(int a1);
BOOL unitCanPlaySFX(int a1);
extern char (*sub_48EB90)();
extern BOOL (*MuteUnitSpeech_maybe)();
void PlaySoundAtPos(SfxData sfx, points a2, int a3, int a4);
int PlaySound(SfxData sfxId, CUnit *sourceUnit, int a3, signed int a4);
void ShowErrorMessageWithSfx(int playerId, __int16 statTxtId, SfxData sfxId);
int sub_48EEF0(int a1);
void get_statTxt_Str_0(const char *a1, CUnit *unit, int a3);
void playBuildPlacementSound_0(unsigned __int16 a1);
void playUpgradeCompleteSound(CUnit *a1);
void playResearchCompleteSound(CUnit *a1);
extern void (__stdcall*doAttackNotifyEvent)(CUnit *a1);
void PlayBuildingCompleteSound(CUnit *a1);
void playMorphingCompleteSound(CUnit *a1);
void PlayWorkerActionSound(CUnit *a1);
void playBuildingLandSound(CUnit *a1);
void playBuildPlacementSound(CUnit *a1);
void PlayWorkerErrorSound(CUnit *unit, int a2);
void SetWorkerError(CUnit *a1, int a2);
void PlayBuildingLiftoffSound(CUnit *a1);
extern void (__stdcall*selectBuildingSFX)(CUnit *a1);
extern void (__stdcall*LoadRaceSFX)(char a1);
signed prepareMessageTeamFilter(signed int result);
extern signed (*prepareMessageAllyFilter)();
void msgfltr_OK(dialog *result);
extern unsigned (__stdcall*sub_490000)(int arg0);
int sub_4900A0(dialog *a1, int a2);
dlgEvent * sub_4900C0(dialog *a1, int player_id);
char sub_490110(dialog *a1);
void sub_4901A0(dialog *a1, int player_id);
extern void (__fastcall*cbForceEntryUpdateFxn)(dialog *dlg, int x, int y, rect *dst);
void updateForceNamesAndCallbacks(dialog *a1, int player_id);
extern unsigned (__thiscall*sub_490300)(dialog *this_);
extern void (__thiscall*sub_490570)(dialog *this_);
extern bool (__fastcall*allyfltr_VisionBox)(dialog *dlg, dlgEvent *evt);
char sub_4908E0(struct dlgEvent *a1, dialog *a2);
extern bool (__fastcall*allyfltr_AllianceBox)(dialog *dlg, dlgEvent *evt);
extern bool (__fastcall*msgfltr_SendToText)(dialog *dlg, struct dlgEvent *evt);
u8 sub_490A50(dialog *a1);
extern bool (__fastcall*allyfltr_AllyVictoryBox)(dialog *dlg, dlgEvent *evt);
void AllyFltr_CustomCtrlID(dialog *a1);
extern int (__fastcall*msgfltr_EditBox)(dialog *dlg, struct dlgEvent *evt);
void msgfltr_MainBox(dialog *a1);
void sub_490E70(dialog *a1);
void sub_490E90(dialog *a1);
extern int (__fastcall*msgfltr_Main)(dialog *dlg, dlgEvent *evt);
extern void (*sub_490FC0)();
void CMDACT_AllyVisionPair(dialog *a1);
extern int (__fastcall*allyFltr_Main)(dialog *dlg, dlgEvent *evt);
extern void (__cdecl*MinimapControl_ShowAllianceDialog)();
extern void (*sub_491450)();
CUnit * Unit__SpendEnergy(CUnit *result, __int16 energy);
extern BOOL (__stdcall*Unit__HasEnergy)(int a1, unsigned __int16 a2);
signed getSpecialOrderErrorStatstring(int tech, UnitType unit_type);
extern int (*sub_491520)();
signed InitializeBurrowedUnitsLinkedListRef(FILE *a1);
extern int (__stdcall*writeBurrowedUnitIndex)(FILE *a1);
extern int (*sub_491670)();
extern int (*sub_4916A0)();
extern signed (__thiscall*IsUnitCloaking)(CUnit *this_);
void secondaryOrd_Cloak(CUnit *result);
BOOL unitHasStatusEffect(CUnit *a1);
signed BWFXN_GetMaxEnergy(CUnit *a1);
void sub_491A30(CUnit *a1);
Tech getCloakingTech(CUnit *a1);
signed getCloakingSomething(CUnit *a1);
extern BOOL (__fastcall*sub_491AE0)(int a1, CUnit *a2);
void ApplyCloakingOrder(CUnit *result);
extern int (*sub_491BF0)();
extern int (*GetDarkArchonEnergy)(void);
void secondaryOrd_CloakNearbyUnits(CUnit *a1);
int CanCastOrderedSpellNow(CUnit *a1);
__int16 getTargetUnitAbilityErrorStatString(CUnit *a1, char player_id, int tech);
BOOL getOrderTargetErrorString(Tech2 tech, CUnit *a2, UnitType a3, CUnit *a4, __int16 a5, int a6, int a7);
signed canCastSpell_0(CUnit *a1);
char RemoveOverlaysBetween(unsigned int a1, CUnit *a2, unsigned int a3);
signed SpellOrder_MoveTowardsTarget(int range, CUnit *a2);
int OrderedSpell_ProgressMoving(CUnit *a1, int a2);
signed SpellOrder(int default_error_str, CUnit *a2, Tech2 tech, int a4, int a5);
void orders_Spell(CUnit *a1);
void EMPShockwaveHit(__int16 x, __int16 y, CUnit *attacker);
void FreezeUnit(CUnit *a1);
void ApplyUnitEffects(CUnit *unit);
void sub_492E80(int a1, CUnit *a2);
extern void (*updateBurrowingCloakingUnits)();
void updateUnitStatusTimers(CUnit *unit);
void removeFromPsiProviderList(CUnit *result);
BOOL sub_493160(int a1);
extern int (__thiscall*MergeUnitStatusEffects)(_DWORD a1);
extern void * (*sub_493290)();
extern void (*sub_4932C0)();
void secondaryOrd_ShieldBatteryRecharging(CUnit *a1);
extern void (*initializePsiFieldData)(void);
CheatFlags ApplyRechargeShields(int a1, int a2);
BOOL unitCanRechargeShields(CUnit *a1, CUnit *a2);
extern void (__cdecl*RemoveAllPylonAuras)();
extern void (*createPylonAura)();
signed unitHasPower(unsigned __int16 a1, int a2, int a3, char a4);
extern void (__cdecl*updateUnitPower)();
extern int (__fastcall*orderAllMoveToRechargeShieldsProc)(CUnit *a1, CUnit *a2);
void Orders_HarvestInterrupt(CUnit *unit);
void orders_RechargeShields2(CUnit *a1);
void orders_cloakNearbyUnits(CUnit *unit);
void orders_CompletingArchonSummon(CUnit *unit);
extern CSprite * (__thiscall*sub_493BF0)(CUnit *this_);
void PrepareUnitMoveClearRefs(CUnit *unit, bool hideUnit);
void orders_RechargeShields1(CUnit *unit);
void orders_InitPsiProvider(CUnit *a1);
extern void (*CreateAllPylonAuras)();
extern void (*hideAllPsiFields)();
void RefreshRevealUnitAfterMove(CUnit *unit);
void doRecallMoveUnit(CUnit *unit, CUnit *a2);
extern int (__fastcall*recallUnitsCB)(CUnit *a1, CUnit *a2);
extern void (__stdcall*orders_Recall)(CUnit *a1);
void orders_WarpingDarkArchon(CUnit *unit);
void orders_WarpingArchon(CUnit *unit);
extern int (*nullsub_52)();
extern int (*sub_494AC0)();
extern int (*sub_494AE0)();
int sub_494B10(int result, int a2, int *a3, int *a4);
extern int (*sub_494B40)();
void AttackFlyToTarget(CBullet *bullet, int x, int y);
extern int (__fastcall*setSecondaryWaypoint)(_DWORD a1, _DWORD a2);
unsigned sub_494BD0(int direction, char a2);
extern int (*sub_494BF0)();
int arctangent(int slope);
char * sub_494C60(char *result);
char ** sub_494C70(char **result, int a2);
int packFlingyData(unsigned int *a1, int a2);
extern unsigned (*initializeFlingyArray)();
extern int (*sub_494ED0)();
extern int (*sub_494F20)();
extern void (__fastcall*sub_494F60)(CFlingy *a1, s32 a2);
extern s32 (__thiscall*getFlingyHaltDistance)(CFlingy *this_);
extern int (__thiscall*sub_494FE0)(CUnit *this_);
void ProgressMovementFlag(CUnit *result);
CUnit * Unit_MatchVelocityWithDirection(CUnit *result);
CUnit * SetUnitMovementSpeed(CUnit *result, int a2);
extern int (*sub_495200)();
CBullet * ChangeMovePos(CBullet *result, int y, int x);
extern int (*sub_495290)();
extern int (*sub_4952C0)();
signed GetAngle(int x_start, int y_start, int x_end, int y_end);
extern void (__cdecl*CleanupFlingyDat)();
int packUnpackFlingyData(int a1);
CBullet * sub_495400(CUnit *a1, CUnit *a2);
void sub_495580(CUnit *a1);
void sub_495590(CFlingy *a1, int x, int y);
void AppearOnTarget(signed __int16 y, __int16 x, CFlingy *flingy);
CFlingy * uflunstableRandomize(CFlingy *result);
s32 sub_4956C0(CUnit *a1);
void setResourceGatheringFlags(int a1);
CUnit * Unit_AssignNextWP(CUnit *a1);
void sub_4958C0(CFlingy *flingy);
s32 sub_495980(unsigned __int8 a1, int a2, CUnit *a3);
extern int (*sub_495A10)();
extern int (__stdcall*ReadFlingyArray)(FILE *a1);
extern int (__stdcall*WriteFlingys)(FILE *file);
void sub_495CB0(CFlingy *a1);
void sub_495E80(unsigned __int8 a1, CUnit *a2);
void sub_495EE0(CUnit *a1);
void turnUnit(CUnit *unit, char direction);
void sub_495F90(CUnit *a1);
extern signed (__stdcall*sub_496030)(CUnit *a1);
extern char (__thiscall*sub_496140)(CUnit *this_);
void turn_unit_left(CUnit *unit, char a2);
void turn_unit_right(CUnit *unit, char a2);
void sub_4961B0(CUnit *unit);
void UpdateImage(CUnit *unit);
extern void (*UpdateImages)();
CSprite * sub_496360(int flingyID, __int16 a2, int position_y, CFlingy *a4, char a5, char a6);
CFlingy * ISCRIPT_CreateFlingy(char a1, __int16 a2, int a3, FlingyID flingy_id);
extern void (__cdecl*InitializeFlingyDat)();
extern char (__fastcall*sub_496560)(int a1);
extern void (__cdecl*sub_4965A0)();
BYTE * sub_4965D0(unsigned __int8 a1, int a2);
extern int (*sub_4967A0)();
extern void (__fastcall*centerviewUnitGroup)(unsigned __int8 a1);
extern __int16 (__stdcall*sub_496940)(unsigned __int8 a1);
extern void (__stdcall*selectUnitGroup)(unsigned __int8 index);
extern int (__stdcall*selectSingleUnitFromID)(int a1);
void sub_496E90(unsigned __int8 a1);
extern int (*nullsub_53)();
extern unsigned (__thiscall*sub_496EB0)(void *this_);
extern int (*sub_496ED0)();
extern int (__stdcall*sub_496EE0)(int a1, int a2);
extern int (__thiscall*clearUnitSprites)(_DWORD a1);
int sub_496F80(int a1);
int sub_496FB0(int result);
int * sub_496FC0(void *a1, char *a2, int *a3);
extern void (*EnableVisibilityHashUpdate)();
int isImageRefreshable(CImage *image);
void refreshImage(CImage *a1);
extern void (__stdcall*sub_4970F0)(CImage *a1);
extern void (__cdecl*createUnitBuildingSpriteValidityArray)();
extern void (__cdecl*initializeSpriteArray)();
CSprite * unpackSpriteData(CSprite *sprite);
extern void (__thiscall*packSpriteData)(CSprite *this_);
extern int (__thiscall*sub_497400)(int this_);
void setAllImageGroupFlagsPal11(CSprite *sprite);
CImage * getSpriteUnderlay(CSprite *a1, unsigned int a2, unsigned int a3);
void refreshAllVisibleImagesAtScreenPosition(CSprite *a1, char a2);
void refreshGrpImage(CSprite *sprite);
char removeSelectionCircleFromSprite(CSprite *a1);
extern char (__thiscall*removeSelectionCircle)(CSprite *this_);
char removeSelectionCircleAndHPBar(CSprite *a1);
char sub_497690(int a1);
int sub_4976A0(int a1);
int sub_4976B0(int a1);
void refreshAllVisibleSprites(CSprite *a1);
void refreshCarryableSprite(CSprite *sprite);
int getSpriteRect(int a1, _DWORD *a2);
void playIdleIscript(CSprite *a1);
void spriteToIscriptLoop(CSprite *a1);
void sub_497A10(CSprite *sprite, __int16 x, __int16 y);
int sub_497B20(int result, char a2);
void SpriteDestructor(CSprite *sprite);
int sub_497C10(int a1);
void UpdateVisibilityHash(int a1);
void drawImage(CImage *image);
extern void (__cdecl*CleanupSpritesDat)();
extern void (*sub_497D80)();
extern void (*sub_497DA0)();
CImage * setSpriteColoringData(CSprite *a1, unsigned __int8 a2);
signed sub_497E10(CSprite *a1, int a2, int a3);
CImage * updateSpriteFlagOnPalette(CSprite *a1);
void makeSpriteVisible(CSprite *a1);
char sub_497F80(CSprite *a1);
char sub_497FA0(CSprite *a1);
void sub_497FD0(char a1, CSprite *a2, unsigned __int8 a3, char a4);
CImage * sub_4980F0(CSprite *a1);
void Sprite_SetVerticalOffset(CSprite *sprite, char a2);
void sub_498170(CSprite *a1);
CImage * updateCarryableSpriteFlag(CSprite *a1);
extern int (__stdcall*sub_498220)(int a1, int a2);
int sub_498260(int *a1, int a2, int *a3);
extern void (__stdcall*DoVisibilityUpdate)(int a1, unsigned int a2);
void refreshSpriteData(CSprite *sprite);
CImage * sub_498450(int a1);
void unknownColorShiftSomething(u8 result, char a2);
extern int (__stdcall*ReadSpritesArray)(FILE *a1);
extern BOOL (__stdcall*writeSprites)(FILE *file);
extern void (__cdecl*RemoveAllSelectionCircles)();
void sub_498A10(CSprite *a1);
void UpdateSpriteImagesForCloak(CSprite *a1);
void sub_498B20(CSprite *result, char a2);
void sub_498B50(CSprite *a1, unsigned __int8 a2);
void SetAllSpriteImageOverlaysDirection(CSprite *a1, unsigned __int8 direction);
void drawSprite(CSprite *a1);
void refreshImageRange(int result, unsigned int a2);
extern void (*BWFXN_updateImageData)();
extern void (__cdecl*BWFXN_drawAllSprites)();
void sub_498D70(CSprite *a1, int esi0, char a3, char a4, int a5);
CImage * CreateImageOverlay(CSprite *a1, int esi0, char a3, char a4, int a5);
void CreateOverlay(CSprite *a1, int esi0, char a3, char a4, int a5);
CImage * sub_498F40(CSprite *a1, int a2, char a3, char a4, unsigned int a5);
signed initSpriteData(unsigned __int16 x, unsigned __int16 y, int sprite_id, char player_id, CSprite *sprite);
CSprite * createSprite(int sprite_id, int position_x, unsigned __int16 position_y, char player_id);
extern CSprite * (__stdcall*sub_499210)(CSprite *a1);
CImage * sub_499380(CSprite *a1, int a2);
extern void (__stdcall*CreateDamageOverlay)(CSprite *a1);
extern void (__stdcall*CreateBuildingFlames)(CSprite *a1);
int CreateSpriteEx(int result, CSprite *a2, unsigned __int8 a3, int a4, int a5, char a6);
void sub_499730(CSprite *a1);
void sub_4997A0(int a1, CSprite *a2, int a3);
int CreateLandingDustOverlays(CSprite *a1);
int CreateLiftoffDustOverlays(CSprite *a1);
void sub_499860(int sprite_id, CSprite *a2);
extern void (__cdecl*InitializeSpriteArray)();
extern _DWORD (__stdcall*CreateDashedSelection)(_DWORD a1);
extern void (__cdecl*CreateAllSelectionCircles)();
void ReplaceSpriteOverlayImage(CSprite *a1, int a2, char a3);
extern void (__thiscall*playSpriteIscript)(CSprite *sprite, Anims animation, int a3);
extern unsigned (*sub_499D40)();
size_t GameResultText(int *a1, char **player_names, const char *a3, const char *a4);
extern unsigned (*sub_499E00)();
extern char * (*GetLeagueTimestamp)();
int createLeagueFile(char *a1);
extern int (__stdcall*StoreString)(char *source);
extern void * (*sub_49A060)();
BOOL IsHumanPlayerOnSameTeam(int a1);
int sub_49A170(CUnit *a1, int player);
extern int (*nullsub_54)();
signed isRgnIdNeighbor(unsigned __int16 a1, __int16 a2);
extern int (*isSelectedUnitGroupEnabled)();
extern int (*sub_49A320)();
BOOL compareUnitRank(CUnit *a1, CUnit *a2);
signed sub_49A410(CUnit *a1, Order a2);
signed sub_49A480(Order a1, CUnit *a2);
extern void (__stdcall*GetFormationMovementTarget)(CUnit *unit, int a2);
char sub_49A740(int a1);
signed sub_49A7F0(CUnit *a1);
extern CUnit * (__cdecl*GetActivePlayerNextSelectionFunc)();
extern CUnit * (*sub_49A8B0)();
char PrepareFormationMovement(int a1, char a2);
extern char (__stdcall*sub_49AB00)(__int16 a1, __int16 a2, CUnit *a3, __int16 a4, Order a5, char a6);
void CreateNewUnitSelectionsFromList(CUnit **a1, int unit_count);
extern signed (__stdcall*selectMultipleUnitsFromUnitList)(int a1, CUnit **a2, char a3, int a4);
int sub_49AF80(int a1, int a2, CUnit *a3);
extern int (__stdcall*sub_49AFE0)(char a1);
extern int (*sub_49B010)();
extern int (*sub_49B020)();
extern int (__fastcall*sub_49B030)(int a1);
unsigned sub_49B050(unsigned int result);
extern signed (*sub_49B060)();
unsigned getColourID(unsigned int result);
int setPlayerColours(int result, char *a2);
void sub_49B1C0(CUnit *a1);
Order sub_49B1E0(CUnit *a1);
unsigned sub_49B280(CUnit *a1);
char AI_CloakUnit(CUnit *a1);
extern void (__stdcall*set_unit_player_palette)(u8 player_id);
extern void * (__stdcall*RandomizePlayerColours)(void *a1);
unsigned sub_49B410(CUnit *a1);
void DoCloak(CUnit *a1, SfxData sfx_id);
extern void (*initializePlayerColours)();
void PlaySoundFromDirect(CUnit *a1, SfxData sfx_id);
extern u8 (*sub_49B690)();
extern u8 (*setAlliance)();
BOOL sub_49B8D0(int *a1, int *a2, int *a3, int *a4);
void drawMegatileImageData(int megatile, int framebuf_position, int x, int y);
extern int (*sub_49BB50)();
extern int (*sub_49BB90)();
extern int (__stdcall*sub_49BC20)(int x, int y, int a3, int a4);
unsigned UpdateTileCacheOnXScreenMovement(unsigned int a1, _WORD *a2, unsigned int a3);
unsigned UpdateTileCacheOnYScreenMovement(int a1, _WORD *a2, unsigned int a3);
extern int (*sub_49BF20)();
extern unsigned (__thiscall*sub_49BF70)(void *this_);
extern unsigned (__fastcall*sub_49BFA0)(int a1);
extern void (__cdecl*BWFXN_UpdateScreenPosition)();
signed moveToXScrIncrease(int a1);
int moveToXScrDecrease(int a1);
int moveToYScrIncrease(int a1);
int moveToYScrDecrease(int a1);
void BWFXN_MoveScreen(unsigned int a1, unsigned int a2);
extern void (__cdecl*updateActiveTileInfo)();
void drawScreenRowTiles(__int16 *a1, TileID *a2, MegatileFlags *a3, int a4, int a5);
extern void (__cdecl*BWFXN_drawMapTiles)();
int sub_49C870(unsigned __int16 a1);
int sub_49C890(unsigned __int16 a1, int a2);
int getRegionNeighborsFromId(unsigned __int16 a1, int a2);
extern int (*sub_49C8F0)();
int sub_49C900(int result, unsigned __int16 a2);
u16 sub_49C930(unsigned __int16 a1);
BOOL sub_49C950(unsigned __int16 a1);
BOOL sub_49C980(unsigned __int16 a1);
u16 SAI_GetRegionIdFromPx(__int16 y, __int16 x);
unsigned GetRegionIdAtPosEx(signed int y, signed int x);
int getRegionCenterFromId(unsigned __int16 a1, int a2);
int getRegionCenterFromId2(unsigned __int16 a1, int a2, int a3);
BOOL sub_49CAE0(signed int a1, signed int a2);
extern void (*sub_49CB10)();
unsigned getRegionIdFromUnit(CUnit *a1);
BOOL HasPathToPos(CUnit *a1, signed int y, signed int x);
BOOL HasPathToTarget(CUnit *a1, CUnit *a2);
extern signed (*sub_49CC10)();
extern int (*sub_49CC30)();
extern void (__cdecl*savePlayerSlotTypesAndRace)();
BOOL sub_49CCA0(__int16 *a1);
extern int (__fastcall*airTrainingProc)(CUnit *a1, CUnit *a2);
signed sub_49CDC0(__int16 a1, __int16 a2, CUnit *a3, int a4, __int16 a5, __int16 a6, int a7);
bool CheckUnitCollisionPos(__int16 *move_area, CUnit *unit, Position *inPos, Position *outPos, bool hideErrorMsg, int flags);
extern int (__fastcall*SelfDestructCB)(CUnit *unit, CBullet *bullet);
__int16 sub_49D660(CUnit *a1);
extern void (__stdcall*CreateInitialOverlord)(unsigned __int8 player_index);
void CreateInitialMeleeWorker(RaceId race, unsigned __int8 player_index);
void CreateInitialMeleeBuildings(RaceId race, unsigned __int8 player_index);
extern void (__cdecl*CreateInitialTeamMeleeUnits)();
extern void (__cdecl*CreateInitialMeleeUnits)();
CUnit * sub_49DC20(CUnit *result);
CUnit * sub_49DC60(CUnit *result);
CUnit * CListPushBackUsedUnitEntry(CUnit *result);
CUnit * CListPushBackHiddenUnitEntry(CUnit *result);
CUnit * sub_49DD20(CUnit *result);
CUnit * sub_49DD60(CUnit *result);
CUnit * sub_49DDB0(CUnit *result);
CUnit * CListRemoveEmptyUnitEntry(CUnit *result);
CUnit * CListRemoveHiddenUnitEntry(CUnit *result);
CUnit * CListRemoveUsedUnitEntry(CUnit *result);
extern int (__stdcall*get_zero)(int a1, int a2, int a3);
CUnit * GetFirstPlayerUnit(int player_id);
BOOL isUnitTypeAtPositionInBounds(unsigned __int16 a1, int a2, int a3);
extern CUnit * (*sub_49DF70)();
extern CUnit * (*sub_49DF80)();
extern CUnit * (*sub_49DF90)();
extern CUnit * (*sub_49DFA0)();
CUnit * sub_49DFB0(unsigned __int8 a1);
extern CUnit * (*sub_49DFC0)();
extern CUnit * (*sub_49DFD0)();
extern CUnit * (*sub_49DFE0)();
extern CUnit * (*sub_49DFF0)();
extern CUnit * (*sub_49E000)();
extern unsigned (*ReassignTargetAcquisitionRange)();
u16 GetOrderEnergyCost(Order order);
extern CUnit * (*sub_49E1E0)();
CUnit * InitializeEmptyUnitsLinkedListRef(int a1);
extern CUnit * (*sub_49E260)();
CUnit * sub_49E290(CUnit *result);
CUnit * sub_49E2D0(CUnit *result);
extern DatLoad * (*uselessIterateUnitsAndOrdersDatLoadTables)();
CUnit * removeUnitFromList(CUnit *a1);
void sub_49E3F0(CUnit *result);
extern void (__fastcall*sub_49E4E0)(CUnit *a1, char player_id);
extern void (__stdcall*displayLastNetError)(unsigned __int8 player_id);
extern COrder * (__thiscall*sub_49E590)(CUnit *this_, CUnit *a2);
extern _DWORD (__stdcall*ReadUnitDataInfo)(FILE *a1, _DWORD a2);
extern signed (__stdcall*ReadUnitDataInfoEx)(FILE *a1, int a2);
int sub_49E8A0(int result, CUnit *a2);
signed ReadUnitsArray(FILE *a1, unsigned __int16 a2);
void selectNewGUIUnitPortrait(CUnit *a1, CSprite *a2);
signed sub_49EC30(CUnit *a1);
signed sub_49ECF0(CUnit *a1, __int16 a2, UnitType unit_type, int a4, char a5);
int sub_49EF90(CUnit *a1);
extern char (__thiscall*GiveUnit)(CUnit *this_, int player_id, int a3);
int sub_49F170(CUnit *a1, UnitType a2);
extern void (__cdecl*resetOrdersUnitsDAT)();
void UnitDestructor_SpecialCases(CUnit *a1);
void sub_49F6A0(CUnit *a1, UnitType a2);
void sub_49F7A0(CUnit *a1);
void sub_49F860(CUnit *a1, UnitType a2);
void updateUnitStrengthAndApplyDefaultOrders(CUnit *a1);
void sub_49FD00(CUnit *result);
char killAllLoadedUnits(CUnit *a1);
void replaceUnitWithType(CUnit *a1, UnitType a2);
signed sub_4A0080(CUnit *a1);
void updateUnitStatsFinishBuilding(CUnit *a1);
signed InitializeUnitBase(UnitType a1, CUnit *a2, int a3, __int16 a4, int a5);
CUnit * UnitConstructor(UnitType unit_type, int position_x, int position_y, int player_id);
void _UnitDestructor(CUnit *a1);
int Init_AI_UnitData(CUnit *a1);
extern void (__thiscall*UnitDestructor)(CUnit *this_);
CUnit * CreateUnit(UnitType unit_type, int position_x, int position_y, int player_id);
CUnit * AI_CreateUnit(signed int a1, int a2, int a3, int a4);
extern void (*sub_4A0E10)();
int AI_Alliance(__int16 *a1, int a2, unsigned __int8 a3);
extern AiCaptain * (*sub_4A0EB0)();
extern CUnit * (__fastcall*getClosestEnemyUnitToRegionPlayer)(int a1, int a2, int a3, int a4, int a5);
CUnit * getClosestEnemyUnitToRegionAll(void *this_, signed int eax0, int a3);
extern signed (__fastcall*sub_4A1060)(int a1, int a2, unsigned __int16 a3);
extern int (*sub_4A10A0)();
extern int (*sub_4A10B0)();
signed sub_4A10C0(CUnit *a1);
extern void (*j_calculateUnitStrengths)();
BOOL SaveWriteAIData(FILE *a1);
unsigned isTargetAIControlled(CUnit *a1, CUnit *a2);
BOOL LoadGameAI(FILE *a1, unsigned __int16 a2);
bool CanCastSpellOrder(CUnit *unit, Tech2 tech_id, Order order_id);
void AI_DecloakAfterNuke(CUnit *a1);
bool AiCastSpellOrder(CUnit *unit, CUnit *target, Order order, u8 aiActionFlag);
void sub_4A12C0(CUnit *unit);
void sub_4A1340(CUnit *unit);
extern void (*sub_4A13B0)();
signed AI_CastSpellBehaviour(CUnit *a1, int unknown_flag);
void orders_Neutral(CUnit *a1);
void orders_AIPatrol(CUnit *a1);
extern void (__fastcall*RemoveAIControl)(CUnit *a1, int a2);
extern void (__cdecl*GameInitAI)();
void orders_RescuePassive(CUnit *a1);
extern void (__fastcall*AI_SwitchRescue)(int a1, int a2);
extern int (*sub_4A2370)();
char AI_Move_DT(CSprite *a1, int a2, int a3);
signed AI_UnitBehaviour(CUnit *a1);
void AI_TrainingUnit(CUnit *a1, CUnit *a2);
void orders_comp_ai(CUnit *unit);
extern char (*sub_4A2AF0)();
extern void (*AI_Loop)();
extern unsigned (*sub_4A2B20)();
extern DWORD (*sub_4A2B60)();
extern int (__stdcall*sub_4A2B90)(int a1);
int sub_4A2BC0(int result);
extern void (__cdecl*TickCounterDestroy)();
extern void (*TickCounterInit)(void);
void randomizePlayerValues(unsigned int a1, const void *a2);
extern unsigned (*getElapsedGameTimeSeconds)();
void updateDropCountdownTimerTxt(dialog *a1);
extern void (*sub_4A2D40)();
extern void (*UpdateNetTimeoutPlayers)();
extern void (*updateCountdownDropTimer)();
extern int (*GetPlayerNames)();
extern int (*j_GetPlayerNames)();
extern int (*sub_4A3140)();
extern void (*dropTimerProc)();
extern int (__fastcall*Timeout_BINDLG)(dialog *dlg, struct dlgEvent *evt);
extern void (__cdecl*loadTimeoutDlg)();
extern void (__cdecl*timeoutProcDropdown)();
extern void (__stdcall*MinimapPing_maybe)(unsigned __int16 pos_x, unsigned __int16 pos_y, char a3);
extern void (__fastcall*MiniMapUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__cdecl*CreateMinimapSurface)();
extern void (*sub_4A3790)();
__int16 sub_4A37A0(int a1, int a2, int a3, int a4, int a5);
extern u8 (*sub_4A3870)();
extern int (*sub_4A39D0)();
extern _BYTE * (__thiscall*sub_4A39E0)(_BYTE *this_, _BYTE *a2);
extern void (__cdecl*sub_4A3A00)();
extern void (__cdecl*minimapVisionUpdate_192_256)();
extern void (__cdecl*minimapVisionUpdate_96_128)();
extern void (__cdecl*minimapVisionUpdate_64)();
char sub_4A3D40(__int16 a1, int a2);
void getMinimapCursorPos(int *x, int *y);
BOOL sub_4A3E00(unsigned __int16 a1);
void killMinimapPreviewDlg(dialog *a1);
void minimapGameResetMouseInput(dialog *dlg);
extern void (__fastcall*MinimapImageUpdate)(dialog *dlg, int x, int y, rect *dst);
void drawUnitBox(char color, unsigned int x, unsigned int y, unsigned __int8 a4, unsigned __int8 a5, char a6);
extern void (__cdecl*sub_4A4150)();
extern void (__cdecl*minimapSurfaceUpdate_192_256)();
extern void (__cdecl*minimapSurfaceUpdate_96_128)();
extern void (__cdecl*minimapSurfaceUpdate_64)();
extern void (__cdecl*setMapSizeConstants)();
extern void (__fastcall*drawMinimapUnitBox)(int player_id);
extern void (__fastcall*drawMinimapUnitBox2)(int player);
void drawAllMinimapUnitBoxes(int a1);
BOOL sub_4A49F0(CUnit *a1);
extern void (__fastcall*updateMinimapPositioninfoProc)(dialog *a1, __int16 a2);
extern void (*drawAllMinimapBoxes)();
extern void (__thiscall*drawShowHideTerrainContextHelp)(dialog *this_);
void sub_4A4CA0(char a1);
extern void (*sub_4A4CB4)();
void minimapGameUpdate(dialog *dlg);
void minimapGameMouseUpdate(dialog *dlg);
extern void (__fastcall*Minimap_TimerRefresh)(dialog *dlg, __int16 timer_id);
extern void (__fastcall*updateMinimapSurfaceInfoProc)(dialog *a1, __int16 a2);
extern void (__fastcall*updateMinimapSurfaceInfo2Proc)(dialog *dlg, __int16 a2);
extern void (__fastcall*playerInfoSomethingTvBProc)(dialog *a1, __int16 a2);
extern void (__thiscall*drawStatLBBtnsContextHelp)(dialog *this_);
extern void (*sub_4A51D0)();
extern void (*nullsub_70)();
extern void (*minimapPreviewUpdateState)();
void Minimap_InitVisionButton(dialog *a1);
extern void (__stdcall*MinimapGameRightclickEventMoveto)(dialog *dlg);
void MinimapGameClickEvent(dialog *dlg, dlgEvent *event);
void minimapPreviewMouseUpdate(dialog *a1, struct dlgEvent *a2);
void minimap_dlg_MouseMove(dialog *a1, struct dlgEvent *a2);
void minimap_dlg_Activate(dialog *a1);
extern int (__fastcall*MinimapButton_EventHandler)(dialog *a1, dlgEvent *a2);
void MinimapGameTargetOrder(dlgEvent *event);
extern int (__fastcall*MinimapImageInteract)(dialog *dlg, dlgEvent *evt);
void updateMinimapPreviewDlg(dialog *a1);
extern int (__fastcall*MiniMapPreviewInteract)(dialog *dlg, dlgEvent *evt);
extern void (*load_gluMinimap)();
extern void (*load_MinimapPreview)();
extern char (*sub_4A5E30)();
BOOL getArchiveName(HANDLE a1);
extern int (*getMusicVolume)();
signed sub_4A5F10(signed int result);
extern void (__cdecl*stopMusic)();
extern void (__stdcall*FadeMusicProc)(HWND a1, UINT a2, UINT a3, DWORD a4);
extern char (*sub_4A60D0)();
extern char (*sub_4A6100)();
void PlayMusic(MusicTrack a1);
extern void (*playNextMusic)();
extern void (*playRadioFreeZerg)();
void DLGMusicFade(MusicTrack music_track);
extern void (*sub_4A6390)();
struct_v4_1 * sub_4A63A0(int a1, int a2, int a3, int a4);
int sub_4A6470(const char *a1);
void * LoadRecentMapsRegistry(int *a1);
int GetMapNameOrdering(const char *filename, char *other);
extern void (__cdecl*sub_4A6580)();
ListNode * mapEntry_Append(MapDirEntry *a1);
extern int (__stdcall*mapEntryAdd)(MapDirEntry *entry);
extern void (*cleanupBNListboxData)();
signed sub_4A68D0(GameData *a1, unsigned __int8 game_speed);
extern MapDirEntry * (__thiscall*sub_4A6A00)(MapDirEntry *this_);
MapDirEntry * findMapVectorEntryFromFullPath(const char *a1);
MapDirEntry * AddFileToMapDirListing(const char *a1, const char *a2, MapDirEntryFlags flags);
int * AddDirectoryToMapDirListing(const char *a1, const char *source);
LRESULT GetMapDirListIndex(const char *filename, LRESULT (__stdcall *a2)(LPARAM a1, LPARAM lParam, char a3));
int GetMapDirEntryInformation(MapDirEntry *entry, struct_a2 *a2);
extern char * (*LoadRecentMapsCombobox)();
void fileExt(const char *a1, int ebx0, MapDirEntryFlags flags);
MapDirEntry * save_Recent_Map_Data(MapDirEntry *result);
int getMapListEntryCount(int (__stdcall *callback)(MapDirEntry *, char *, MapDirEntryFlags), int a2, char *a3, char *a4);
extern void (__stdcall*sub_4A7540)(MapDirEntry *a1);
void FullyLoadMapDirEntry(MapDirEntry *map_dir_entry);
void sub_4A79D0(MapDirEntry *a1);
void LoadReplayMapDirEntry(MapDirEntry *replay);
extern void (__stdcall*sub_4A7F50)(HWND a1, UINT a2, UINT a3, DWORD a4);
void sub_4A7FC0(MapDirEntry *a1);
unsigned sub_4A8050(MapDirEntry *a1, char *source, int a3, unsigned int a4, unsigned __int8 a5, char *dest);
unsigned LoadScenarioSingle(char *a1, int a2, const char *a3, unsigned __int8 game_speed);
BYTE sub_4A8710(char *a1, char *source);
int sub_4A8760(DWORD a1, CHAR *a2);
int sub_4A8790(DWORD a1, CHAR *a2, char *a3);
int sub_4A87F0(DWORD a1, CHAR *a2);
BOOL sub_4A8850(char *a1);
FILE * CreateCharacterFile(CharacterData *a1);
int LoadCharacterData(CharacterData *character_data, char *source);
FILE * verifyCharacterFile(CharacterData *a1, const char *player_name);
extern HANDLE (__stdcall*enumFiles)(void (__stdcall *a1)(_DWORD));
unsigned sub_4A8B70(byte *a1, unsigned int a2);
int getPlayerForce(unsigned __int8 player_id);
int sub_4A8BB0(int result);
extern int (*sub_4A8BC0)();
BOOL sub_4A8BD0(char a1);
BOOL sub_4A8BF0(char a1);
extern BOOL (__fastcall*sub_4A8C10)(char a1);
BOOL sub_4A8C20(char a1);
BOOL sub_4A8C40(char a1);
extern BOOL (__fastcall*sub_4A8C60)(char a1);
extern int (*sub_4A8C70)();
unsigned sub_4A8CA0(unsigned __int8 a1);
extern int (*getOpenSlotCount)();
extern char (*getNumOpenSlots)();
extern char (*getComputerSlotCount)();
void initializeSlots(int player_id);
_DWORD * sub_4A8DB0(_DWORD *result);
extern char (*setAllValidPlayerOwnersToOpen)();
BOOL sub_4A8E10(char a1);
BOOL sub_4A8E30(char a1);
char sub_4A8E50(int a1, int a2, int a3);
char sub_4A8F30(int a1, int a2, int a3);
int sub_4A9010(int a1, int a2);
void sub_4A9130(unsigned __int8 a1, unsigned __int8 a2);
extern void (__cdecl*sub_4A91E0)();
extern char (*getTotalValidSlotCount)();
extern void (__cdecl*InitializeLoadedGameSlots)();
int GetRandomRace(int a1, int a2);
void randomizePlayerPositions(int *a1);
extern signed (*sub_4A99C0)();
extern int (*sub_4A9A10)();
extern void (__cdecl*BWFXN_RandomizePlayerRaces)();
extern signed (*randomizeForces)();
extern void (__cdecl*RandomizeSlotsForcesColors)();
extern unsigned (*sub_4AA190)();
extern PlayerType * (*sub_4AA4B0)();
extern char (*sub_4AA620)();
extern int (*sub_4AA880)();
extern BOOL (*sub_4AA890)();
extern BOOL (*sub_4AA8A0)();
extern BOOL (*sub_4AA8B0)();
extern BOOL (*sub_4AA8C0)();
extern BOOL (*sub_4AA8D0)();
BOOL sub_4AA8E0(GameData *a1);
extern BOOL (*sub_4AA900)();
extern int (*sub_4AA910)();
extern BOOL (*sub_4AA920)();
extern char * (__fastcall*sub_4AA930)(int a1, char a2);
extern struct_a4 * (__fastcall*sub_4AA960)(int a1, char a2);
BOOL sub_4AA990(unsigned __int8 a1);
extern BOOL (*isGameTypeSpecial)();
extern BOOL (*IsLeagueGametype)();
BOOL sub_4AA9F0(char a1, char a2);
BOOL IsScenarioGame(GameData *a1);
extern BOOL (*sub_4AAA40)();
extern BOOL (*sub_4AAA50)();
extern BOOL (*sub_4AAA60)();
extern BOOL (*sub_4AAA70)();
extern BOOL (*sub_4AAA80)();
extern BOOL (*sub_4AAA90)();
extern BOOL (*sub_4AAAA0)();
BOOL sub_4AAAB0(char a1, unsigned __int8 a2, unsigned int a3);
extern BOOL (*sub_4AABA0)();
extern signed (*sub_4AABB0)();
extern BOOL (*sub_4AABD0)();
extern char * (*sub_4AABF0)();
struct_a4 * sub_4AAC60(char a1, __int16 variation_id, GameType template_id);
GotFileValues * sub_4AAC90(__int16 a1, char a2, char a3);
GotFileValues * sub_4AACC0(char a1, int (__stdcall *a2)(_DWORD, _DWORD, _DWORD, _DWORD), char a3);
LRESULT sub_4AAD00(int (__stdcall *a1)(LPARAM lParam, int, int, int));
extern char * (__fastcall*getGameTypeString)(int a1, const void *a2);
extern int (__thiscall*sub_4AAD80)(unsigned __int8 *this_);
extern int (__thiscall*sub_4AADA0)(GotFileValues *this_);
signed sub_4AADF0(GotFileValues *got_template_values, char *template_label, char a3, TemplateConstructor template_constructor, char *template_name, struct_a4 *a6);
int sub_4AAE20(char *a1, unsigned int *a2, _BYTE **a3, unsigned int a4);
extern void (__stdcall*eventSetGameType)(s_evt *evt);
extern BOOL (*sub_4AAF30)();
BOOL sub_4AAF50(char a1, __int16 a2, GameType template_id);
BOOL sub_4AAFA0(char a1, __int16 a2, char a3);
extern BOOL (__thiscall*sub_4AAFF0)(int this_);
int sub_4AB050(int a1, int a2);
extern void (__fastcall*DestroyGameTemplates)(bool exit_code);
extern char * (__fastcall*sub_4AB0B0)(char a1, char a2);
extern char * (__fastcall*sub_4AB0E0)(char a1, char a2);
extern signed (*sub_4AB110)();
extern void (__stdcall*Template_Constructor)(char *template_name, char *template_label, GotFileValues *got_file_values, struct_a4 *a4);
extern void (*beginComputerAIScriptExecution)();
extern int (__stdcall*sub_4AB310)(int *a1, int a2);
extern BOOL (__fastcall*IsBNetGame)(int a1, _BYTE *a2, int a3);
extern int (__stdcall*loadTRGFile)(const char *a1);
int sub_4AB6C0(GotFileValues *a1, size_t a2, int a3, char *buff);
GotFileValues * readTemplate(char *template_name, char *got_template_name, char *got_template_label);
extern GotFileValues * (*InitUseMapSettingsTemplate)();
extern signed (__stdcall*LoadGameTemplates)(TemplateConstructor template_constructor);
extern signed (*sub_4AB970)();
void CTFCreateFlagBeacon(int a1);
extern void (__cdecl*sub_4ABA20)();
extern signed (*chooseTRGTemplate)();
int sub_4ABC90(int a1, LPCSTR lpszString, int nFit, int a4);
extern int (__stdcall*sub_4ABF50)(HGDIOBJ h);
signed BNLoadImage(const char *fileName, int *eax0, char *a3, HWND hWnd, HRGN a5, int a6, int a7, int a8, int a9);
int BNStringToData(const char *a1, unsigned __int32 *a2, unsigned __int32 *a3, unsigned __int32 *a4, _DWORD *a5, unsigned __int32 *a6, _DWORD *a7);
char * sub_4AC250(int a1, unsigned int *a2, int a3, wchar_t *a4);
extern BOOL (*sub_4AC2E0)();
extern BOOL (__stdcall*BattleGetCursor)(int a1, int a2, int a3, unsigned int a4, int a5);
extern BOOL (__stdcall*BattleGetResource)(int a1, unsigned int a2, int size_, void *buffer, int buffersize_, int width, int height, int depth);
extern int (*sub_4ACD30)();
ListNode * DrawTextConstructor(ListNode **a1, HDC hdc);
extern void (*sub_4ACE20)();
int createFont(int result);
extern void (__cdecl*sub_4ACF20)();
char * __SDlgDialogBoxIndirectParam(unsigned int a1, HWND hWndParent, LPVOID lpParam, LPARAM lParam);
char * sub_4AD040(unsigned __int16 a1, int a2, int a3);
extern int (__stdcall*BattlePlaySound)(int a1, int a2, int a3);
extern void (__stdcall*sub_4AD0E0)(LPCSTR lpText, LPCSTR lpCaption);
extern void * (*sub_4AD110)();
extern void (__cdecl*sub_4AD140)();
char * initializeProviderStruct(SNETUIDATA *a1);
extern void (__cdecl*SelectGame)();
extern void (__cdecl*loadMenu_gluBNRes)();
extern int (__thiscall*sub_4AD390)(dialog *this_);
extern u8 (__thiscall*sub_4AD3E0)(dialog *this_);
extern int (__thiscall*sub_4AD400)(int this_);
dialog * sub_4AD440(dialog *result);
int gluCustmHasComputerPlayerMaybe(dialog *dlg);
extern BOOL (*sub_4AD560)();
signed sub_4AD5B0(dialog *a1);
void sub_4AD640(dialog *a1);
extern void (__fastcall*gluCustm_ListboxEntryUpdate)(struct dialog *dlg, u8 selectedIndex, rect *dstRect, int x, int y);
void gluCustmSinglePlayerInitRaces(dialog *a1);
extern void (__stdcall*HideShowDlgCallback)(int a1, dialog *a2, int a3);
extern void (__fastcall*gluCustm_UpdateCB)(dialog *dlg, int x, int y, rect *dst);
void gluCustm_UpdateMapFolderDisplay(const char *a1);
void gluCustm_initSwish(dialog *dlg);
extern void (*sub_4ADB10)();
void sub_4ADD90(int a1, dialog *player_type_dropdown);
extern dialog * (__thiscall*sub_4ADEA0)(void *this_, char *a2, int a3, _BYTE *a4, int a5);
extern int (__stdcall*AddMapToList_CB)(MapDirEntry *a1, char *a2, MapDirEntryFlags a3);
void gluCustm_raceDropdown(dialog *a1);
extern void (__fastcall*gluCustmInitPlayerTypes)(dialog *dlg, __int16 dx0);
extern void (*sub_4AE1E0)();
extern dialog * (__stdcall*sub_4AE1F0)(int a1, int a2, GotFileValues *a3, int a4);
void sub_4AE250(dialog *result);
extern int (*sub_4AE320)();
BOOL sub_4AE3C0(dialog *a1);
extern void (__stdcall*sub_4AE420)(int arg0, dialog *a2, char *string);
void sub_4AE640(dlgEvent *a1, dialog *a2);
void gluCustm_typeDropdown(dialog *a1);
extern int (__fastcall*gluCustm_SubType)(dialog *dlg, dlgEvent *evt);
void sub_4AE790(dialog *a1);
extern void (__stdcall*sub_4AE830)(int a1);
extern int (__fastcall*gluCreate_GameSpeed_Slider)(dialog *dlg, dlgEvent *evt);
struct_v4_1 * SingleMakeCreateGameDialog(dialog *dlg);
extern int (__fastcall*gluCustm_RaceSlot)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*gluCustm_PlayerSlot)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*gluCustm_Player1)(dialog *dlg, dlgEvent *evt);
extern signed (*gluCustmSinglePlayerInit)();
void sub_4AEEB0(int a1, dialog *a2);
extern void (__stdcall*sub_4AEED0)(dialog *a1);
extern int (__fastcall*gluCustm_FileListbox_Main)(dialog *dlg, dlgEvent *evt);
extern void (__cdecl*InitGlueMapListBox)();
extern signed (*gluCustmLoadMapFromList)();
void sub_4AF400(dialog *a1);
extern int (__fastcall*gluCustm_GameType)(dialog *dlg, dlgEvent *evt);
BYTE gluCustm_CustomCtrl_InitializeChildren(dialog *a1);
extern int (__fastcall*gluCustm_Interact)(dialog *dlg, struct dlgEvent *evt);
void loadMenu_gluCustm(int is_multiplayer);
extern int (__stdcall*sub_4AF8E0)(char *source, int a2, int a3, int a4, int (*a5)(void));
extern int (__stdcall*joinModemGame)(char *gameName);
extern int (__stdcall*Device_Constructor)(DWORD a1, DWORD a2, DWORD a3, DWORD a4);
extern BOOL (__fastcall*InitializeDevice)(int a1, int a2, int arg0, int a4, const void *a5);
extern int (__fastcall*callback)(DWORD a1, DWORD a2, DWORD a3);
extern void (__thiscall*sub_4AFAD0)(dialog *this_);
Timer * sub_4AFB60(dialog *a1);
extern void (__fastcall*sub_4AFBF0)(dialog *dlg, int x, int y, rect *dst);
extern void (__thiscall*sub_4AFC60)(dialog *this_, dialog *a2);
void sub_4AFD80(dialog *a1);
u8 sub_4AFE30(dialog *a1);
void sub_4AFEA0(dialog *a1, dialog *a2);
void sub_4AFF50(dlgEvent *a1, dialog *a2);
int sub_4B0010(dialog *a1);
void gluModemList_CustomCtrlID(dialog *a1);
extern void (__fastcall*sub_4B0140)(dialog *dlg, __int16 timer_id);
void gluModemStatus_CustomCtrlID(dialog *a1);
void gluModemEntry_CustomCtrlID(dialog *a1);
extern bool (__fastcall*sub_4B03C0)(dialog *dlg, dlgEvent *a2);
void gluModem_CustomCtrlID(dialog *a1);
extern bool (__fastcall*gluModemList_Main)(dialog *dlg, struct dlgEvent *evt);
extern int (__fastcall*gluModemStatus_Main)(dialog *dlg, dlgEvent *evt);
extern void (__stdcall*PhoneNumber_Constructor)(dialog *a1);
void sub_4B07C0(dialog *a1);
DialogFlags sub_4B0970(dialog *a1);
int sub_4B0AC0(dialog *a1);
void sub_4B0AE0(dialog *a1);
extern void (*load_gluATZoneList)();
extern void (*load_gluModemList)();
extern int (__fastcall*gluModemEntry_loop)(dialog *dlg, dlgEvent *evt);
int InitializeModem(SNETPLAYERDATA *a1, SNETUIDATA *a2, SNETPROGRAMDATA *eax0, Char4 a4);
extern int (__stdcall*load_gluModemStatus)(dialog *a1);
void DeleteGluModemEntry(dialog *a1);
extern void (__stdcall*load_gluModemEntry)(int a1);
extern void (__stdcall*AU_PHONENUMBER)(dialog *arg0);
extern int (__fastcall*gluModem_Main)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadMenu_gluModem)();
bool sub_4B1B30(const void *a1, const void *a2);
signed verifyCheatCode(const void *a1, CheatFlags *game_cheats);
signed campaignTypeCheatStrings(const char *a1);
__int64 * makeCheatHash(const char *cheat, __int64 *a2);
void cheatActivation(CheatFlags cheat_flags, const char *player_name);
signed radioFreeZergCheat(const void *a1, CheatFlags *cheat_flags);
BOOL CommandLineCheatCompare(CheatFlags *game_cheats, const char *a2);
extern int (__fastcall*sub_4B24B0)(dialog *a1, dlgEvent *a2);
extern void (__fastcall*gluCmpgnBtn_UpdateTimer)(dialog *a1, __int16 a2);
extern void (__fastcall*gluCmpgnBtn_InitTimer)(dialog *dlg, __int16 timer_id);
extern void (__fastcall*gluCmpgnBtn_BtnLightupUpdate)(dialog *dlg, int x, int y, rect *dst);
extern int (__fastcall*gluCmpgn_CampaignButton)(dialog *dlg, dlgEvent *evt);
void gluCmpgn_CustomCtrlID(dialog *dlg);
extern void (*sub_4B26E0)();
BOOL sub_4B27A0(int race);
extern signed (__stdcall*sub_4B2810)(dialog *a1);
extern int (__fastcall*gluCmpgn_Main)(dialog *dlg, dlgEvent *evt);
extern void (*loadMenu_gluCmpgn)();
BOOL sub_4B2A50(int a1);
extern void (__fastcall*resourceScoreCalc)(struc_59A0F0 *a1, int a2);
extern void (__fastcall*structureScoreCalc)(struc_59A0F0 *a1, int a2);
extern void (__fastcall*unitScoreCalc)(struc_59A0F0 *a1, int player_id);
extern void (__fastcall*overallScoreCalc)(struc_59A0F0 *a1, int player_id);
extern int (__thiscall*sub_4B2BD0)(struc_59A0F0 *this_);
void sub_4B2D10(int result);
extern u8 * (__stdcall*sub_4B2D20)(int a1, int a2);
BOOL sub_4B2D50(int a1);
BOOL sub_4B2DA0(int a1);
extern char (__thiscall*sub_4B2DE0)(void *this_, char a2);
extern int (*sub_4B2DF0)();
int sub_4B2FC0(size_t format_length, char *format, unsigned int a3);
BOOL sub_4B30A0(dialog *dlg);
int sub_4B3140(_DWORD *a1, int a2);
extern int (__fastcall*sub_4B31C0)(struc_59A0F0 *a1, struct_v0 *a2, int a3, void (__fastcall *a4)(struc_59A0F0 *, _DWORD));
extern int (__stdcall*endgameData)(char *a1, size_t a2, char *buff, size_t a4);
extern int (__stdcall*sub_4B34D0)(struc_59A0F0 *a1, int a2);
int sub_4B3600(dialog *a1, int a2, int a3, int a4);
extern void (__fastcall*DLG_GlueScoreFillEnd)(dialog *a1, __int16 a2);
extern void (__thiscall*sub_4B3820)(dialog *this_, int a2, int a3);
extern void (__fastcall*sub_4B38A0)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*sub_4B3A40)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*sub_4B3B80)(dialog *dlg, int x, int y, rect *dst);
extern void (__stdcall*sub_4B3BC0)(dialog *a1);
extern int (__fastcall*gluScore_PlayerRaceIcon)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*gluScore_PlayerScoreTotal)(dialog *dlg, dlgEvent *evt);
int sub_4B42D0(dialog *a1);
void DLG_GlueScoreFill(dialog *a1);
void sub_4B4520(dialog *a1);
int sub_4B4600(dialog *a1);
extern int (__fastcall*gluScore_Tab)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*gluScore_SaveReplay)(dialog *dlg, dlgEvent *evt);
void gluScore_CustomCtrlID(dialog *dlg);
extern int (__fastcall*gluScore_Main)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadMenu_gluScore)();
extern bool (__fastcall*sub_4B4E20)(dialog *dlg, struct dlgEvent *evt);
extern void (__fastcall*sub_4B4E70)(dialog *a1, __int16 a2);
extern void (__fastcall*sub_4B4EE0)(dialog *a1, __int16 a2);
extern void (__fastcall*sub_4B4F10)(dialog *dlg, int x, int y, rect *dst);
extern int (__fastcall*gluExpCmpgn_CampaignButton)(dialog *dlg, dlgEvent *evt);
void gluExpCmpgn_CustomCtrlID(dialog *a1);
extern void (__cdecl*sub_4B5050)();
BOOL sub_4B5110(int race);
extern signed (__stdcall*sub_4B5180)(dialog *a1);
extern int (__fastcall*gluExpCmpgn_Main)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadMenu_gluExpCmpgn)();
extern void (*sub_4B53C0)();
char sub_4B53D0(unsigned __int8 *a1, int a2);
extern void (__fastcall*LoadPCXFromResource)(const char *fileName, Bitmap *a2, PALETTEENTRY *palette, const char *source_filename, int source_line);
extern HRSRC (__fastcall*sub_4B5500)(LPCSTR lpName, void *a2, int amount, int a4, int a5);
char sub_4B55A0(__int16 *a1, int a2);
void sub_4B5640(dialog *a1);
extern void (*sub_4B5770)();
extern void (__fastcall*sub_4B5790)(dialog *dlg, int x, int y, rect *dst);
dialog * sub_4B57B0(dialog *a1);
extern int (__fastcall*gluOK_Dlg_Interact_CB)(dialog *dlg, struct dlgEvent *evt);
void sub_4B59A0(const char *a1);
bool sub_4B5B20(const char *a1);
void sub_4B5CC0(const char *error_message, const char *a2);
extern int (__thiscall*sub_4B5E80)(void *this_);
extern void (*sub_4B5EB0)();
extern int (__thiscall*sub_4B5EC0)(int this_);
extern int (__thiscall*sub_4B5EF0)(dialog *this_);
extern void (__stdcall*SaveGame_Constructor)(int a1);
int sub_4B6180(dialog *a1);
int sub_4B61C0(dialog *a1);
extern void (*DeleteSavedGame)();
extern int (__fastcall*gluLoad_List)(dialog *dlg, dlgEvent *evt);
void gluLoad_CustomCtrlID(dialog *dlg);
extern int (__fastcall*gluLoad_Main)(dialog *dlg, struct dlgEvent *evt);
extern void (__cdecl*loadMenu_gluLoad)();
BOOL sub_4B6530(CampaignMenuEntry *a1, unsigned int a2);
void gluHist_Activate(dialog *result);
int sub_4B65D0(dialog *a1);
char sub_4B6610(char *a1, signed int a2);
extern dialog * (*sub_4B6640)();
dialog * sub_4B6650(dialog *result, int a2);
void sub_4B6660(dialog *a1);
extern void (*sub_4B67A0)();
int sub_4B67D0(dialog *a1);
extern void (__fastcall*sub_4B67F0)(dialog *dlg, int x, int y, rect *dst);
void sub_4B6810(dialog *a1);
void sub_4B68C0(dialog *a1);
void gluHist_Create(dialog *dlg);
void sub_4B6A20(dialog *a1);
void sub_4B6B10(dialog *a1, struct dlgEvent *evt);
extern bool (__fastcall*sub_4B6C30)(dialog *dlg, dlgEvent *a2);
void sub_4B6C70(dialog *dlg);
extern int (__fastcall*gluPEdit_Main)(dialog *dlg, struct dlgEvent *evt);
extern int (__fastcall*Popup_Main)(dialog *dlg, struct dlgEvent *evt);
extern int (__fastcall*gluHist_Interact)(dialog *dlg, struct dlgEvent *evt);
extern bool (__stdcall*BWFXN_gluPEdit_MBox)(char *text, char *dest, size_t size_, char *restricted);
void BWFXN_gluPOK_MBox(const char *a1);
int BWFXN_gluPOKCancel_MBox(const char *a1);
extern int (__cdecl*load_gluGameMode_BINDLG)();
CampaignMenuEntry * loadmenu_GluHist(int a1, CampaignMenuEntry *menu_entries);
void load_gluPOKSplitBINDLG(const char *a1, const char *a2);
extern _DWORD * (*sub_4B7C90)();
extern int (__fastcall*sub_4B7CB0)(int a1, const char *a2);
extern void (__cdecl*sub_4B7D10)();
extern int (__thiscall*sub_4B7DA0)(dialog *this_);
extern void (*sub_4B7DE0)();
extern void (*DestroyGameNodes)();
DialogFlags sub_4B7E10(dialog *dlg);
void sub_4B7E60(dialog *a1, int a2);
extern int (__fastcall*gluJoin_MapStatsLabel)(dialog *a1, dlgEvent *a2);
extern int (__stdcall*GameNode_Destructor_0)(int a1, dialog *a2);
extern void (__stdcall*updateDLGSpeedSetting)(dialog *a1);
void sub_4B8340(dialog *a1);
void sub_4B8460(dialog *a1);
extern int (__fastcall*gluJoin_Listbox)(dialog *dlg, dlgEvent *evt);
void gluJoin_CustomCtrlID(dialog *dlg);
extern int (__fastcall*gluJoin_Main)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadMenu_gluJoin)();
void bootReason(unsigned __int8 a1);
extern void (*sub_4B8920)();
extern void (*sub_4B8930)();
extern int (__fastcall*gluChat_Button)(dialog *a1, dlgEvent *a2);
int sub_4B8970(int result);
extern void (*sub_4B8990)();
extern void (*sub_4B89A0)();
void updateMinimapPreviewDisplayOffOn(int a1, dialog *a2, int a3);
void updatePasswordDisplay(dialog *a1);
void * sub_4B8D70(dialog *a1);
void sub_4B8D90(dialog *a1);
char gluChat_Textbox_onCharEvent(dlgEvent *a1, dialog *a2);
extern int (__fastcall*gluChat_GameStatsLabel)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*gluChat_Textbox_Interact)(dialog *a1, dlgEvent *a2);
void sub_4B8F10(const char *a1, int a2);
void gluChat_Listbox_Create(dialog *a1);
void printLobbyString(unsigned int a1, char *source);
extern void (*sub_4B92F0)();
extern void (__stdcall*DLG_GlueCountdown)(unsigned __int8 a1);
extern void (__stdcall*sub_4B9480)(dialog *dlg);
extern int (__fastcall*gluChat_Listbox_Interact)(dialog *dlg, dlgEvent *evt);
int BootPlayerMessageBox(int a1);
void gluChat_init(dialog *a1);
void gluChat_CustomCtrlID(dialog *a1);
int getErrorStringPair(GluAllTblEntry a1, int a2);
extern void (*SendLobbyMessage)();
signed gluChat_controlActivation(signed int last_control_id, dialog *dlg);
extern void (__fastcall*MinimapPreviewProc)(dialog *a1, __int16 timer_id);
extern void (__stdcall*gluChat_HoverMinimapPreview)(dialog *dlg);
extern bool (__fastcall*sub_4B9B10)(dialog *lobby_dlg);
extern void (__cdecl*sub_4B9BF0)(dialog *a1);
extern int (__fastcall*gluChat_Main)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadMenu_gluChat)();
const void * sub_4BA0A0(const void *result);
extern int (*sub_4BA0C0)();
void sub_4BA0E0(const char *a1);
extern void (*get_tFontGam_PCX_0)();
extern void (*get_tFontGam_PCX)();
BOOL DlgPszTextMemFree(dialog *a1, __int16 a2);
void * sub_4BA1F0(int a1, __int16 a2, int amount);
int sub_4BA240(int a1);
extern TPROVIDER * (__thiscall*sub_4BA290)(dialog *this_);
extern void (*sub_4BA320)();
void DestroyProviderList(dialog *a1);
void sub_4BA370(dialog *a1, size_t a2, __int16 a3, const char *a4);
extern void (__fastcall*sub_4BA3C0)(dialog *a1, u8 a2, rect *a3, int a4, int a5);
void ListBNGateways(dialog *dlg);
void sub_4BA600(dialog *a1);
extern int (__stdcall*Provider_Constructor)(int a1, char *a2, char *source, int a4);
extern int (__fastcall*GatewayListProc)(dialog *dlg, dlgEvent *evt);
void selConn_connectionList_setSelection(dialog *a1);
void InitNetProviders(dialog *dlg);
signed getGameList(dialog *dlg);
extern void (__stdcall*selConn_connectionList_Create)(dialog *a1);
extern int (__fastcall*selConn_ConnectionList_Interact)(dialog *dlg, dlgEvent *evt);
void ConnSel_InitChildren(dialog *a1);
extern int (__cdecl*BeginBNET)();
extern int (__fastcall*ConnSel_Interact)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadMenu_gluConn)();
extern void (*sub_4BB0A0)();
void packetErrHandle(DWORD last_error, int a2, char *a3, int a4, int a5);
extern BOOL (*sub_4BB110)();
extern void (__fastcall*sub_4BB170)(int a1, char *a2, int a3, int a4);
int sub_4BB1A0(const char *string, int a2, const char *a3, int a4);
int sub_4BB260(BYTE **data, int *senderplayerid, int *a3);
void sub_4BB2A0(char *data, unsigned int a2);
void sendMessage_Fast(char *data, unsigned int playerID, unsigned int a3);
void doNetTBLError(int a1, const char *error_message, char *file_name, int a4);
extern void (__fastcall*BigPacketError)(int a1, const CHAR *a2, char *a3, int a4, int a5);
extern void (__cdecl*sub_4BB4B0)();
int ReceiveTurns(unsigned int *arraydatabytes, char **arraydata, DWORD *a3, int a4, int arraysize_);
signed CreateSoundBuffer(AudioVideoInitializationError *a1);
signed SetCooperativeLevel(HWND a1, AudioVideoInitializationError *a2);
signed DSoundCreate(AudioVideoInitializationError *a1);
signed sub_4BB6E0(AudioVideoInitializationError *a1);
int sub_4BB720(SfxData a1);
extern char (*sub_4BB730)();
extern signed (__stdcall*sub_4BB740)(char a1);
DWORD sub_4BB890(struct_5 *a1);
void sub_4BB8E0(SfxData a1);
extern IDirectSoundBuffer * (*sub_4BB990)();
extern _DWORD (__stdcall*parseSection)(_DWORD a1);
extern BOOL (*sub_4BBA00)();
int sub_4BBA20(int a1, int a2);
extern void (__fastcall*sfxdata_cleanup)(bool exit_code);
extern HRESULT (*SetAudioFormat)();
signed sub_4BBAF0(struct_5 *a1, int a2, int a3, SfxData sfx_id, UnitType unit_type, char sfxdata_flags_2, char a7, char sfxdata_flags_1);
void sub_4BBC00(int a1);
extern HRESULT (*sub_4BBCF0)();
void * parseWaveFile(_DWORD *a1, unsigned int *a2, WAVEFORMATEX *a3);
extern void (*sub_4BBE40)();
extern void (__cdecl*PlayBriefingWAVBegin)();
signed sub_4BBEB0(SfxData a1, int a2, int a3, UnitType a4);
extern void (__cdecl*stopSounds)();
signed PlayTransmissionLocation(SfxData a1, int a2, int a3, CUnit *a4);
extern void (*stopAllSound)(void);
extern void (__cdecl*muteSfx)();
extern void (__cdecl*BWFXN_DSoundDestroy)();
extern signed (__stdcall*_PlayTransmissionLocation)(SfxData a1, int a2, int a3, CUnit *a4);
extern void (__stdcall*playSoundId)(SfxData a1);
void j_DLGMusicFade(MusicTrack a1);
void muteBgm(RegistryOptions *a1);
extern void (*sub_4BC410)();
extern void (*initVolume)();
void PlayWavByFilename_maybe(const char *a1);
void sub_4BC5E0(SfxData a1);
extern unsigned (__stdcall*DSoundThread)(void *a1);
IDirectSoundBuffer * LoadSoundProc(char *a1, struct_5 *a2);
extern void (__cdecl*LoadSfx)();
IDirectSoundBuffer * sub_4BCA30(SfxData a1, struct_5 *a2);
void sub_4BCA80(SfxData a1);
extern void (__cdecl*LoadBtnSfxFile)();
BOOL DSoundInit(AudioVideoInitializationError *a1, HWND a2);
void playsound_init_UI(u16 *a1);
void sub_4BCD70(PALETTEENTRY *a1);
extern void (__cdecl*blitTileCacheOnRefresh)();
extern void (__cdecl*sub_4BCEA0)();
extern int (*GenerateMegatileDefaultFlags)();
extern void (*nullsub_55)();
const char * get_chk_String(__int16 a1);
unsigned GetGroundHeightAtPos(signed int x, signed int y);
extern void (__cdecl*DestroyMapData)();
extern void (__cdecl*gamemap_force_redraw)();
extern void (__cdecl*sub_4BD3A0)();
extern unsigned (*InitialSetScreenToStartLocation)();
void sub_4BD4B0(int a1, int a2);
extern void (__fastcall*input_targetOrder_LeftMouseClick)(dlgEvent *a1);
extern void (__fastcall*DrawGameProc)(int a1, int a2, Bitmap *a3, bounds *a4);
extern void (__cdecl*InitializeGameLayer)();
extern void (*initMapData)();
extern void (__cdecl*sub_4BDB00)();
extern int (__thiscall*sub_4BDB30)(PALETTEENTRY *palette, PALETTEENTRY a2);
extern unsigned (*sub_4BDD40)();
extern void (__cdecl*sub_4BDD60)();
extern void (__stdcall*sub_4BDDD0)(const char *tileset_name);
extern void (__stdcall*loadColorShiftTilesetImages)(const char *tileset_name);
BOOL sub_4BDF40(void *a1);
extern int (*sub_4BDF70)();
extern grpFrame * (*sub_4BDF80)();
extern void (__fastcall*cursorUpdateProc)(int a1, int a2, Bitmap *a3, bounds *a4);
extern void (__cdecl*cursorRefresh)();
extern void (__cdecl*RefreshCursor_0)();
extern void (__cdecl*sub_4BE100)();
extern void (__cdecl*drawCursor)();
extern void (__fastcall*updateCursorImage)(int a1, int a2, Bitmap *a3);
void setCursor(grpHead *a1);
extern void (*sub_4BE200)();
extern int (__thiscall*sub_4BE240)(char *this_);
extern void (__thiscall*statLb_Static_Update3)(int this_, int a2, int a3);
extern BOOL (*sub_4BE330)();
extern void (__thiscall*StatLb_Static_Update)(int this_, int a2, int a3);
extern void (*destroy_statlb_dlg)();
extern void (__thiscall*statLb_Static_Update2)(int this_, int a2, int a3);
void sub_4BE430(dialog *a1);
extern void (__thiscall*sub_4BE5B0)(dialog *this_);
extern void (__thiscall*sub_4BE5D0)(dialog *this_);
extern void (__thiscall*sub_4BE5F0)(dialog *this_);
extern __int16 (__thiscall*sub_4BE610)(int this_);
extern void (__stdcall*sub_4BE670)(dialog *a1);
extern void (__stdcall*hideLeaderboard)(dialog *a1);
void hideLeaderboardCmd(dialog *a1);
extern void (__fastcall*leaderboardUpdateProc)(dialog *dlg, __int16 a2);
extern void (__thiscall*sub_4BEBC0)(void *this_);
extern void (*ToggleLeaderboardList)();
extern void (__stdcall*statlb_Dlg_Create)(dialog *a1);
extern int (__fastcall*statlb_Dlg_Interact)(dialog *dlg, dlgEvent *evt);
extern void (*load_statlb)();
int getNameFromPath(char *out_buf, const char *path, size_t size_);
extern int (*sub_4BEF20)();
int sub_4BEF40(const char *a1, int a2);
signed LoadFileToSBigBuf(const char *filename, int *a2);
BOOL readDATFileData(FILE *a1, unsigned __int16 a2);
extern int (__thiscall*sub_4BF370)(FILE *a1, void *a2, int a3);
BOOL WriteDATFileData(FILE *a1);
extern int (__cdecl*LoadMap)();
extern int (__stdcall*ReadMapData)(char *source, MapChunks *a2, bool is_campaign);
BOOL ReadCampaignMapData(MapChunks *a1);
void CMDRECV_MinimapPing(int a1);
unsigned sub_4BF7F0(int a1);
extern int (*nullsub_56)();
extern int (__fastcall*CMDRECV_VoiceEnable)(int a1, _BYTE *a2);
extern int (*sub_4BF870)();
extern int (*sub_4BF8A0)();
extern void (*sub_4BF960)();
BOOL PositionIsInsideMap(Position *a1);
extern int (__fastcall*sub_4BF9A0)(int a1, unsigned __int8 *a2);
PlayerType * CMDRECV_Vision(int a1);
extern BYTE (*sub_4BFA40)();
extern int (*nullsub_57)();
void sub_4BFA60(int result);
int templarMergePartner(int a1, CUnit *a2, int a3);
extern void (*CMDRECV_restartGame)();
extern void (__stdcall*CMDRECV_ShiftDeselect)(int a1);
extern void (__stdcall*CMDACT_minimap_ping)(__int16 a1, __int16 a2);
void CMDACT_replay_speed(char a1, int a2, int a3);
extern void (*CMDACT_stimpack)();
extern CUnit * (*CMDRECV_CancelNuke)();
extern void (*CMDACT_cancel_nuke)();
extern void (*CMDACT_merge_dark_archon)();
extern void (*CMDACT_merge_archon)();
extern void (*CMDACT_train_fighter)();
void CMDACT_unload(CUnit *a1);
void CMDACT_unload_all(char a1);
void CMDACT_siege(char a1);
void CMDACT_unsiege(char a1);
void CMDACT_building_morph(__int16 a1);
void CMDACT_morph(__int16 a1);
void CMDACT_decloak(char a1);
void CMDACT_cloak(char a1);
void CMDACT_unburrow(char a1);
void CMDACT_burrow(char a1);
extern CUnit * (*CMDRECV_CancelAddon)();
extern void (*CMDACT_cancel_addon)();
extern void (*CMDRECV_CancelUpgrade)();
extern void (*CMDACT_cancel_upgrade)();
void CMDACT_upgrade(char a1);
extern void (*CMDRECV_CancelResearch)(void);
extern void (*CMDACT_cancel_research)();
void CMDACT_research(char a1);
extern __int16 (__stdcall*CMDRECV_CancelTrain)(int a1);
void CMDACT_cancel_train(__int16 a1);
void CMDACT_train(__int16 a1);
void CMDACT_return_cargo(char a1);
extern void (*CMDACT_reaver_stop)();
extern void (*CMDACT_carrier_stop)();
void CMDACT_hold_position(char a1);
void CMDACT_stop(char a1);
extern void (*CMDACT_cancel_unit_morph)();
extern void (*CMDACT_cancel_construction)();
extern void (*CMDACT_lift)();
void CMDACT_TargetOrder(char a1, CUnit *a2, __int16 a3, __int16 a4, __int16 a5, char a6);
void CMDACT_RightClickOrder(CUnit *a1, __int16 a2, __int16 a3, __int16 a4, char a5);
void CMDACT_UseCheat(CheatFlags a1);
extern void (__fastcall*CMDACT_ResumeGame)();
extern void (__fastcall*CMDACT_PauseGame)();
extern void (__stdcall*CMDACT_ChangeGameSpeed)(char a1);
void CMDACT_set_allies(int a1);
CUnit * StopAttackingAllies_maybe(int player_id);
void CMDACT_set_fog(__int16 a1);
extern void (__fastcall*CMDACT_place_building)(char a1, __int16 a2, int a3);
void sub_4C0590(int a1, char a2, _BYTE *a3);
extern void (*CMDACT_restart_game)();
void CMDACT_load_game(char *source, int a2);
extern void (__stdcall*CMDACT_SaveGame)(char *source);
extern CUnit * (*CMDRECV_Decloak)();
extern CUnit * (*CMRECV_Cloak)();
void CMDACT_HotkeyUnit(char a1, char a2, const void *a3, unsigned __int8 a4);
extern void (__stdcall*selectUnits)(int count, CUnit **unitsToSelect);
extern void (__fastcall*CMDRECV_UseCheat)(int a1, int a2);
extern void (*CMDRECV_ResumeGame)();
extern void (__cdecl*CMDRECV_PauseGame)();
extern CUnit * (*CMDRECV_MergeDarkArchon)();
extern char (*CMDRECV_MergeArchon)();
extern CUnit * (*CMDRECV_Nothing)();
extern CUnit * (*CMDRECV_ReaverStop)();
extern CUnit * (*CMDRECV_CarrierStop)();
extern void (__stdcall*CMDRECV_Liftoff)(int a1);
extern CUnit * (*CMDRECV_TrainFighter)();
char CMDRECV_BuildingMorph(int a1);
extern signed (__stdcall*CMDRECV_UnitMorph)(int a1);
extern CUnit * (*CMDRECV_Unburrow)();
extern CUnit * (__stdcall*CMDRECV_Upgrade)(int a1);
extern CUnit * (__stdcall*CMDRECV_Research)(int a1);
__int16 CMDRECV_Train(int a1);
extern bool (__thiscall*sub_4C1CA0)(int this_);
CUnit * CMDRECV_UnloadAll(int a1);
extern CUnit * (__stdcall*CMDRECV_Siege)(int a1);
extern CUnit * (__stdcall*CMDRECV_Unsiege)(int a1);
extern CUnit * (__stdcall*CMDRECV_Burrow)(int a1);
CUnit * CMRECV_ReturnCargo(int a1);
CUnit * CMDRECV_HoldPosition(int a1);
CUnit * CMDRECV_Stop(int a1);
char CMDRECV_TargetCmd(int result);
void CMDRECV_RightClick(int result);
__int16 CMDRECV_Build(int a1);
void BWFXN_SendPublicCallTarget(const char *a1);
CUnit * CMDRECV_Unload(CUnit *result);
extern void (__stdcall*CMDRECV_ShiftSelect)(int a1);
extern void (__stdcall*CMDRECV_Select)(int a1);
extern void (__thiscall*CMDRECV_Hotkey)(unsigned __int8 *this_);
extern void (__stdcall*CMDRECV_Ally)(int a1);
void CMDRECV_SaveGame(SaveGameCommand *command);
extern char (__stdcall*CMDRECV_LeaveGame)(int a1);
extern CUnit * (*CMDRECV_CancelUnitMorph)();
extern void (*CMDRECV_CancelConstruction)();
extern CUnit * (*CMDRECV_StimPack)();
extern unsigned (__fastcall*_CRC32)(int a1, void *edx0, int a3);
extern _DWORD * (__cdecl*write_buf)(const void *a1, unsigned int *a2, _DWORD *a3);
extern unsigned (__cdecl*read_buf)(void *a1, unsigned int *a2, _DWORD *a3);
extern void (__cdecl*decompressCleanup)();
void * sub_4C3130(int a1);
extern int (__thiscall*DecompressData)(void *this_, int a2, _DWORD *a3);
unsigned CompressOutput(void **a1, int a2, unsigned int a3);
extern BOOL (__stdcall*DecompressRead)(void *a1, int a2, FILE *a3);
int CompressWrite(void *a1, size_t a2, FILE *a3);
extern void (__cdecl*sub_4C35C0)();
void BINDLG_BlitSurface(dialog *dlg);
extern int (*sub_4C3690)();
extern int (*RefreshConsole)();
extern const char * (__fastcall*TblGetString)(__int16 index);
extern u16 * (*sub_4C3720)();
extern int (*sub_4C3750)();
extern void (__cdecl*destroyGameHUD)();
extern void (__cdecl*updateSelectedUnitData)();
extern void (__cdecl*sub_4C3930)();
extern void (__cdecl*LoadConsoleImage)();
extern void (*load_Stat_txt)();
extern void (*sub_4C3B10)();
signed updateBuildingLandUnitSelection(CUnit *a1);
extern void (__cdecl*setup_HUD)();
extern void (*sub_4C3C80)();
extern void (__stdcall*eventSetPlayerFlag)(s_evt *evt);
extern int (*clearPlayerFlags)();
extern void (*nullsub_58)();
extern void (*nullsub_59)();
extern BOOL (__stdcall*leaveGame)(int a1);
BOOL sub_4C3DA0(int playerid, size_t a2, char *a3);
extern unsigned (*getActivePlayerId)();
extern BOOL (*sub_4C3EA0)();
extern int (*sub_4C3EB0)();
extern void (*sub_4C3ED0)();
extern char (*GetActivePlayerCount)();
extern BOOL (*sub_4C4140)();
extern void (__stdcall*UpdateGameMode)(int a1);
extern BOOL (*sub_4C41E0)();
extern BOOL (*isMultiplayerModeBNET)();
int ApplyGameVictoryStatus(_DWORD *a1, _DWORD *a2);
extern void (__fastcall*leaveOnQuit)(bool exit_code);
extern void (*RECV_MakeGamePublic)();
extern void (__cdecl*ReportGameResult)();
extern BOOL (*sub_4C4870)();
void sub_4C4950(int result, DWORD a2, const char *a3);
extern void (__stdcall*eventPlayerDropped)(s_evt *evt);
extern void (__stdcall*sub_4C4A80)(int a1, int a2);
extern MapDownload * (*userHasMap)();
extern char (__stdcall*playerLeaveGame)(int a1, int a2, int a3);
char sub_4C4F80(unsigned __int8 a1);
extern void (*sub_4C4FA0)();
extern int (__fastcall*TriggerAction_EnableDebugMode)(Action *a1);
extern int (__fastcall*TriggerAction_DisableDebugMode)(Action *a1);
extern int (*sub_4C5040)();
extern UnitProperties * (*sub_4C5060)();
extern int (__fastcall*TriggerAction_Draw)(Action *a1);
extern int (__fastcall*TriggerAction_UnpauseTimer)(Action *a1);
extern int (__fastcall*TriggerAction_PauseTimer)(Action *a1);
extern int (__fastcall*TriggerAction_SetNextScenario)(Action *a1);
extern int (__fastcall*TriggerAction_SetCountdownTimer)(Action *a1);
extern int (__fastcall*TriggerAction_SetMissionObjectives)(Action *a1);
unsigned getTextDisplayTime(unsigned int result);
extern int (__fastcall*TriggerAction_LeaderBoardComputerPlayers)(Action *a1);
extern int (__fastcall*TriggerAction_Wait)(Action *a1);
extern int (__fastcall*TriggerAction_PreserveTrigger)(Action *a1);
extern int (__fastcall*TriggerAction_Defeat)(Action *a1);
extern int (__fastcall*TriggerAction_Victory)(Action *a1);
extern int (__fastcall*TriggerAction_NoAction)(Action *a1);
extern int (*sub_4C5360)();
extern int (*sub_4C5370)();
extern int (*sub_4C5390)();
extern int (__stdcall*KillRemoveUnits_Unit)(int a1);
extern BOOL (__thiscall*killRemoveUnits_Factories)(void *this_, CUnit *a2);
extern BOOL (__thiscall*KillRemoveUnits_Buildings)(void *this_, CUnit *a2);
extern BOOL (__thiscall*KillRemoveUnits_Men)(void *this_, CUnit *a2);
extern int (__stdcall*KillRemoveUnits_Anyunit)(int a1);
extern int (__fastcall*TriggerAction_MinimapPing)(Action *a1);
extern int (__fastcall*TriggerAction_LeaderBoard)(Action *a1);
extern int (__fastcall*TriggerAction_SetSwitch)(Action *a1);
extern signed (__stdcall*ModifyUnitResources)(CUnit *a1, __int16 a2);
extern int (__fastcall*TriggerAction_RunAiScriptAtLocation)(Action *a1);
extern int (__fastcall*TriggerAction_RunAiScript)(Action *a1);
extern int (__fastcall*TriggerAction_DisplayTextMessage)(Action *a1);
extern int (__fastcall*TriggerAction_UnpauseGame)(Action *a1);
extern int (__fastcall*SetAlliance_maybe)(unsigned int player, __int16 a2, int a3);
extern signed (__stdcall*ModifyUnitShields)(CUnit *a1, int a2);
extern int (__fastcall*SubtractDeaths)(unsigned int player, unsigned __int16 a2, int a3);
extern int (__fastcall*AddDeaths)(unsigned int player, unsigned __int16 a2, int a3);
extern int (__fastcall*SetDeaths)(unsigned int player, unsigned __int16 a2, int a3);
extern int (__fastcall*SubtractScore)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*AddScore)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*SetScore)(unsigned int player, __int16 a2, int a3);
extern int (__fastcall*SubtractResource)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*AddResource)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*SetResource)(unsigned int player, __int16 a2, int amount);
extern int (__fastcall*TriggerAction_UnmuteUnitSpeech)(Action *a1);
extern int (__fastcall*TriggerAction_MuteUnitSpeech)(Action *a1);
extern int (__fastcall*FindUnitType)(CUnit *a1, int a2);
extern signed (__stdcall*ModifyUnitEnergy)(CUnit *a1, int a2);
extern int (__fastcall*setInvincibility)(CUnit *a1, int a2);
extern int (__fastcall*TriggerAction_SetDeaths)(Action *a1);
extern int (__fastcall*TriggerAction_SetScore)(Action *a1);
extern int (__fastcall*TriggerAction_SetResources)(Action *a1);
extern int (__fastcall*TriggerAction_CenterView)(Action *a1);
extern signed (__fastcall*getDoodadStateUnit)(CUnit *a1, int a2);
extern int (__fastcall*TriggerAction_ModifyUnitResourceAmount)(Action *a1);
extern int (__fastcall*TriggerAction_ModifyUnitShieldPoints)(Action *a1);
extern int (__fastcall*TriggerAction_ModifyUnitEnergy)(Action *a1);
extern int (__fastcall*TriggerAction_SetInvincibility)(Action *a1);
CUnit * getUnitForDoodadState(unsigned __int8 location, __int16 a2, int a3);
CUnit * sub_4C7400(int a1, __int16 a2, unsigned __int8 a3, POINT *center);
extern int (__fastcall*TriggerAction_MoveLocation)(Action *a1);
extern int (__fastcall*TriggerAction_TalkingPortrait)(Action *a1);
extern int (__fastcall*TriggerAction_SetDoodadState)(Action *a1);
extern int (__fastcall*TrgOrder)(CUnit *a1, TriggerOrderRelated *a2);
extern int (__fastcall*TriggerAction_PlayWav)(Action *a1);
extern int (__fastcall*TriggerAction_Transmission)(Action *a1);
extern int (__fastcall*TriggerAction_Order)(Action *a1);
extern int (__fastcall*TriggerAction_PauseGame)(Action *a1);
extern signed (__stdcall*ModifyUnitHP)(CUnit *a1, int a2);
extern int (__fastcall*TriggerAction_ModifyUnitHitPoints)(Action *a1);
extern int (__fastcall*giveUnitsProc)(_DWORD a1, _DWORD a2);
void trigMoveUnit(CUnit *unit, __int16 pos_x, int pos_y);
void TriggerKillAllUnits(int a1, int a2, int (__fastcall *a3)(_DWORD, _DWORD, _DWORD), int a4);
extern BOOL (__fastcall*killUnitsAtLocationProc)(CUnit *a1, int a2);
extern signed (__stdcall*GiveUnits)(CUnit *a1, int a2);
CUnit * TriggerKillUnitsAtLocation(int location, int a2, __int16 a3, int a4, int a5);
extern int (__fastcall*TriggerAction_GiveUnitsToPlayer)(Action *a1);
signed sub_4C82C0(int a1, CUnit *a2);
int trigMoveBuilding(int result, CUnit *a2, int a3);
extern int (__fastcall*DestroyUnit_maybe)(int player_id, __int16 a2, int location, int a4);
extern int (__fastcall*TriggerAction_SetAllianceStatus)(Action *a1);
extern BOOL (__fastcall*moveUnitCB)(CUnit *unit, int a2);
extern int (__fastcall*TriggerAction_RemoveUnitAtLocation)(Action *a1);
extern int (__fastcall*TriggerAction_RemoveUnit)(Action *a1);
extern int (__fastcall*TriggerAction_KillUnitAtLocation)(Action *a1);
extern int (__fastcall*TriggerAction_KillUnit)(Action *a1);
extern int (__fastcall*TriggerAction_MoveUnit)(Action *a1);
extern BOOL (__stdcall*ModifyUnitHangerCount)(CUnit *a1, int a2);
extern int (__fastcall*TriggerAction_ModifyUnitHangarCount)(Action *a1);
extern int (__fastcall*CreateUnit_maybe)(signed int player_id, int unit_type, struct_a3 *a3);
extern int (__fastcall*TriggerAction_CreateUnitWithProperties)(Action *a1);
extern int (*sub_4C8E10)();
extern RegistryOptions * (*sub_4C8E30)();
extern void (__cdecl*sub_4C8E60)();
char sub_4C8E80(unsigned __int16 a1, grpHead *a2, int a3, int a4);
char sub_4C8F10(unsigned __int16 a1, int a2, dialog *a3, int a4);
extern grpHead * (*sub_4C9020)();
char * sub_4C9030(dialog *a1);
void sub_4C90C0(dialog *dlg);
extern void (__fastcall*sub_4C9120)(bool exit_code);
extern void (__fastcall*sub_4C9150)(dialog *dlg, __int16 a2);
extern void (__fastcall*quit_replay_handler)(dialog *dlg);
void options_OK(dialog *dlg);
dialog * sub_4C93A0(dialog *a1);
void sub_4C9410(dialog *a1);
void sub_4C9440(dialog *a1);
void sub_4C94F0(dialog *a1);
extern void (__fastcall*restart_game_menu_handler)(dialog *a1);
extern void (__fastcall*quit_mission_menu_handler)(dialog *dlg);
extern void (__fastcall*exit_game_menu_handler)(dialog *dlg);
extern void (__stdcall*sub_4C9780)(dialog *a1);
int options_Cancel(dialog *a1, dlgEvent *a2);
extern void (__fastcall*saveGameCBProc)(dialog *dlg, __int16 a2);
int j_options_Cancel(dialog *a1, dlgEvent *a2);
extern signed (*sub_4C99C0)();
void checkSaveGameDialog(dialog *dlg);
void sub_4C9C40(const char *a1);
void sub_4C9CC0(dialog *dlg, const char *a2);
char setObjctDlgBtnString(dialog *a1);
extern void (__cdecl*open_options_menu)();
extern int (__fastcall*objctdlg_BINDLG)(dialog *dlg, dlgEvent *evt);
extern void (__fastcall*help_menu_handler)(dialog *dlg);
extern void (*open_mission_objectives_dialog)();
extern void (__fastcall*options_menu_handler)(dialog *dlg);
char gamemenu_CustomCtrlID(dialog *a1);
extern int (__fastcall*gamemenu_Dlg_Interact)(dialog *dlg, dlgEvent *evt);
extern void (*open_restart_game_menu)();
extern void (__cdecl*open_quit_mission_menu)();
extern void (__cdecl*open_exit_game_menu)();
extern void (__cdecl*open_help_menu)();
extern void (__fastcall*abort_menu_handler)(dialog *dlg);
extern void (__cdecl*open_abort_menu)();
extern void (__fastcall*game_menu_handler)(dialog *dlg);
extern void (__cdecl*open_game_menu)();
extern BOOL (*mapHandleDestroy)();
extern int (__stdcall*mapAuthCallback)(char *szFileName, void *a2, struct_v3 *a3);
extern bool (__stdcall*ChkLoader_PUNI)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_TECS)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_TECx)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_UPGS)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_UPGx)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_UNIS)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_UNIx)(SectionData *a1, int a2, MapChunks *a3);
LPVOID sub_4CAE90(int a1);
extern bool (__stdcall*ChkLoader_FORC)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_SPRP)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_MASK)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_DIM)(SectionData *a1, int a2, MapChunks *a3);
UnitRelated20 * sub_4CB0A0(UnitRelated20 *a1, UnitRelated20 *a2);
extern int (*sub_4CB120)();
UnitRelated20 * sub_4CB140(int a1, UnitRelated20 *a2, CUnit *unit, int unit_id);
int CHK_UNIT_StartLocationSub(Position *a1, ChunkUnitEntry *a2);
BOOL sub_4CB220(int a1);
extern bool (__stdcall*ChkLoader_UPRP)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_MRGN)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_MRGN_1_00)(SectionData *a1, int a2, MapChunks *a3);
BOOL sub_4CB340(__int16 a1);
extern void (__fastcall*freeCHKStringHandle)(bool exit_code);
extern bool (__stdcall*ChkLoader_ERA)(SectionData *section_data, int section_size_, MapChunks *a3);
extern bool (__stdcall*ChkLoader_OWNR)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_SIDE)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_VER)(SectionData *section_data, int section_size_, MapChunks *a3);
extern bool (__stdcall*ChkLoader_TYPE)(SectionData *a1, int a2, MapChunks *a3);
extern int (__fastcall*sub_4CB560)(int a1);
void sub_4CB5B0(UnknownTilesetRelated2 *a1);
extern BOOL (*sub_4CB650)();
extern bool (__stdcall*ChkLoader_PTEC)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_PTEx)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_UPGR)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_PUPx)(SectionData *a1, int a2, MapChunks *a3);
extern bool (__stdcall*ChkLoader_VCOD)(SectionData *sectionData, int sectionSize, MapChunks *map_chunks);
UnitRelated20 * sub_4CBD30(UnitRelated20 *a1);
UnitRelated20 * CHK_UNIT_Addon(CUnit *unit, UnitRelated20 *result, int a3, int unit_id);
extern int (__stdcall*sub_4CBE00)(char a1, int a2);
BOOL unitNotNeutral(ChunkUnitEntry *a1);
extern bool (__stdcall*ChkLoader_COLR)(SectionData *section_data, int section_size_, MapChunks *a3);
extern void (__thiscall*sub_4CBED0)(int this_);
UnitRelated20 * CHK_UNIT_Nydus(int a1, CUnit *a2, UnitRelated20 *a3, int a4);
extern int (*sub_4CBF40)();
void sub_4CBF60(int a1, CUnit *a2, __int16 a3);
extern bool (__stdcall*ChkLoader_TRIG)(SectionData *a1, int a2, MapChunks *a3);
signed ReadMapChunks(MapChunks *a1, void *chk_data, int *out_version_loader_index, int chk_size_);
BOOL LoadFileArchiveToSBigBuf(const char *filename, int *a2, int a3, HANDLE *a4);
int sub_4CC1B0(unsigned __int8 a1, int a2, int a3);
extern bool (__stdcall*ChkLoader_MBRF)(SectionData *a1, int a2, MapChunks *a3);
signed sub_4CC2A0(void *chk_data, int chk_size_, int a3, MapChunks *a4);
signed sub_4CC350(char *a1, const char *a2, int *a3, size_t a4);
extern _DWORD (__stdcall*setUnitEnergyEx)(_DWORD a1, char a2);
BOOL sub_4CC420(char *a1, size_t ecx0);
void CHK_UNIT_ApplyOtherFlags(CUnit *a1, char a2, int a3);
void sub_4CC610(CUnit *a1, char a2, int a3);
extern bool (__stdcall*ChkLoader_STR)(SectionData *section_data, int section_size_, MapChunks *a3);
void * getFullMapChunk(char *filename, int *chk_size_);
BOOL sub_4CC7F0(char *a1);
extern void (__cdecl*sub_4CC990)();
signed sub_4CCAC0(char *a1, MapChunks *a2);
void sub_4CCC40(int a1, unsigned __int8 a2, CUnit *a3);
extern void (__cdecl*ResetDATFiles)();
void CHK_UNIT_ApplyBurrowFlag(CUnit *result, char a2, CUnit *a3);
extern UnitRelated20 * (__stdcall*sub_4CCF90)(UnitRelated20 *a1);
extern int (__stdcall*sub_4CD070)(char a1, int a2);
extern void (*sub_4CD090)();
extern bool (__stdcall*ChkLoader_MTXM)(SectionData *a1, int a2, MapChunks *a3);
char setHangerCount(CUnit *a1, CUnit *a2, unsigned __int8 a3);
CUnit * CreateUnitAtPos(__int16 player_id, UnitType unit_type, __int16 x, __int16 y);
void editUnitFlags(CUnit *a1, UnitGroupFlags *a2);
extern bool (__stdcall*ChkLoader_THG2)(SectionData *a1, int a2, MapChunks *a3);
CUnit * sub_4CD740(ChunkUnitEntry *a1);
extern void (__cdecl*sub_4CD770)();
extern bool (__stdcall*ChkLoader_UNIT)(SectionData *a1, int section_size_, MapChunks *a3);
extern void (__fastcall*sub_4CD9C0)(dialog *this_);
int sub_4CDA00(int result, unsigned __int16 a2, int a3);
extern void (*sub_4CDA20)();
dialog * UpdateCancelButton(dialog *a1, unsigned __int16 a2, DialogFlags a3);
dialog * UpdateOKButton(dialog *dlg, unsigned __int16 a2, DialogFlags a3);
extern int (__fastcall*sub_4CDAD0)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*gameMenu_DLG)(dialog *a1, dlgEvent *a2);
extern const char * (__fastcall*GetNetworkTblString)(__int16 network_tbl_entry);
extern void (__fastcall*FreeNetworkTBLHandle)(bool exit_code);
extern void (*LoadNetworkTBL)();
int sub_4CDCC0(int result);
extern char * (__thiscall*sub_4CDCE0)(GameActionDataBlock *this_);
int sub_4CDD30(GameActionDataBlock *a1);
_DWORD * sub_4CDDC0(_DWORD *result);
void sub_4CDE10(_BYTE *a1, size_t *a2, int a3, void *dest);
void saveReplayAction(GameActionDataBlock *a1, _BYTE *a2, size_t a3, char a4);
extern int (*sub_4CDF00)();
extern int (*sub_4CDF10)();
extern int (*sub_4CDF20)();
extern int (*sub_4CDF30)();
GameActionDataBlock * allocateRepGameActionMemory(GameActionDataBlock *a1);
void sub_4CDFA0(_BYTE *a1, size_t a2);
extern void (__cdecl*sub_4CDFC0)();
extern void (__cdecl*sub_4CDFD0)();
int sub_4CDFF0(GameActionDataBlock *a1, _DWORD *a2, char *a3, u8 *dest, int *a5);
int sub_4CE110(int *a1, char *a2, u8 *a3, _DWORD *a4);
extern void (__fastcall*FreeGameActionData)(bool exit_code);
int WriteGameActions(FILE *file, GameActionDataBlock *a2);
BOOL sub_4CE220(FILE *file);
int sub_4CE270(FILE *a1);
extern void (__cdecl*createNewGameActionDataBlock)();
int convertRelativeToFullPath(char *a1, size_t a2);
char * convertFullPathToRelativePath(size_t a1, char *a2);
extern FILE * (*closeLoadGameFile)();
extern int (*nullsub_60)();
extern int (*sub_4CE470)(void);
extern const char * (*sub_4CE4A0)();
signed GetMapSaveDirectory(char *a1, unsigned int esi0, const char *a3);
signed getSaveDirectory(char *a1, unsigned int esi0, char *a3, int a4);
extern void (*SetMapStartStatus)();
extern char (*getMapStartStatus)();
BOOL sub_4CE6D0(const CHAR *a1);
const void * sub_4CE700(const void *result);
extern int (*sub_4CE720)();
int sub_4CE730(int result);
int sub_4CE740(int result);
extern void (*sub_4CE750)();
extern int (*sub_4CE760)();
int setUpgradeLevel(int result, u8 a2, unsigned __int16 a3);
u8 getUpgradesLevel(int a1, unsigned __int16 a2);
extern int (*sub_4CE7D0)();
extern int (__thiscall*getUpgradesAvailable)(_DWORD a1);
int sub_4CE820(int result, u8 a2, unsigned __int16 a3);
u8 isTechResearched(int a1, Tech2 tech);
int sub_4CE880(int a1, char a2, int a3);
char techIsResearchedSCBW(int a1, Tech2 a2);
extern int (__fastcall*sub_4CE8D0)(char *source, int a2, int a3, int a4);
BOOL writeSavePlaintextHeader(FILE *a1, int a2);
extern bool * (*unpackAllPlayerSelectionGroups)();
extern int (*packAllPlayerSelectionGroups)();
extern const char * (__cdecl*getSaveExtension)();
extern int (__fastcall*sub_4CEEF0)(char *a1, int a2, int a3, _DWORD *a4);
extern int (__stdcall*sub_4CEFF0)(int a1, int a2);
int sub_4CF0F0(char *a1, FILE *a2);
extern BOOL (__stdcall*WriteSaveVersion)(int a1, FILE *a2);
int getSavePath(char *base, unsigned int eax0, int a3, const char *a4);
extern int (__fastcall*enumSaveLoadFiles)(char *a1, const char *filename_pattern, int (__fastcall *a3)(char *, struct _WIN32_FIND_DATAA *, const char *, int *), int a4, int a5, const char *a6, int *a7);
unsigned createSaveLoadList(int a1, int a2, char *a3, int a4, int a5);
extern int (__cdecl*sub_4CF5F0)();
signed sub_4CF7B0(char *a1);
extern BOOL (__stdcall*sub_4CF820)(const char *a1);
int LoadGameInit_Mode(char *a1);
int CMDRECV_LoadGame(const char *a1);
char sub_4CFA10(char *a1, int a2);
extern signed (__fastcall*Saved_Game_Node_Constructor)(const char *source, int a2, int a3, int a4);
extern int (__fastcall*sub_4CFCC0)(char *source, int a2, int a3, _DWORD *a4);
extern void (__stdcall*sub_4CFD90)(void (__stdcall *a1)(_DWORD));
extern int (__stdcall*sub_4CFE40)(int a1, char *dest, size_t size_);
extern int (__cdecl*loadGameFull)();
int sub_4D02D0(const char *filename, int time, int a3);
extern int (*loseSightSelection)();
extern LPTOP_LEVEL_EXCEPTION_FILTER (*getTopLevelExceptionFilter)();
extern LPTOP_LEVEL_EXCEPTION_FILTER (*ExceptionFilterDestructor)();
CHAR * GetExceptionName(unsigned int a1, DWORD a2, CHAR *a3);
int * GetModuleInfo(LPCVOID lpAddress, int a2, LPSTR lpString1, int a4, int a5);
void LogCallStack(int a1, unsigned int a2);
void LogCodeBytes(unsigned __int8 *a1, unsigned int j, UINT_PTR ucb);
LONG TopLevelExceptionFilter(int a1, int a2, struct _EXCEPTION_POINTERS *ExceptionInfo);
extern int (__stdcall*CreateExceptionFilter)(int a1);
int IsOutsideGameScreen(int x, int y);
void setHudBeginY(Bitmap *result);
extern char (*sub_4D1210)();
extern void (*sub_4D1220)();
extern void (*sub_4D1230)();
extern CursorType (*sub_4D1240)();
extern void (__fastcall*DestroyCursors)(bool exit_code);
int getScrollCursorType(_DWORD *a1, _DWORD *a2);
BOOL UnitIsEnemy(CUnit *a1);
void setCursorType(CursorType cursor_type);
extern CursorType (__cdecl*getCursorType)();
extern void (*BWFXN_NextFrameHelperFunctionTarget)();
extern void (__cdecl*LoadCursors)();
BOOL hasMessagesWaiting(struct tagMSG *a1, int a2);
extern __int16 (__stdcall*sub_4D16F0)(int a1);
void GameShowCursor(bool show_cursor);
extern void (__cdecl*Game_NumLockInit)();
extern int (*BWFXN_Game_KeyState)();
extern void (__cdecl*Game_Close)();
void Game_MouseWheel(EventNo wNo, int a2, InputProcedure a3);
void BWFXN_Game_ButtonUp(int a1, InputProcedure a2, Position a3, EventNo a4);
void BWFXN_Game_ButtonDown(int a1, InputProcedure a2, Position a3, EventNo a4);
void Game_BtnDoubleClick(int a1, InputProcedure a2, Position a3, EventNo a4);
extern void (*UpdateDlgMousePosition)(void);
extern void (__cdecl*TakeScreenshot)();
extern void (__stdcall*BWFXN_videoLoop)(int flag);
extern void (*sub_4D1D30)();
extern void (*Game_Capturechanged)();
extern LRESULT (__stdcall*MainWindowProc)(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam);
extern void * (__stdcall*allocFunction)(DWORD a1);
_DWORD * sub_4D26D0(_DWORD *result);
void * sub_4D26E0(int logline, char *logfilename, void *result);
BOOL j_SFileCloseFile(void *a1);
extern signed (__stdcall*FileIOErrProc)(char *source, int a2, unsigned int a3);
extern BOOL (*sub_4D2760)();
void sub_4D2770(int height, int width, int a3, const char *a4, int size_, void *buffer, int buffersize_);
extern void (__fastcall*AllocBackgroundImage)(const char *fileName, Bitmap *a2, PALETTEENTRY *palette, const char *source_filename, int source_line);
int sub_4D2800(void *a1, const char *a2, int a3);
int sub_4D2840(DWORD dwSearchScope, HANDLE hMpq, HANDLE *a3, const char *a4, int a5);
void FileFatal(HANDLE this_, int a2);
extern void (*checkLastFileError)();
int openGraphicHandle(const char *a1);
extern void (__stdcall*waitForImageLoadObjects)(LPOVERLAPPED a1, int a2, int a3);
void ReadFile_Overlapped(void *buffer, DWORD nNumberOfBytesToRead, LPOVERLAPPED a3, void *a4);
void sub_4D2B10(DWORD *a1, void *a2);
extern grpHead * (__fastcall*LoadGraphic)(const char *grp_path, int unused_zero, const char *logfilename, int logline);
void * sub_4D2BF0(int eax0, char *a2, LONG *a3, int a4, char *logfilename, int logline);
HANDLE sub_4D2C70(int a1, char *filename, LONG *last_error, LPOVERLAPPED a4, char *logfilename, int logline);
int fastFileRead(int *bytes_read, int searchScope, const char *filename, int defaultValue, int bytes_to_read, const char *logfilename, int logline);
extern void * (__fastcall*_fastFileRead)(const char *filename, int default_value, int *bytes_read, const char *a4, int a5);
int sub_4D2E60(int a1, const char *a2);
void LoadGameData(DatLoad *a1, char *a2);
extern void (__fastcall*DestroyAccelerators)(bool exit_code);
extern HACCEL (*sub_4D2F90)();
extern HACCEL (*sub_4D2FB0)();
extern HACCEL (*sub_4D2FD0)();
extern void (__cdecl*InitializeInputProcs)();
extern void (__cdecl*InitAccelerators)();
extern void (*j_InitializeInputProcs)();
extern HACCEL (*sub_4D3200)();
extern void (__cdecl*sub_4D3220)();
extern void (__cdecl*cleanBufferCounts)();
_BYTE * sub_4D32E0(unsigned __int8 a1, char a2);
extern int (*nullsub_61)();
extern void (*sub_4D3340)();
int sub_4D3350(int result);
extern int (*sub_4D3360)();
signed sub_4D3370(GameData *a1);
extern int (__thiscall*sub_4D3400)(void *this_);
extern int (*nullsub_62)();
extern int (*nullsub_63)();
extern int (*nullsub_64)();
extern Char4 (*get_netmode)();
extern void (*sub_4D3470)();
int sub_4D3480(const char *a1);
extern int (*GameUpgrade)(_DWORD *a1);
extern HANDLE (*ResetLeagueEvent)();
extern HANDLE (*sub_4D3540)();
extern void (*sub_4D3570)();
extern void (*sub_4D3580)();
extern void (__cdecl*sub_4D35A0)();
extern int (__stdcall*Game_Hdr_Node_Constructor)(DWORD a1);
int sub_4D37C0(dialog *a1, int (__stdcall *a2)(_DWORD, _DWORD));
extern void (*sub_4D3810)();
extern void (__cdecl*sub_4D3860)();
void j_BWFXN_SendLobbyCallTarget(const char *a1);
extern signed (__stdcall*CreateLadderGame)(GameData *a1, int a2);
signed JoinNetworkGame(GameData *a1);
signed InitializeNetworkProvider(Char4 provider_id);
int CreateGame(GameData *data);
extern signed (*sub_4D4130)();
extern int (__stdcall*LobbyLoopCnt)(int a1);
extern void (*sub_4D4400)();
extern void (__fastcall*endVideoProc)(dlgEvent *a1);
extern void (__cdecl*sub_4D4440)();
void PlayMovie(unsigned int a1);
extern BOOL (*sub_4D4540)();
extern void (__fastcall*TitleLoopUpdate)(dialog *dlg, int x, int y, rect *dst);
void sub_4D45A0(dialog *a1);
extern void (*sub_4D4620)();
extern void (__fastcall*TitleLoopTimer)(dialog *a1, __int16 a2);
void DrawBINDialog(dialog *dlg);
void TitleBlitAndLoop(dialog *dlg);
void titleInit(dialog *dlg);
extern int (__fastcall*TitleDlgProc)(dialog *dlg, struct dlgEvent *evt);
extern void (__cdecl*LoadTitle)();
extern int (*initializePlayerValues)();
extern void (*nullsub_65)();
signed packColorShifts(void *a1);
int sub_4D4B50(int a1);
unsigned sub_4D4B60(int a1);
LO_Header ** sub_4D4B80(int a1);
extern void (__cdecl*initializeImageArray)();
int sub_4D4C70(int a1, _DWORD *a2);
_DWORD * sub_4D4CB0(_DWORD *result, int a2);
_WORD * sub_4D4CC0(_WORD *result, _WORD *a2);
int sub_4D4CD0(int result, _DWORD *a2);
CImage * ImageDestructor(CImage *a1);
IScriptProgram * sub_4D4D70(int a1);
int sub_4D4D80(unsigned __int8 a1, int a2);
int sub_4D4DA0(int result, int a2);
BOOL sub_4D4DB0(int a1, unsigned int a2, unsigned int a3);
extern int (*sub_4D4E10)();
grpHead * sub_4D4E20(int a1);
extern CImage * (__cdecl*sub_4D4E30)();
void sub_4D4E80(CImage *a1);
void sub_4D4F10(CImage *image);
void removeSelectionCircleImage(CImage *a1);
void removeHPBar(CImage *a1);
extern void (__fastcall*CleanupIscriptBINHandle)(bool exit_code);
extern void (*nullsub_66)();
extern int (*nullsub_67)();
extern int (__stdcall*sub_4D5170)(int a1, int a2);
extern char (__fastcall*rle_draw_shift_hflip)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
extern char (__fastcall*rle_draw_shift)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
extern __int16 (__fastcall*rle_draw_greenbox)(__int16 a1, unsigned __int16 a2, grpFrame *a3, RECT *a4, int a5);
extern char (__fastcall*rle_draw_select)(int a1, int a2, grpFrame *a3, RECT *a4, unsigned __int8 a5);
void imageRenderFxn12_Main(RECT *a1, int a2, BYTE *a3);
extern char (__fastcall*rle_draw_warp_fade_hflip)(int a1, int a2, grpFrame *a3, int a4, unsigned __int8 a5);
extern char (__fastcall*rle_draw_warp_fade)(int a1, int a2, grpFrame *a3, RECT *a4, unsigned __int8 a5);
extern char (__fastcall*rle_draw_cloaked_hflip)(int a1, int a2, int a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_cloaked)(int a1, int a2, int a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_cloak_hflip)(int a1, int a2, int a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_cloak)(int a1, int a2, grpFrame *a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_invis_hflip)(int a1, int a2, int a3, tagRECT *a4, int a5);
extern char (__fastcall*rle_draw_invis)(int a1, int a2, grpFrame *a3, tagRECT *a4, int a5);
extern void (__fastcall*rle_advance_none)(CImage *image);
CImage * unpackImageGrpData(CImage *result);
extern BOOL (__fastcall*sub_4D56F0)(CImage *a1, int a2, int a3);
int sub_4D5740(int result, int a2, int a3);
void ISCRIPT_UseLOFile(point *p, CImage *image, OverlayType overlay_type, int a4);
CImage * CImage__updateGraphicData(CImage *image);
CImage * setImagePaletteType(CImage *result, RLEType a2);
void ISCRIPT_setPosition(CImage *result, char x, char y);
CImage * ISCRIPT_setVerticalPosition(CImage *result, char a2);
CImage * ISCRIPT_setHorizontalPosition(CImage *result, char a2);
void updateImageFrameIndex(CImage *image);
CImage * sub_4D5960(CImage *result);
CImage * sub_4D59C0(CImage *result);
extern void (__thiscall*updateImagePositionOffset)(CImage *this_);
void InitializeImageData(CImage *image, CSprite *sprite, int image_id, __int8 horizontal_offset, __int8 vertical_offset);
CImage * sub_4D5B00(CImage *result, int a2);
extern void (__cdecl*sub_4D5B60)();
void sub_4D5BB0(CSprite *a1);
extern void (*InitDamageOverlayCounts)();
extern void (__fastcall*rle_draw_texture_hflip)(int ecx0, int edx0, grpFrame *a3, RECT *a4, int a5);
extern void (__fastcall*rle_draw_texture)(int a1, int a2, grpFrame *a3, RECT *a4, int a5);
extern void (__fastcall*rle_advance_decloak)(CImage *this_);
extern void (__fastcall*rle_advance_cloak)(CImage *this_);
extern int (*sub_4D5DC0)();
extern CImage * (*sub_4D5DE0)();
extern int (__fastcall*sub_4D5E00)(int a1, grpHead *a2);
CImage * CopyImagePaletteType(CImage *result, CImage *a2);
void ISCRIPT_PlayFrame(CImage *image, int a2);
void updateImageDirection(CImage *image, unsigned __int8 direction);
void flipImage(CImage *image, char a2);
void setImageDirection(CImage *image, unsigned __int8 direction);
void compileHealthBar(CImage *a1, CSprite *a2);
extern void (__fastcall*rle_draw_playerside_hflip)(int a1, int a2, grpFrame *a3, RECT *a4, char player_id);
extern void (__fastcall*rle_draw_playerside)(int a1, int a2, grpFrame *a3, RECT *a4, char player_id);
extern int (__stdcall*ReadImagesArray)(FILE *a1);
void packImageData(CImage *image);
void CreateHealthBar(CSprite *a1);
extern void (__thiscall*sub_4D64A0)(unsigned int this_);
extern int (__stdcall*writeImages)(FILE *file);
void ISCRIPT_PlaySnd(SfxData sfx, CImage *a2);
void isValidScript(CImage *image, int a2);
void sub_4D6690(CImage *a1);
void sub_4D66B0(CImage *image);
void sub_4D6740(CImage *a1, CSprite *a2, points a3, points a4);
void sub_4D67D0(CImage *a1, int edi0, unsigned __int16 a3, int a4);
void createSelectionCircleImage(CSprite *a1, CImage *a2, unsigned __int8 a3, __int16 a4);
void InitializeHealthBarImage(int a1, CImage *a2);
extern void (*InitializePresetImageArrays)();
extern CImage * (__stdcall*ISCRIPT_CreateImage)(CImage *image, int image_id, char horizontal_offset, int vertical_offset, ImageOrder image_order);
void sub_4D6F00(CSprite *a1, points a2, points a3);
CImage * sub_4D6F90(CSprite *a1, unsigned __int16 a2, points a3, unsigned __int16 a4);
CImage ** CreateSelectionCircle(CSprite *a1, unsigned __int8 a2, __int16 a3);
CThingy * ISCRIPT_CreateSprite(CImage *image, unsigned __int16 sprite_id, int x, int y, char elevation_level);
extern void (*LoadImageData)();
extern void (*LoadInitIscriptBIN)();
extern void (__thiscall*BWFXN_PlayIscript)(CImage *image, IScriptProgramState *program_state, int noop, _DWORD *distance_moved);
void PlayIscriptAnim(CImage *image, Anims new_animation);
void PlayWarpInOverlay(CImage *image);
extern void (__fastcall*rle_advance_warp_fade)(CImage *image);
BOOL sub_4D8600(char a1);
void creditsSetDisplayTime(const char *a1);
void creditsSetFadeSpeed(const char *a1);
int sub_4D86A0(char **tag, _DWORD *is_tag);
int sub_4D8780(dialog *a1);
void creditsDlgDestroy(dialog *a1);
void sub_4D8840(int a1, char *source);
void creditsEndPage(dialog *a1);
extern void (__fastcall*sub_4D8930)(dialog *dlg, int x, int y, rect *dst);
HANDLE creditsSetBackgroundImageFromFile(const char *a1, dialog *a2);
void creditsSetFontColorFromFile(const char *a1);
int runCreditsScriptCommands(char *tag, unsigned int a2, dialog *a3);
signed runCredits(dialog *a1);
signed creditsDlgInit(dialog *a1);
int credits_idle(dialog *a1);
signed credits_keyDwn(dialog *a1, dlgEvent *a2);
extern int (__fastcall*creditsDlgInteract)(dialog *dlg, struct dlgEvent *evt);
void loadInitCreditsBIN(const char *a1);
void sub_4D8F90(int a1, EstablishingShot *a2);
extern void (*BeginCredits)(void);
extern void (*BeginEpilog)(void);
extern void (__cdecl*DisplayMissionEpilog)();
extern void (__cdecl*DisplayEstablishingShot)();
extern int (*sub_4D9250)();
extern DWORD (*sub_4D9260)();
void lmissionInitSelf(GamePosition a1);
extern DWORD (*resetLastInputFrameCounts)();
unsigned sub_4D9360(int a1);
extern void (*sub_4D93B0)();
extern void (__cdecl*gameloop_update_ui)();
extern void (__cdecl*RefreshAllUnits)();
extern void (*gameloop_update_game)();
extern void (*gameloop_advance2)();
extern int (__thiscall*GameLoopWaitSendTurn)(int *this_);
extern int (__thiscall*GameLoop_State)(void *a1);
extern void (*GameLoop_Top)();
extern GamePosition (*run_game)();
extern int (*sub_4D9AA0)();
extern int (*sub_4D9AB0)();
extern void (__fastcall*DestroyFontKey)(bool exit_code);
extern void (*DetectExpansionInstallation)();
void ClearAndFreeCdkeyStrings(const char *cdkeyowner, const char *cdkey);
int KeyIsValid(unsigned int a1, int a2);
int * getCDKeyInfo(void **a1, int *a2);
extern DWORD (*makeStringHash)();
BOOL KeyVerification(char *a1, const char *a2);
extern void (*InitializeFontKey)(void);
extern void (__fastcall*FreeLocalDLL)(bool exit_code);
BOOL dlgCenterScreen(HWND a1);
extern void (__fastcall*FreeMapdataTable)(bool exit_code);
extern void (*sub_4DA120)();
char * strTokenize(const char *a1);
int sub_4DA1D0(const char *a1);
extern HANDLE (*sub_4DA230)();
extern HANDLE (*sub_4DA240)();
extern HANDLE (*sub_4DA250)();
extern BOOL (__fastcall*SFileExists)(char *szFileName, HANDLE hMpq);
extern HANDLE (*sub_4DA290)();
extern void (__fastcall*CloseAllArchives)(bool exit_code);
extern void (__fastcall*vidinimoDestroy)(bool exit_code);
extern BOOL (__stdcall*LocalErrProc)(HWND a1, UINT a2, WPARAM a3, LPARAM a4);
HANDLE sub_4DA3E0(DWORD a1, void *a2, const char *a3, HANDLE hMpq);
extern int (*LoadMainModuleStringInfo)();
extern void (__fastcall*DestroyFonts)(bool exit_code);
HANDLE LoadInstallArchiveHD(const char *a1, char *a2, const char *hMpq, HANDLE phFile);
HANDLE LoadArchiveFromCD(int a1, char *a2, DWORD dwPriority, char *szFileName);
HANDLE LoadInstallArchiveCD(DWORD a1, const char *a2, const char *filename);
extern void (__fastcall*j_BWFXN_DSoundDestroy)(bool exit_code);
extern void (__cdecl*sub_4DA790)();
void localDll_Init(HINSTANCE a1);
extern void (__cdecl*CommandLineCheck)();
signed InitializeCDArchives(const char *filename, int a2);
void DataVersionCheck(const char *data_file_version);
extern Font * (__fastcall*AllocateFont)(char *font_path, int default_value, int a3, int a4, int search_scope, char *logfilename, int logline);
extern void (__cdecl*InitializeArchiveHandles)();
extern void (*LoadGameFonts)();
extern void (*LoadMenuFonts)();
extern void (__cdecl*PreInitData)();
extern void (__cdecl*audioVideoInit)();
BOOL gluMainDestroy(dialog *a1);
extern int (__thiscall*expansion_cd_archive_loaded)(void *this_);
extern int (__thiscall*vanilla_cd_archive_loaded)(void *this_);
extern signed (__cdecl*loadCampaignBIN)();
extern int (__fastcall*sub_4DB260)(const char *a1, int a2, int *a3, int a4, int a5);
void gluMainCreate(dialog *dlg);
void gluMain_CustomCtrlID(dialog *a1);
signed loadStareditProcess(dialog *a1);
BOOL cmpgn_WaitForCDRom(GluAllTblEntry a1, char *filename);
extern BOOL (__thiscall*sub_4DB6A0)(void *this_);
extern BOOL (__thiscall*sub_4DB6C0)(void *this_);
extern int (*SelGameMode)(int a1);
extern BOOL (*gluMain_DisplayCDRomErrorBinDlg)();
extern int (__fastcall*gluMain_Dlg_Interact)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadMenu_gluMain)();
extern int (__stdcall*append_melee_computer)(char a1);
extern int (*sub_4DBBC0)();
extern PlayerType * (*ClearMeleeCompSlots)();
extern void (__cdecl*setSinglePlayerValue)();
CampaignMenuEntry * getCampaignIndex(MapData a1, CampaignMenuEntry **a2);
extern int (__thiscall*parseCmpgnCheatTypeString)(const char *campaign_index, int race, int first_mission_index, int is_expansion, MapData4 *a5);
signed sub_4DBD20(const char *a1, size_t a2, int *a3);
extern void (__cdecl*updateActiveCampaignMission)();
CampaignMenuEntry * sub_4DBDA0(const char *a1);
extern signed (*sub_4DBE50)();
extern signed (*initSingle)();
extern void (*playActiveCinematic)();
void sub_4DBEE0(CampaignMenuEntry *a1);
extern void (__cdecl*sub_4DBF80)();
int CreateCampaignGame(MapData a1);
int LoadCampaignWithCharacter(int race);
extern int (__cdecl*CreateNextCampaignGame)();
extern signed (__stdcall*ContinueCampaign)(int a1);
unsigned RandomizeShort(int a1);
extern int (__stdcall*sub_4DC4E0)(int a1);
extern int (*sub_4DC510)();
extern unsigned (*sub_4DC520)();
unsigned sub_4DC530(unsigned int result);
extern void (__thiscall*set_rand_enabled)(int this_);
unsigned RandBetween(int a1, unsigned int a2, int a3);
extern void (__cdecl*BWFXN_NetSelectReturnMenu)();
void ContinueCampaignWithLevelCheat(MapData4 result, int a2, int race);
extern void (*sub_4DC650)();
extern void (__thiscall*sub_4DC660)(_DWORD *this_);
int sub_4DC670(size_t eax0, int a2);
int sub_4DC6A0(size_t eax0, int a2);
extern BOOL (__stdcall*EnumFunc)(HWND a1, LPARAM a2);
extern void (__fastcall*DestroyGluAllStrings)(bool exit_code);
int getBGPalInfo(MenuPosition a1);
_DWORD * sub_4DC7D0(_DWORD *result);
int sub_4DC800(_DWORD *a1, void *a2, _DWORD *a3);
_DWORD * sub_4DC840(_DWORD *result, _DWORD *a2, const void *a3);
extern int (*sub_4DC870)();
extern void (__cdecl*sub_4DC8D0)();
extern void (__cdecl*sub_4DC8F0)();
extern grpHead * (*sub_4DC940)();
extern int (__thiscall*cleanUpFileNameString)(char *a1);
void sub_4DCB00(char *a1, char *a2);
extern BOOL (__thiscall*sub_4DCBD0)(void *this_);
Timer * DestroyChildren(dialog *a1);
extern void (__cdecl*nextLeaveGameMenu)();
extern void (*loadMenu_None)();
extern void (__fastcall*DLGSwishOutProc)(dialog *a1, __int16 a2);
extern void (__fastcall*sub_4DCEA0)(dialog *a1, __int16 a2);
extern void (__cdecl*sub_4DCEE0)();
void setDialogString(dialog *a1, __int16 a2, const char *a3);
extern void (__cdecl*changeMenu)();
extern char (__stdcall*DLG_SwishOut)(dialog *dlg);
extern void (__cdecl*jmpNoMenu)();
extern void (__stdcall*buttonMouseOver)(int a1);
extern void (__fastcall*DLG_SwishInLock)(dialog *a1, __int16 a2);
void DLG_ServerMenuSwishBegin(int a1, dialog *a2, int a3);
void DlgSwooshin(__int16 timers_count, swishTimer *timers, dialog *a3, signed __int16 a4);
extern void (*loadTFontPcx)(void);
extern void (*loadtEffectPcx)(void);
void registerMenuFunctions(FnInteract *functions, dialog *a2, int functions_size_, int a4);
extern dialog * (__fastcall*loadFullMenuDLG)(const char *szFileName, void *buffer, int read, const char *logfilename, int logline);
extern dialog * (__thiscall*loadAndInitFullMenuDLG)(const char *this_);
extern const char * (__stdcall*get_GluAll_String)(GluAllTblEntry tbl_entry);
void sub_4DDE70(dialog *a1);
extern void (__cdecl*loadDlgGrp)();
extern void (*loadCursor)(void);
extern char (__fastcall*sub_4DE040)(dialog *dlg, struct dlgEvent *evt);
extern void (*init_gluesounds)(void);
extern void (*sub_4DE130)();
extern void (__fastcall*DLGSwishInProc)(dialog *a1, __int16 a2);
void DLG_SwishIn(dialog *a1);
extern void (__cdecl*SwitchMenu)();
signed replayCommand(const char *a1);
extern unsigned (__stdcall*sub_4DE740)(int a1);
extern DWORD (*sub_4DE770)();
extern int (*sub_4DE790)();
extern void (__cdecl*freeChkFileMem)();
BOOL sub_4DE7D0(const CHAR *a1);
signed trimTrailingSpaces(const char *a1);
_BYTE * sub_4DE810(DWORD a1, CHAR *a2);
_DWORD * sub_4DE840(_DWORD *result);
_DWORD * sub_4DE860(_DWORD *result);
extern int (*sub_4DE880)();
extern MapData (*sub_4DE890)();
extern int (*get_replay_seed)();
int set_replay_seed(int result);
extern int (*sub_4DE8C0)();
extern int (*sub_4DE8D0)();
int sub_4DE8E0(int result);
struct_v2 * sub_4DE8F0(struct_v2 *result);
struct_v2 * sub_4DE920(struct_v2 *result);
void getReplPlayerColors(int *result);
void getReplPlayerStructs(PlayerInfo *a1);
void copyPlayerStructsToReplayPlayerStructs(PlayerInfo *players_info, void *a2);
void SetReplayData(GameData *a1, PlayerInfo *a2, int *a3);
extern DWORD (*sub_4DEA90)();
extern ButtonState (__fastcall*BTNSCOND_ReplayPlayPause)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_ReplaySpeedUp)(u16 variable, int player_id, CUnit *unit);
extern ButtonState (__fastcall*BTNSCOND_ReplaySlowDown)(u16 variable, int player_id, CUnit *unit);
void SetGameSpeed_maybe(int game_speed, unsigned __int8 a2, unsigned int speed_multiplier);
extern void (__stdcall*sub_4DECF0)(unsigned __int8 a1);
extern void (*sub_4DED10)();
extern signed (__stdcall*CopyLastReplay)(char *a1);
int sub_4DEE90(DWORD a1, const char *a2);
extern void (__cdecl*replayFrameComputation)();
int getDirectoryPath(CHAR *a1, DWORD esi0, const char *a3);
Timer * saveGame_Destroy(dialog *a1);
extern HANDLE (__stdcall*GetReplayFileList)(void (__fastcall *a1)(_DWORD, _DWORD, _DWORD));
int sub_4DF1E0(const char *a1);
extern int (*DeleteFileIfExists)();
extern void (__fastcall*CMDACT_IncreaseReplaySpeed)(int a1, bool a2);
extern void (__fastcall*CMDACT_SetReplaySpeed)(int action_variable, bool is_shift_used);
extern void (__fastcall*CMDACT_DecreaseReplaySpeed)(int a1, bool a2);
extern signed (*replay_leaderboard_Hide)();
extern signed (__thiscall*replay_leaderboard_Show)(void *this_);
void sub_4DF4A0(dialog *a1);
extern void (__thiscall*sub_4DF520)(dialog *this_);
int LoadReplayFile(char *filename, int *a2);
extern int (__fastcall*savegame_Delete)(dialog *a1, dlgEvent *a2);
void sub_4DF740(dialog *a1, struct dlgEvent *evt);
extern u8 (__stdcall*ReplayFileListIterateItemProc)(char *a1);
extern int (__fastcall*savegame_TextBox)(dialog *dlg, dlgEvent *evt);
void createReplayListbox(dialog *a1);
extern int (__fastcall*savegame_Listbox)(dialog *dlg, dlgEvent *evt);
int saveGame_InitChildren(dialog *dlg);
void savegameBIN_CustomCtrlID(dialog *a1);
int SaveReplay(const char *a1, int a2);
int ConfirmReplayOverwrite(char *filename, __int16 a2);
int CopyLastReplayTo(char *a1);
void saveGame_Create(dialog *dlg);
extern int (__fastcall*savegameBIN_Main)(dialog *dlg, struct dlgEvent *evt);
int LoadSaveGameBIN_Main(int a1, RaceId a2);
extern int (*BWSetSecurityInfo)();
extern DWORD (__stdcall*CheckForOtherInstances)(LPCSTR lpClassName);
extern int (*VerifySystemMemory)();
extern void (__cdecl*CreateMainWindow)();
extern void (*main_game_run)();
extern void (__cdecl*RunGame)();
extern int (__stdcall*_WinMain)(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd);
extern int (__fastcall*sub_4E0B30)(dialog *a1, dlgEvent *a2);
void flc_ctrl_deactivate(dialog *a1);
int flc_draw_flc(dialog *a1, dialog *a2, rect *a3, int a4, int a5);
void flc_remove_timers(dialog *dlg);
void flc_mouse_update(dlgEvent *a1, rect *a2, dialog *a3);
void flc_clicked(dialog *a1);
void flc_hover_update(dialog *dlg);
extern void (__fastcall*flc_anim_update_fn)(dialog *dlg, __int16 a2);
void flc_draw_text(dialog *a1, char a2);
void flc_animate(dialog *dlg);
extern void (__fastcall*sub_4E1120)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*flc_draw)(dialog *dlg, int x, int y, rect *dst);
void MenuGenericBtnInitChildren(dialog *dlg);
BOOL flc_init_flc(dialog *a1);
int MenuGenericBtnUserEventHandler(dialog *a1, dlgEvent *a2);
void flc_init(dialog *a1);
extern int (__fastcall*Menu_Generic_Button)(dialog *dlg, dlgEvent *evt);
int sub_4E1640(dialog *a1, dlgEvent *a2);
int flc_ctrl_evn(dlgEvent *a1, dialog *a2);
extern int (__fastcall*flc_only_mouseover)(dialog *dlg, dlgEvent *evt);
extern int (__fastcall*flc_ctrl_interact)(dialog *dlg, struct dlgEvent *evt);
dialog * sub_4E18C0(dialog *a1);
dialog * sub_4E1900(dialog *a1);
void GenericControlMouseEvt(dlgEvent *a1, dialog *a2);
void removeDlgFromTimerTracking1(dialog *a1);
int GenericControlInteract(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*genericCheckboxInteract)(dialog *dlg, struct dlgEvent *evt);
extern bool (__fastcall*genericOptionInteract)(dialog *dlg, struct dlgEvent *evt);
extern bool (__fastcall*genericBtnInteract)(dialog *dlg, struct dlgEvent *evt);
void BWFXN_Draw(unsigned __int16 a1, int a2, int a3, unsigned __int16 a4);
extern void (__stdcall*BWFXN_DrawBox)(s16 x, s16 y, u16 w, u16 h);
extern BOOL (__stdcall*CreatePath_PopulatePathAreas)(struct_a1_1 *a1);
BOOL sub_4E2510(struct_a1_1 *a1);
BOOL sub_4E25F0(struct_a1_1 *a1);
signed sub_4E2700(int a1, struct_a1_1 *a2, int a3, int a4);
extern signed (*EndAreaFixup)();
extern int (__stdcall*AreaFixup_Constructor)(unsigned __int16 a1);
unsigned DoAreaFixup(unsigned int a1, __int16 a2, __int16 a3, int a4, int a5, int a6);
void upgradeAllUpgradesFromUnit(int a1, int (__stdcall *a2)(int, int, int, int), int a3);
void researchAllTechsFromUnit(int a1, int (__stdcall *a2)(int, int, int, int), int a3);
extern int (__fastcall*sub_4E2CB0)(int a1, int a2);
extern int (*somethingAIType)(void);
int CreateUnitHash(CUnit *a1);
void unpackUnitData(CUnit *a1, bool a2);
void packUnitData(CUnit *a1, int a2);
extern int (*sub_4E3DC0)();
void networkTBLPlayerMessage(int a1, __int16 a2);
extern void (__stdcall*CTF_FinishedCaptureFlagEvent)(int a1);
extern void (__stdcall*sub_4E3F10)(int a1);
extern void (__stdcall*CTF_TakeFlagEvent)(int a1);
void orders_CTFCOP2(CUnit *unit);
extern int (__fastcall*CTFCOP_CheckForFlagCapture)(CUnit *unit, CUnit *a2);
void orders_CTFCOP1(CUnit *a1);
void orders_CTFCOP_init(CUnit *unit);
void toggleUnitPath(CUnit *a1);
_DWORD * getAllocatedPath(_WORD *a1, __int16 *a2);
signed sub_4E4380(Position *a1, int a2, Position a3);
signed sub_4E44B0(signed int a1, Position *a2, signed int a3, Position a4);
signed sub_4E4520(CUnit *a1, Position *a2);
void sub_4E4590(dialog *dlg);
void sub_4E4670(dialog *dlg);
extern void (__fastcall*sub_4E46A0)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*sub_4E4750)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*sub_4E4770)(dialog *dlg, int x, int y, rect *dst);
extern void (*j_BWFXN_NextFrameHelperFunctionTarget)();
extern void (__fastcall*sub_4E4820)(dialog *dlg);
extern int (__fastcall*dlgfatal_loop)(dialog *dlg, struct dlgEvent *evt);
void load_DLGFatal_BIN(const char *error_location, const char *a2);
BOOL isAttemptingProtossBuild(CUnit *a1);
void orders_Warpin(CUnit *unit);
void orders_ProbeBuild(CUnit *unit);
void orders_pylon_build(CUnit *unit);
void orders_bldgUnderConstruction_Protoss(CUnit *unit);
extern void (__stdcall*sub_4E51C0)(dialog *dlg, __int16 a2, unsigned __int16 a3);
extern void (__cdecl*destroyStatsesBin)();
void printStatresInfo(dialog *a1, __int16 a2, int a3, int a4, int a5);
void showSupplyInfo(dialog *a1, __int16 a2, unsigned __int16 a3, unsigned __int16 a4);
extern void (__fastcall*statRes_Text_Update)(dialog *dlg, int x, int y, rect *dst);
extern void (__stdcall*setCountdownTimerString)(char *source);
extern void (*DisableCountdownTimer)();
extern void (__fastcall*StatRes_MainProc)(dialog *a1, __int16 a2);
extern void (__stdcall*hideLeftmostResource)(int a1);
extern int (__fastcall*StatRes_CustomCtrl)(dialog *dlg, dlgEvent *evt);
void StatRes_RegisterCustomProcs(dialog *a1);
extern int (__fastcall*StatRes_DialogInteract)(dialog *dlg, dlgEvent *evt);
extern void (*load_StatRes_BIN)();
BOOL sub_4E5AD0(CUnit *a1);
extern int (*sub_4E5B30)();
int getUpdatedSightRange(CUnit *unit, int a2);
int UnitIsInvincible_(CUnit *a1);
extern int (__fastcall*sub_4E5C90)(_DWORD a1, _DWORD a2);
void RemoveOverlays(CUnit *a1, unsigned int a2, unsigned int a3);
extern int (*sub_4E5D50)();
void sub_4E5D60(CUnit *result, UnitType a2);
int isUnitVisible(CUnit *a1);
int isTargetVisible(CUnit *a1, CUnit *a2);
Order getRightClickActionOrder(CUnit *a1);
extern int (*sub_4E5EE0)();
extern int (*sub_4E5F00)();
extern void (__stdcall*refreshUnitVision)(CUnit *unit);
void moveScreenToUnit(CUnit *a1);
void sub_4E6060(CUnit *a1, char a2, int esi0, char a4, int a5);
void UpdateUnitDamageOverlay(CUnit *a1);
void CreateShieldOverlay(CUnit *a1, int direction);
void CreateUnitSelection(CUnit *a1, char a2);
void sub_4E6260(char a1, CUnit *a2);
void DestroyUnitSelection(CUnit *a1);
void sub_4E62F0(CUnit *a1);
extern void (*sub_4E6310)();
void unitDeathSomething_0(CUnit *a1);
void initUnitTrapDoodad(CUnit *a1);
int _CreateDashedSelection(CUnit *a1);
void SetConstructionGraphic(CUnit *unit, int a2);
BOOL isConstructingAddon(CUnit *a1);
void CancelAddon_Direct(int a1);
void orders_NukeTrain(CUnit *unit);
extern void (__stdcall*orders_PlaceAddon)(CUnit *unit);
extern BOOL (__thiscall*unitIsActiveTransport)(CUnit *this_);
BOOL sub_4E6BE0(CUnit *a1, CUnit *a2);
extern int (*sub_4E6C00)();
BOOL sub_4E6C10(CUnit *a1, signed int x, signed int y);
CUnit * getLoadedUnitFromIndex(CUnit *a1, int a2);
bool * getFirstLoadedUnit(CUnit *a1);
signed iterateLoadedUnits(CUnit *a1, int (__fastcall *a2)(_DWORD, _DWORD), int a3);
signed getFirstLoadedWorker(CUnit *a1);
BOOL CanBeEnteredBy(CUnit *transport, CUnit *unit);
signed sub_4E6EF0(CUnit *a1, int a2);
signed isUnitLoaded(CUnit *a1);
extern int (__thiscall*getLoadedSpaceAmount)(CUnit *this_);
BOOL sub_4E72E0(CUnit *a1);
void orders_TransportIdle(CUnit *a1);
void orders_Pickup3_0(CUnit *a1);
extern signed (__stdcall*AI_GetTransportAssist)(CUnit *a1, int a2, int a3);
void transportIdleOpen(CUnit *a1);
BOOL canUnload(int a1, CUnit *unit, Position *outPos);
extern void (__stdcall*orders_MoveUnload)(CUnit *a1);
void sub_4E78E0(CUnit *transport, CUnit *a2);
void orders_Pickup4_0(CUnit *a1);
void orders_EnterTransport(CUnit *a1);
char sub_4E7E10(CUnit *a1, int a2);
CUnit * Unload_(CUnit *a1);
void orders_Unload(CUnit *a1);
CUnit * IterateUnitsAtLocationTargetProc(int (__fastcall *a1)(CUnit *, CUnit *), rect *area, CUnit *a3);
CUnit * _CreateSplashWeaponProc(__int16 a1, __int16 a2, __int16 a3, int (__fastcall *a4)(CUnit *, CUnit *), CUnit *a5);
CUnit * GetNearest(int a1, CUnit *a2, __int16 a3, __int16 a4, signed int a5, signed int a6, int a7, int a8, int (__fastcall *a9)(CUnit *, UnitType), void *data);
CUnit * sub_4E8660(__int16 a1, __int16 a2, int a3, int (__fastcall *a4)(_DWORD, _DWORD), int unit_type);
CUnit * GetNearestUnitFrom(__int16 a1, __int16 a2, __int16 a3, int (__fastcall *a4)(_DWORD, _DWORD), int unit_type);
CUnit * AI_ClosestUnit(CUnit *a1, int a2, int (__fastcall *a3)(CUnit *, CUnit *), CUnit *unit_type);
CUnit * AI_BestUnit_InBox(__int16 a1, CUnit *a2, int (__fastcall *a3)(CUnit *, CUnit *), CUnit *a4);
CUnit * ModifyUnit_maybe(Box16 *a1, CBullet *bullet, int (__fastcall *a3)(CUnit *, CBullet *));
extern __int16 (__thiscall*DlgLatency)(int this_);
bool sub_4E8920(dialog *a1, dlgEvent *a2);
extern bool (__fastcall*network_latencyRadioBtn)(dialog *dlg, dlgEvent *evt);
void sub_4E89A0(dialog *a1);
char sub_4E89C0(dialog *a1);
void network_options_menu_activate(dialog *dlg);
extern int (__fastcall*netdlg_BINDLG_Main)(dialog *dlg, dlgEvent *evt);
extern void (*open_network_options_menu)();
unsigned pixelPosHasCreep(__int16 a1, __int16 a2);
extern int (*sub_4E8C00)();
BOOL sub_4E8C20(CUnit *a1, CUnit *a2);
extern int (*sub_4E8C60)();
extern int (__fastcall*larvaCounterProc)(CUnit *a1, CUnit *a2);
BOOL sub_4E8CB0(__int16 *a1, int a2, int a3);
char UpdateLarvaOrderState_TooFar(int a1);
signed sub_4E8E10(CUnit *a1, int a2);
int UpdateHarvestValues(int result, int a2);
signed ChkLarvaStray(CUnit *a1, unsigned int a2, unsigned int a3);
extern void (__stdcall*ChkLarvaStray_0)(CUnit *a1, int a2, int a3);
void orders_StopCreepGrowth(CUnit *a1);
Order orders_InitCreepGrowth(CUnit *a1);
void Unburrow(CUnit *a1);
void orders_burrowed(CUnit *unit);
void orders_drone_infest(CUnit *unit);
void sub_4E99D0(CUnit *a1);
void sub_4E9A30(CUnit *unit);
void orders_DroneLand(CUnit *unit);
void orders_burrow(CUnit *unit);
void orders_Larva(CUnit *a1);
void performNydusCanalMove(CUnit *a1, CUnit *a2);
void orders_InfestMine4(CUnit *unit);
void orders_EnterNydusCanal(CUnit *a1);
void orders_InfestMine1(CUnit *unit);
void orders_deburrowed(CUnit *unit);
void secondaryOrd_SpawningLarva(CUnit *a1);
void secondaryOrd_SpreadCreepSpawningLarva(CUnit *a1);
int sub_4EA940(int a1, int a2);
BOOL writeUnitPointer(int a1, CUnit *a2, FILE *a3);
CUnit * sub_4EA9D0(unsigned int a1, void *a2);
int sub_4EAA80(unsigned int a1, char *a2, int a3);
extern int (__stdcall*WriteUnits)(FILE *file);
extern signed (*initializeGlobUnitCount)();
extern int (*_unk_dtor)(void);
extern void (*mapTransferVector_clear)();
_DWORD * sub_4EAE60(_DWORD *result);
void mapTransferVector2_clear(BOOL result);
extern int (*sub_4EAF30)();
extern void (*sub_4EAF50)();
extern int (__stdcall*mapStringCreate)(char a1, int a2, int a3, char *source, char *a5);
void mapDataTransfer(unsigned int a1, _BYTE *a2, char a3);
extern COrder * (__thiscall*sub_4EB070)(CUnit *this_);
extern char (*sub_4EB090)();
extern char (*sub_4EB0C0)();
extern void (__thiscall*sub_4EB0F0)(CUnit *this_);
CUnit * setNextWaypoint(CUnit *result, int a2, int a3);
extern int (__thiscall*SetUnitUnderDisruptionWeb)(CUnit *this_);
extern char (__fastcall*sub_4EB240)(int a1, CUnit *a2);
points setResourceTarget(CUnit *unit);
BOOL sub_4EB2E0(CUnit *a1, CUnit *a2);
extern int (*sub_4EB2F0)();
void UpdateEnergyTimer(CUnit *unit);
int orders_HoldPositionSuicidal(CUnit *a1);
void sub_4EB5E0(CUnit *a1);
char ProgressSubunitDirection(CUnit *a1, char a2);
signed moveToTarget(CUnit *a1, CUnit *a2);
int SetMoveTarget_xy(int x, int y, CUnit *unit);
signed sub_4EB900(CUnit *a1, CUnit *a2);
signed Warping_SetMoveTarget(CUnit *a1, int a2, int a3);
int _moveToTarget(CUnit *a1, CUnit *a2);
CSprite * UnitBeginAcquireMoveTarget(int a1, CUnit *a2, int a3);
void SetUnitPosition(CUnit *unit, __int16 pos_x, __int16 pos_y);
void MoveUnit(CUnit *unit, __int16 pos_x, __int16 pos_y);
void RefreshSprite(CSprite *a1, unsigned __int8 a2);
extern void (__thiscall*sub_4EBC30)(CUnit *unit);
void sub_4EBDB0(CUnit *a1);
void RefreshUnit(CUnit *unit);
void UpdateUnitSpriteInfo(CUnit *unit);
void ordersIDCases(CUnit *unit);
void ProgressSecondaryOrder_Hidden(CUnit *a1);
void performSecondaryOrders(CUnit *a1);
void updateUnitTimers(CUnit *unit);
extern void (__thiscall*unitUpdate)(CUnit *unit);
void ordersEntries(CUnit *unit);
extern void (__fastcall*UpdateUnitOrderData)(CUnit *unit);
extern void (*UpdateUnits)();
extern void (__cdecl*initializeDefaultPlayerNames)();
signed gluLogin_CharacterCreate_CheckDuplicate(char *a1);
extern void (*sub_4ED3E0)();
signed gluLogin_Activate(dialog *a1);
int sub_4ED440(ID *a1);
extern int (__stdcall*ID_Constructor)(CharacterData *a1);
extern DialogFlags (__fastcall*sub_4ED500)(__int16 a1);
extern void (__fastcall*sub_4ED530)(__int16 a1);
DialogFlags gluLogin_SetSelect_Evt(dialog *a1);
extern HANDLE (*sub_4ED620)();
void gluLogin_Listbox_Init_Evt(dialog *a1);
extern void (__stdcall*gluLogin_Init)(dialog *a1);
void j_genericListboxDropdown(dialog *a1);
extern int (__fastcall*gluLogin_Listbox)(dialog *dlg, dlgEvent *evt);
void gluLogin_CustomCtrlID(dialog *dlg);
extern void (__stdcall*gluLogin_DeleteCharacter)(dialog *a1);
extern void (__stdcall*gluLogin_CreateCharacter)(dialog *a1);
extern int (__fastcall*gluLogin_Main)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadMenu_gluLogin)();
extern HWND (__stdcall*GetClassWindow)(const char *a1);
extern int (__fastcall*openDlg)(LPCSTR lpDirectory, int a2, unsigned __int8 *a3, int a4);
BOOL sub_4EDEC0(const char *a1);
extern int (__thiscall*sub_4EDEF0)(void *this_, char *a2);
extern int (__stdcall*sub_4EDF20)(int csidl, const char *a2);
int sub_4EDFC0(const char *a1);
extern void (__fastcall*destroyFileFindIndexer)(bool exit_code);
extern void (__cdecl*FastIndexInit)();
extern void (__stdcall*mouseOver_Loading_CB)(int a1);
extern int (*SinglePlayerMeleeInitGame)();
extern void (__cdecl*BWFXN_InitializePlayerConsole)();
extern signed (*sub_4EE210)();
extern void (__cdecl*LoadRaceUI)();
extern signed (*RestartGame)();
extern signed (*LoadGameCreate)();
extern int (*LevelCheatInitGame)();
extern void (__cdecl*free_game)();
extern void (__cdecl*hotkeyRemapping)();
extern signed (*LoadGameCore)();
extern signed (*GameInit)();
extern signed (*sub_4EEFD0)();
extern signed (*new_game)();
extern int (__thiscall*DrawDialogImage)(rect *this_, Bitmap *a2, int a3, int a4, int a5);
void sub_4EF530(__int16 *a1);
extern void (__fastcall*genericImageUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericDlgUpdate)(dialog *dlg, int x, int y, rect *dst);
int sub_4EF600(rect *a1, unsigned int a2, __int16 a3, __int16 a4, DialogFlags a5);
void sub_4EF6D0(rect *result, dialog *dlg, char a3);
int sub_4EF710(rect *a1, unsigned int a2, int a3, int x, __int16 y, int width, DialogFlags a7);
int sub_4EF7E0(__int16 a1, unsigned int a2, __int16 a3, rect *a4);
unsigned sub_4EF7F0(int a1, unsigned int a2, rect *a3);
void DlgDrawText(rect *a1, dialog *a2, int a3, int a4);
extern void (__fastcall*genericCStaticUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericRStaticUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericLStaticUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericEditUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericCheckboxUpdate)(dialog *dlg, int x, int y, rect *dst);
extern void (__fastcall*genericOptionUpdate)(dialog *dlg, int x, int y, rect *dst);
void DrawStandardButtonGraphic(dialog *a1, rect *a2);
void DrawAlternateButtonGraphic(dialog *a1, dialog *ecx0, rect *a3);
void sub_4EFF80(__int16 a1, __int16 a2);
void DrawButtonImage(dialog *a1, rect *a2);
void sub_4F02C0(char a1, __int16 *a2);
extern void (__fastcall*genericBtnUpdate)(dialog *dlg, int x, int y, rect *dst);
int contour_gen_bottomRight(int a1);
extern int (*contour_gen_topRight)(void);
extern int (*contour_gen_leftTop)(void);
extern int (*contour_gen_bottomLeft)(void);
extern int (*sub_4F1680)();
extern int (__fastcall*sub_4F16C0)(int a1, int a2, int *a3, signed __int16 *a4, int a5);
BOOL sub_4F17C0(CUnit *unit, CUnit *a2);
BOOL sub_4F1870(CUnit *a1, __int16 a2, __int16 a3);
BOOL TerrainCollision(CUnit *a1);
int GetOthersLocation(int a1, int a2);
signed sub_4F1B70(CUnit *a1);
int sub_4F1C70(CUnit *a1, int a2);
CUnit * FindCollidingUnit(CUnit *a1);
signed sub_4F2160(CUnit *a1);
CUnit ** sub_4F2240(CUnit *a1);
int sub_4F2260(CUnit *a1, int a2, CUnit *a3);
int sub_4F29E0(CUnit *a1, int a2);
signed sub_4F2A70(CUnit *a1, CUnit *a2);
signed sub_4F2DE0(CUnit *a1);
void sub_4F2F00(dialog *a1);
extern void (*destroy_textbox_bin)();
void sub_4F3040(dialog *a1);
void SetTargetDlgText(char *a1);
extern bool (__fastcall*textBox_ctrl_charEvent)(dialog *a1, dlgEvent *a2);
void sendChatMessage(const char *message);
void onSendText(dialog *a1, dlgEvent *a2, CheatFlags a3);
extern int (__fastcall*textbox_CtrlInteract)(dialog *dlg, struct dlgEvent *evt);
void textbox_DLG_Init_Evt(dialog *dlg);
extern int (__fastcall*textbox_DLG_Interact)(dialog *dlg, dlgEvent *evt);
extern void (*load_textbox_BIN)();
void destroyPowerupImageOverlay(CUnit *a1);
int sub_4F39A0(CUnit *a1);
BOOL sub_4F3A80(CUnit *a1);
u8 sub_4F3AF0(char a1, CUnit *a2, int a3, char a4);
extern u8 (__stdcall*ResetUnitPowerup)(CUnit *a1);
void killPowerup(CUnit *a1);
extern void (__stdcall*sub_4F3CA0)(CUnit *a1, CUnit *a2);
void orders_Powerup2(CUnit *a1);
void orders_Powerup1(CUnit *unit);
signed isBadName(int a1, const char *name, size_t name_length);
extern void (__fastcall*ProgressDownload_maybe)();
extern void (*sub_4F40C0)();
unsigned sub_4F40D0(int a1);
extern BOOL (*LobbyLoopTurns)();
extern char (__fastcall*RemoveAcidSpores)(int a1, CUnit *a2);
extern int (__thiscall*GetAcidSporeImage)(CUnit *this_);
void sub_4F4240(CUnit *a1);
void sub_4F4260(CUnit *a1);
void sub_4F4290(CUnit *a1);
void UpdateAcidSporeOverlays(CUnit *a1);
void CreatePlagueOverlay(CUnit *a1);
char sub_4F45B0(CUnit *a1);
void CreateEnsnareOverlay(CUnit *a1);
CUnit * sub_4F4640(CUnit *result);
extern int (__fastcall*CorrosiveAcidProc)(CUnit *a1, int player_id);
extern int (__fastcall*EnsnareProc)(CUnit *a1, CUnit *a2);
void CloakProc(CUnit *a1);
void CorrosiveAcidHit(__int16 x, __int16 y, int player_id);
void ConsumeHit(CUnit *target, CUnit *attacker);
void EnsnareHit(__int16 x, __int16 y, CUnit *attacker);
extern void (__stdcall*DarkSwarmHit)(int x, __int16 y, unsigned __int8 player_id);
extern void (__stdcall*BroodlingHit)(CUnit *a1, CUnit *a2);
extern int (__fastcall*PlagueHit)(CUnit *a1, CUnit *a2);
void Plague_(__int16 a1, __int16 a2, CUnit *a3);
extern void (__thiscall*sub_4F4B70)(CUnit *this_);
extern int (*nullsub_68)();
extern int (__stdcall*sub_4F4BC0)(int a1, _DWORD a2, int a3);
extern LRESULT (__stdcall*sub_4F4C00)(int a1, void (__stdcall *a2)(const char *, _DWORD, int));
extern void (*destroy_statfluf_bin)();
void statflufDlgUpdate(dialog *dlg);
extern int (__fastcall*statfluf_DLG_Interact)(dialog *dlg, dlgEvent *evt);
extern void (*load_statfluf_BIN)();
extern void (*destroy_statf10_bin)();
void drawGameMenuContextHelp(dialog *dlg);
extern void (__fastcall*statf10_ButtonUpdate)(dialog *dlg, int x, int y, rect *dst);
void Statf10_MouseMoveEvt(dialog *dlg, struct dlgEvent *evt);
int sub_4F50D0(int result);
void setActiveDlgElement(dialog *dlg, struct dlgEvent *evt);
void load_gamemenu(dialog *result);
extern int (__fastcall*statf10_ButtonInteract)(dialog *dlg, dlgEvent *evt);
void Statf10_RegisterCustomProcs(dialog *a1);
extern int (__fastcall*Statf10_DialogProc)(dialog *dlg, dlgEvent *evt);
extern void (*load_Statf10_BIN)();
void load_helpmenu(dialog *a1);
void * sub_4F5460(dialog *a1, dlgEvent *a2);
void help_listbox_create(dialog *a1);
extern bool (__fastcall*help_Listbox)(dialog *dlg, dlgEvent *evt);
void help_BINDLG_CustomCtrlID(dialog *a1);
extern int (__fastcall*help_BINDLG)(dialog *dlg, dlgEvent *evt);
extern void (*open_help)();
extern void (__stdcall*msgfltr_Cancel)(char a1);
extern void (__fastcall*genericPopupDlgInteract)(dialog *a1, dlgEvent *a2);
extern void (__fastcall*BWFXN_OpenGameDialog)(char *a1, FnInteract a2);
extern void (*HidePopupDialog)();
void okcancel_activate(dialog *dlg);
extern void (__fastcall*DLG_DrawTextUpdate_CB)(dialog *dlg, int x, int y, rect *dst);
int okcancel_destroy(dialog *a1, dlgEvent *a2);
extern int (__fastcall*wait_BINDLG)(dialog *dlg, dlgEvent *evt);
dialog * okcancel_create(dialog *a1);
void load_wait(const char *a1);
extern int (__fastcall*okcancel_Interact)(dialog *dlg, struct dlgEvent *evt);
int loadOKCancelBIN(int a1, const char *a2, HANDLE phFile);
int loadOKBIN(int a1, const char *a2, HANDLE phFile);
void loadOKCancelDialog(const char *message, int (__fastcall *a2)(__int16), char *a3);
void open_okcancel_dialog(int (__fastcall *a1)(__int16), const char *a2);
void open_ok_dialog(int (__fastcall *a1)(__int16), const char *a2);
signed AppAddExit(AppExitHandle a1);
char ApplyHallucinationStats(CUnit *a1);
char RemoveStasisField(CUnit *a1);
CThingy * replaceFeedbackSprite(CUnit *a1, int a2);
extern char (__thiscall*CHK_UNIT_FinalCreateStep)(CUnit *this_);
u8 * sub_4F65B0(CUnit *a1, CUnit *a2);
char sub_4F66D0(CUnit *unit);
extern int (__fastcall*MaelStromProc)(CUnit *a1, CUnit *a2);
void StasisFieldOverlay(CUnit *a1, unsigned __int8 a2);
u8 sub_4F6830(CUnit *a1);
void MaelstromHit(int x, __int16 y, CUnit *a3);
extern int (__fastcall*StasisFieldProc)(CUnit *a1, CUnit *a2);
signed MindControl_Hit(CUnit *a1, CUnit *a2);
extern void (__stdcall*orders_CastMindControl)(CUnit *a1);
CUnit * StasisFieldHit(__int16 a1, int a2, CUnit *a3);
extern void (__stdcall*DisruptionWebHit)(int a1, __int16 a2, char a3);
extern CUnit * (__thiscall*sub_4F6B90)(CUnit *this_, int a2);
void orders_Hallucination1(CUnit *a1);
extern void (__stdcall*orders_Feedback)(CUnit *a1);
void orders_RightClickAction(CUnit *unit);
void orders_Special(CUnit *a1);
void gluRdyZ_CustomCtrlID(dialog *dlg);
void RdyZFrame(dialog *a1);
extern int (__fastcall*gluRdyZ_BINDLG_Loop)(dialog *dlg, struct dlgEvent *evt);
extern void (*loadMenu_gluRdyZ)(void);
void gluRdyT_CustomCtrlID(dialog *a1);
void RdyTFrame(dialog *a1);
extern int (__fastcall*gluRdyT_BINDLG_Loop)(dialog *dlg, dlgEvent *evt);
extern void (*loadMenu_gluRdyT)(void);
void gluRdyP_CustomCtrlID(dialog *dlg);
void rdyPFrame(dialog *a1);
extern int (__fastcall*gluRdyP_BINDLG_Loop)(dialog *dlg, dlgEvent *evt);
extern void (*loadMenu_gluRdyP)(void);
void PlayMovieWithIntro(Cinematic a1);
extern void (*nullsub_4)();
extern _DWORD (__cdecl*__ld12cvt_0)(_DWORD a1, _DWORD a2);
extern _DWORD (__cdecl*___ld12cvt)(_DWORD a1, _DWORD a2);
extern int (__cdecl*___strgtold12_0)(int a1, int a2);
extern int (__cdecl*____strgtold12)(int a1, int a2);
extern int (*false_0)();
extern int (*LeagueEventConstructor)();
extern int (*_list_ctor)();
extern int (*_initFloat)();
extern int (*_initFloat_0)();
extern int (*CriticalSectionConstructor_1)();
extern int (*_initFloat_1)();
extern int (*_initFloat_2)();
extern int (*_initFloat_3)();
extern int (*ExceptionFilterConstructor)();
extern int (*_initFloat_4)();
extern int (*_list_ctor_0)();
extern int (*_initFloat_5)();
extern int (*_initFloat_6)();
extern int (*_initFloat_7)();
extern int (*_initFloat_8)();
extern int (*_initFloat_9)();
extern int (*_initFloat_10)();
extern int (*_initFloat_11)();
extern int (*_initFloat_12)();
extern int (*_initFloat_13)();
extern int (*_initFloat_14)();
extern int (*_initFloat_15)();
extern int (*_initFloat_16)();
extern int (*_initFloat_17)();
extern int (*_initFloat_18)();
extern int (*_initFloat_19)();
extern int (*_initFloat_20)();
extern int (*_initFloat_21)();
extern int (*CriticalSectionConstructor_0)();
extern int (*_list_sfx_ctor)();
extern int (*_initFloat_22)();
extern int (*_initFloat_23)();
extern int (*_list_netMode_ctor)();
extern int (*_initFloat_24)();
extern int (*_list_characters_ctor)();
extern int (*_initFloat_25)();
extern int (*_initFloat_26)();
extern int (*_initFloat_27)();
extern int (*_initFloat_28)();
extern int (*_list_ctor_1)();
extern int (*_initFloat_29)();
extern int (*_initFloat_30)();
extern int (*_list_ctor_2)();
extern int (*_initFloat_31)();
extern int (*_initFloat_32)();
extern int (*_initFloat_33)();
extern int (*_initFloat_34)();
extern int (*_initFloat_35)();
extern int (*_initFloat_36)();
extern int (*_initFloat_37)();
extern int (*_initFloat_38)();
extern int (*_list_modem_ctor)();
extern int (*_list_phonebook_ctor)();
extern int (*_initFloat_39)();
extern int (*_initFloat_40)();
extern int (*_list_ctor_3)();
extern int (*_initFloat_41)();
extern int (*_list_BNGameTypeComboBox_ctor)();
extern int (*_initFloat_42)();
extern int (*_initFloat_43)();
extern int (*_initFloat_44)();
extern int (*_list_BNMapComboBox_ctor)();
extern int (*_initFloat_45)();
extern int (*_initFloat_46)();
extern int (*_initFloat_47)();
extern int (*_initFloat_48)();
extern int (*_initFloat_49)();
extern int (*_initFloat_50)();
extern int (*_initFloat_51)();
extern int (*_initFloat_52)();
extern int (*_initFloat_53)();
extern int (*_initFloat_54)();
extern int (*_initFloat_55)();
extern int (*_initFloat_56)();
extern int (*_initFloat_57)();
extern int (*_initFloat_58)();
extern int (*_initFloat_59)();
extern int (*_initFloat_60)();
extern int (*_initFloat_61)();
extern int (*_initFloat_62)();
extern int (*_initFloat_63)();
extern int (*_initFloat_64)();
extern int (*_initFloat_65)();
extern int (*_initFloat_66)();
extern int (*_initFloat_67)();
extern int (*_initFloat_68)();
extern int (*_initFloat_69)();
extern int (*_initFloat_70)();
extern int (*_initFloat_71)();
extern int (*_list_playerTriggers_ctor)();
extern int (*_initFloat_72)();
extern int (*_initFloat_73)();
extern int (*_initFloat_74)();
extern int (*_initFloat_75)();
extern int (*_initFloat_76)();
extern int (*_initFloat_77)();
extern int (*_initFloat_78)();
extern int (*_initFloat_79)();
extern int (*_initFloat_80)();
extern int (*_initFloat_81)();
extern int (*_initFloat_82)();
extern int (*_initFloat_83)();
extern int (*_initFloat_84)();
extern int (*_initFloat_85)();
extern int (*_initFloat_86)();
extern int (*_initFloat_87)();
extern int (*_initFloat_88)();
extern int (*_initFloat_89)();
extern int (*_initFloat_90)();
extern int (*_list_league_ctor)();
extern int (*_initFloat_91)();
extern int (*_initFloat_92)();
extern int (*_initFloat_93)();
extern int (*_initFloat_94)();
extern int (*_initFloat_95)();
extern int (*_initFloat_96)();
extern int (*_initFloat_97)();
extern int (*_initFloat_98)();
extern int (*_initFloat_)();
extern int (*_initFloat__0)();
extern int (*_initFloat__1)();
extern int (*_initFloat__2)();
extern int (*_initFloat__3)();
extern int (*_initFloat__4)();
extern int (*_initFloat__5)();
extern int (*_initFloat__6)();
extern int (*_initFloat__7)();
extern int (*_initFloat__8)();
extern int (*_initFloat__9)();
extern int (*_initFloat__10)();
extern int (*_initFloat__11)();
extern int (*_list_banned_ctor)();
extern int (*_initFloat__12)();
extern int (*_initFloat__13)();
extern int (*_initFloat__14)();
extern int (*_initFloat__15)();
extern int (*_list_ctor_4)();
extern int (*_list_ctor_5)();
extern int (*_initFloat__16)();
extern int (*_initFloat__17)();
extern int (*_initFloat__18)();
extern int (*_initFloat__19)();
extern int (*_initFloat__20)();
extern int (*_initFloat__21)();
extern int (*_initFloat__22)();
extern int (*_initFloat__23)();
extern int (*_initFloat__24)();
extern int (*_initFloat__25)();
extern int (*_initFloat__26)();
extern int (*_list_briefingTriggers_ctor)();
extern int (*_initFloat__27)();
extern int (*_initFloat__28)();
extern int (*_initFloat__29)();
extern int (*_initFloat__30)();
extern int (*_initFloat__31)();
extern int (*_initFloat__32)();
extern int (*_initFloat__33)();
extern int (*_initFloat__34)();
extern int (*_initFloat__35)();
extern int (*_initFloat__36)();
extern int (*_list_ctor_6)();
extern int (*_initFloat__37)();
extern int (*_initFloat__38)();
extern int (*_initFloat__39)();
extern int (*_initFloat__40)();
extern int (*_initFloat__41)();
extern int (*_initFloat__42)();
extern int (*_initFloat__43)();
extern int (*_initFloat__44)();
extern int (*_initFloat__45)();
extern int (*_initFloat__46)();
extern int (*_initFloat__47)();
extern int (*_initFloat__48)();
extern int (*_initFloat__49)();
extern int (*_initFloat__50)();
extern int (*_initFloat__51)();
extern int (*_initFloat__52)();
extern int (*_initFloat__53)();
extern int (*_initFloat__54)();
extern int (*_initFloat__55)();
extern int (*_initFloat__56)();
extern int (*_initFloat__57)();
extern int (*_initFloat__58)();
extern int (*_initFloat__59)();
extern int (*_initFloat__60)();
extern int (*_initFloat__61)();
extern int (*_initFloat__62)();
extern int (*_initFloat__63)();
extern int (*_initFloat__64)();
extern int (*SBigConstructor)();
extern int (*SBigConstructor_0)();
extern int (*_initFloat__65)();
extern int (*_initFloat__66)();
extern int (*_initFloat__67)();
extern int (*_initFloat__68)();
extern int (*_initFloat__69)();
extern int (*_initFloat__70)();
extern int (*_initFloat__71)();
extern int (*_initFloat__72)();
extern int (*_initFloat__73)();
extern int (*_initFloat__74)();
extern int (*_initFloat__75)();
extern int (*_initFloat__76)();
extern int (*_initFloat__77)();
extern int (*_initFloat__78)();
extern int (*_initFloat__79)();
extern int (*_initFloat__80)();
extern int (*_initFloat__81)();
extern int (*_initFloat__82)();
extern int (*_initFloat__83)();
extern int (*_initFloat__84)();
extern int (*_initFloat__85)();
extern int (*_initFloat__86)();
extern int (*_initFloat__87)();
extern int (*_initFloat__88)();
extern int (*_initFloat__89)();
extern int (*_initFloat__90)();
extern int (*_initFloat__91)();
extern int (*_initFloat__92)();
extern int (*_initFloat__93)();
extern int (*_initFloat__94)();
extern int (*_initFloat__95)();
extern int (*_initFloat__96)();
extern int (*_initFloat__97)();
extern int (*_initFloat__98)();
extern int (*_initFloat__)();
extern int (*_initFloat___0)();
extern int (*_initFloat___1)();
extern int (*_initFloat___2)();
extern int (*_initFloat___3)();
extern int (*_initFloat___4)();
extern int (*_initFloat___5)();
extern int (*_initFloat___6)();
extern int (*_initFloat___7)();
extern int (*_initFloat___8)();
extern int (*_initFloat___9)();
extern int (*_initFloat___10)();
extern int (*_initFloat___11)();
extern int (*_initFloat___12)();
extern int (*_initFloat___13)();
extern int (*_initFloat___14)();
extern int (*_initFloat___15)();
extern int (*_initFloat___16)();
extern int (*_initFloat___17)();
extern int (*_list_areaFixups_ctor)();
extern int (*_initFloat___18)();
extern int (*_initFloat___19)();
extern int (*_initFloat___20)();
extern int (*_initFloat___21)();
extern int (*_initFloat___22)();
extern int (*_initFloat___23)();
extern int (*_initFloat___24)();
extern int (*_initFloat___25)();
extern int (*_initFloat___26)();
extern int (*_initFloat___27)();
extern int (*_initFloat___28)();
extern int (*_initFloat___29)();
extern int (*_initFloat___30)();
extern int (*_initFloat___31)();
extern int (*_initFloat___32)();
extern int (*CriticalSectionConstructor)();
extern int (*_initFloat___33)();
extern int (*_initFloat___34)();
extern int (*_initFloat___35)();
extern int (*_initFloat___36)();
extern int (*_initFloat___37)();
extern int (*_initFloat___38)();
extern int (*_initFloat___39)();
extern int (*_initFloat___40)();
extern int (*_initFloat___41)();
extern int (*_initFloat___42)();
extern int (*_list_ctor_7)();
extern int (*_initFloat___43)();
extern int (*_initFloat___44)();
extern int (*_initFloat___45)();
extern int (*_initFloat___46)();
extern int (*_initFloat___47)();
extern int (*_initFloat___48)();
extern int (*_initFloat___49)();
extern int (*_initFloat___50)();
extern int (*_initFloat___51)();
extern int (*_initFloat___52)();
extern int (*_list_ctor_8)();
extern int (*_initFloat___53)();
extern int (*_initFloat___54)();
extern int (*UIDlgListConstructor)();
extern int (*_initFloat___55)();
extern int (*_initFloat___56)();
extern int (*_initFloat___57)();
extern int (*_initFloat___58)();
extern int (*_initFloat___59)();
extern int (*_initFloat___60)();
extern int (*_initFloat___61)();
extern int (*_initFloat___62)();
extern int (*_initFloat___63)();
extern int (*_initFloat___64)();
extern int (*_initFloat___65)();
extern int (*_initFloat___66)();
extern int (*_initFloat___67)();
extern int (*_initFloat___68)();
extern int (*_initFloat___69)();
extern void (__cdecl*LeagueEventDestructor)();
extern void (__cdecl*_list_dtor)();
extern void (__cdecl*CriticalSectionDestructor_1)();
extern void (__cdecl*j_ExceptionFilterDestructor)();
extern void (__cdecl*_list_dtor_0)();
extern void (__cdecl*CriticalSectionDestructor_0)();
extern void (__cdecl*_list_sfx_dtor)();
extern void (__cdecl*_list_netMode_dtor)();
extern void (__cdecl*_list_characters_dtor)();
extern void (__cdecl*_list_dtor_1)();
extern void (__cdecl*_list_dtor_2)();
extern void (__cdecl*_list_modem_dtor)();
extern void (__cdecl*_list_phonebook_dtor)();
extern void (__cdecl*_list_dtor_3)();
extern void (__cdecl*_list_BNGameTypeComboBox_dtor)();
extern void (__cdecl*_list_BNMapComboBox_dtor)();
extern void (__cdecl*_list_playerTriggers_dtor)();
extern void (__cdecl*_list_league_dtor)();
extern void (__cdecl*_list_banned_dtor)();
extern void (__cdecl*_list_dtor_4)();
extern void (__cdecl*_list_dtor_5)();
extern void (__cdecl*_list_briefingTriggers_dtor)();
extern void (__cdecl*_list_dtor_6)();
extern void (__cdecl*SBigDestructor)();
extern void (__cdecl*SBigDestructor_0)();
extern void (__cdecl*_list_areaFixups_dtor)();
extern void (__cdecl*CriticalSectionDestructor)();
extern void (__cdecl*_list_dtor_7)();
extern void (__cdecl*_list_dtor_8)();
extern void (__cdecl*UIDlgListDestructor)();
extern _SCOPETABLE_ENTRY& stru_4FE5F0;
extern CHAR(&ProcName)[];
extern CHAR(&ModuleName)[];
extern _SCOPETABLE_ENTRY& stru_4FE618;
extern char(&aRuntimeError)[15];
extern char(&aTlossError)[14];
extern char(&aSingError)[13];
extern char(&aDomainError)[15];
extern char(&aR6029ThisAppli)[162];
extern char(&aR6028UnableToI)[37];
extern char(&aR6027NotEnough)[53];
extern char(&aR6026NotEnough)[53];
extern char(&aR6025PureVirtu)[38];
extern char(&aR6024NotEnough)[53];
extern char(&aR6019UnableToO)[41];
extern char(&aR6018Unexpecte)[33];
extern char(&aR6017Unexpecte)[45];
extern char(&aR6016NotEnough)[44];
extern char(&aThisApplicatio)[150];
extern char(&aR6009NotEnough)[44];
extern char(&aR6008NotEnough)[42];
extern char(&aR6002FloatingP)[37];
extern char(&aMicrosoftVisua)[37];
extern char(&aRuntimeErrorPr)[];
extern char(&aProgramNameUnk)[];
extern _SCOPETABLE_ENTRY& stru_4FEA28;
extern _SCOPETABLE_ENTRY& stru_4FEA38;
extern _SCOPETABLE_ENTRY(&stru_4FEA48)[2];
extern CHAR(&aFlsfree)[];
extern CHAR(&aFlssetvalue)[];
extern CHAR(&aFlsgetvalue)[];
extern CHAR(&aFlsalloc)[];
extern CHAR(&aKernel32_dll_0)[];
extern _SCOPETABLE_ENTRY& stru_4FEAA0;
extern _SCOPETABLE_ENTRY& stru_4FEAB0;
extern CHAR(&aGetprocesswind)[];
extern CHAR(&aGetuserobjecti)[];
extern CHAR(&aGetlastactivep)[];
extern CHAR(&aGetactivewindo)[];
extern CHAR(&aMessageboxa)[];
extern CHAR(&LibFileName)[];
extern _SCOPETABLE_ENTRY& stru_4FEB30;
extern _SCOPETABLE_ENTRY& stru_4FEB40;
extern _SCOPETABLE_ENTRY& stru_4FEB50;
extern _SCOPETABLE_ENTRY& stru_4FEB60;
extern _SCOPETABLE_ENTRY& stru_4FEB70;
extern CHAR(&aInitializecrit)[];
extern _SCOPETABLE_ENTRY& stru_4FEBA8;
extern _SCOPETABLE_ENTRY& stru_4FEBB8;
extern wchar_t(&aHH)[32];
extern _SCOPETABLE_ENTRY& stru_4FED48;
extern _SCOPETABLE_ENTRY& stru_4FED58;
extern _SCOPETABLE_ENTRY& stru_4FED68;
extern char(&aProgram)[];
extern char(&aABufferOverrun)[160];
extern char(&aBufferOverrunD)[25];
extern char(&aASecurityError)[177];
extern char(&aUnknownSecurit)[];
extern _SCOPETABLE_ENTRY& stru_4FEF18;
extern wchar_t(&asc_4FF028)[33];
extern const WCHAR& SrcStr;
extern _SCOPETABLE_ENTRY(&stru_4FF430)[3];
extern _SCOPETABLE_ENTRY& stru_4FF458;
extern char(&aHhMmSs)[9];
extern char(&aDdddMmmmDdYyyy)[20];
extern char(&aMmDdYy)[9];
extern char(&aPm)[3];
extern char(&aAm)[3];
extern char(&aDecember)[9];
extern char(&aNovember)[9];
extern char(&aOctober)[8];
extern char(&aSeptember)[10];
extern char(&aAugust)[7];
extern char(&aJuly)[5];
extern char(&aJune)[5];
extern char(&aApril)[6];
extern char(&aMarch)[6];
extern char(&aFebruary)[9];
extern char(&aJanuary)[8];
extern void *& off_4FF500;
extern char(&aNov)[4];
extern char(&aOct)[4];
extern char(&aSep)[4];
extern char(&aAug)[4];
extern char(&aJul)[4];
extern char(&aJun)[4];
extern char(&aMay)[4];
extern char(&aApr)[4];
extern char(&aMar)[4];
extern char(&aFeb)[4];
extern char(&aJan)[4];
extern char(&aSaturday)[9];
extern char(&aFriday)[7];
extern char(&aThursday)[9];
extern char(&aWednesday)[10];
extern char(&aTuesday)[8];
extern char(&aMonday)[7];
extern char(&aSunday)[7];
extern char(&aSat)[4];
extern char(&aFri)[4];
extern char(&aThu)[4];
extern char(&aWed)[4];
extern char(&aTue)[4];
extern char(&aMon)[4];
extern char(&aSun)[4];
extern _SCOPETABLE_ENTRY& stru_4FF590;
extern char& byte_4FF59C;
extern char(&aUnmontuewedthu)[21];
extern char& byte_4FF5B4;
extern char(&aAnfebmaraprmay)[36];
extern char(&aTz)[3];
extern _SCOPETABLE_ENTRY& stru_4FF5E0;
extern _SCOPETABLE_ENTRY& stru_4FF5F0;
extern _SCOPETABLE_ENTRY& stru_4FF600;
extern _SCOPETABLE_ENTRY(&stru_4FF610)[2];
extern _SCOPETABLE_ENTRY& stru_4FF640;
extern _SCOPETABLE_ENTRY& stru_4FF650;
extern _SCOPETABLE_ENTRY& stru_4FF660;
extern _SCOPETABLE_ENTRY& stru_4FF670;
extern _SCOPETABLE_ENTRY& stru_4FF680;
extern _SCOPETABLE_ENTRY& stru_4FF690;
extern _SCOPETABLE_ENTRY& stru_4FF6A0;
extern _SCOPETABLE_ENTRY(&stru_4FF6B0)[2];
extern char(&byte_4FF6C8)[92];
extern wchar_t(&aNull_0)[7];
extern char(&aNull)[7];
extern _SCOPETABLE_ENTRY(&stru_4FF740)[3];
extern _SCOPETABLE_ENTRY& stru_4FF768;
extern _SCOPETABLE_ENTRY& stru_4FF778;
extern _SCOPETABLE_ENTRY(&stru_4FF788)[2];
extern _SCOPETABLE_ENTRY& stru_4FF7A0;
extern _SCOPETABLE_ENTRY& stru_4FF7B0;
extern _SCOPETABLE_ENTRY(&stru_4FF7C0)[2];
extern _SCOPETABLE_ENTRY& stru_4FF7D8;
extern _SCOPETABLE_ENTRY& stru_4FF7E8;
extern _SCOPETABLE_ENTRY& stru_4FF7F8;
extern _SCOPETABLE_ENTRY& stru_4FF808;
extern _SCOPETABLE_ENTRY& stru_4FF818;
extern _SCOPETABLE_ENTRY& stru_4FF828;
extern _SCOPETABLE_ENTRY& stru_4FF838;
extern CHAR(&aSetsecurityinf)[];
extern CHAR(&aAdvapi32_dll_0)[];
extern char(&aForcehighmem)[];
extern char(&aForcelowmem)[];
extern CHAR(&RootPathName)[];
extern char(&aCreatewindowex)[];
extern char(&aStarcraft_0)[];
extern CHAR(&WindowName)[];
extern char(&aRegisterclass)[];
extern CHAR(&aSwarclass)[];
extern CHAR(&aStarcraftCheck)[];
extern char(&aNew)[];
extern char(&aDelete)[];
extern int& dword_4FF8F8;
extern char(&aLastreplay_0)[11];
extern int(&dword_4FF90C)[7];
extern char(&aShow)[];
extern int (*&off_4FF934)();
extern char(&aHide)[5];
extern char(&aKills)[6];
extern char(&byte_4FF960)[];
extern __int16(&word_4FF964)[];
extern char(&aRazings)[8];
extern char(&aSlaughter)[10];
extern char(&aResources)[10];
extern char(&aMinerals)[9];
extern char(&aGas)[4];
extern char(&aScore)[6];
extern char(&aScoreUnits)[12];
extern char(&aScoreBuildings)[16];
extern char(&aScoreKills)[12];
extern char(&aScoreRazings)[14];
extern char(&aScoreUser)[11];
extern GlueRelated(&stru_4FFAD0)[27];
extern CampaignMenuEntry(&terran_campaign_menu_entries)[16];
extern CampaignMenuEntry(&zerg_campaign_menu_entries)[15];
extern CampaignMenuEntry(&protoss_campaign_menu_entries)[15];
extern CampaignMenuEntry(&terran_expcampaign_menu_entries)[11];
extern CampaignMenuEntry(&zerg_expcampaign_menu_entries)[18];
extern CampaignMenuEntry(&protoss_expcampaign_menu_entries)[10];
extern char(&aRezGlucmpgn_bi)[];
extern char(&filename)[];
extern const char(&aLastreplay_1)[];
extern char(&aLocal_dll)[10];
extern EstablishingShotPosition(&establishingShotPositions)[6];
extern PrintFlags(&establishingShot_PrintXY_flags)[6];
extern EstablishingShot(&establishing_shots)[65];
extern CHAR(&String2)[];
extern char(&aStareditScenar)[];
extern ChkSectionLoader(&chk_loaders_version)[2];
extern ChkSectionLoader(&chk_loaders_lobby)[9];
extern ChkSectionLoader(&chk_loaders_briefing)[2];
extern ChkSectionLoader(&chk_loaders_melee_vanilla)[4];
extern ChkSectionLoader(&chk_loaders_ums_1_00)[19];
extern ChkSectionLoader(&chk_loaders_ums_1_04)[19];
extern ChkSectionLoader(&chk_loaders_melee_broodwar)[5];
extern ChkSectionLoader(&chk_loaders_ums_broodwar_1_04)[15];
extern ChkLoader(&chk_loaders)[3];
extern ChkLoader& dword_5005D8;
extern size_t(&size)[120];
extern char(&byte_5007D8)[256];
extern char(&byte_5008D8)[4];
extern int(&dword_5008EC)[];
extern signed __int32(&volume)[100];
extern __int16(&word_500A94)[];
extern __int16(&word_500A96)[17];
extern __int16(&word_500AB8)[];
extern __int16(&word_500ABA)[31];
extern __int64& cheat_hash_there_is_no_cow_level;
extern __int64& cheat_hash_game_over_man;
extern __int64& cheat_hash_power_overwhelming;
extern __int64& cheat_hash_show_me_the_money;
extern __int64& cheat_hash_whats_mine_is_mine;
extern __int64& cheat_hash_breathe_deep;
extern __int64& cheat_hash_something_for_nothing;
extern __int64& cheat_hash_black_sheep_wall;
extern __int64& cheat_hash_operation_cwal;
extern __int64& cheat_hash_staying_alive;
extern __int64& cheat_hash_medieval_man;
extern __int64& cheat_hash_modify_the_phase_variance;
extern __int64& cheat_hash_war_aint_what_it_used_to_be;
extern __int64& cheat_hash_food_for_thought;
extern __int64& cheat_hash_the_gathering;
extern __int64& cheat_hash_radio_free_zerg;
extern __int64& cheat_hash_ophelia;
extern __int64& cheat_hash_no_glues;
extern __int16(&word_500B98)[];
extern char(&a_mpc)[];
extern char(&a_spc)[5];
extern CinematicIntro(&cinematic_intros)[10];
extern char(&aLastreplay)[11];
extern char(&aCputhrottle)[];
extern char(&aGamma)[];
extern char(&aColorcycle)[];
extern char(&aUnitportraits)[];
extern struc_500F60(&stru_500E40)[18];
extern struc_500F60(&stru_500F60)[18];
extern char(&aGlueBattle_n_9)[43];
extern char(&aGlueBattle_n_8)[];
extern char(&aGlueBattle__10)[];
extern __int16(&word_50110C)[];
extern char(&byte_50110E)[];
extern __int16(&word_50112C)[];
extern char(&keyname)[];
extern bool (__fastcall *(&GenericDlgInteractFxns)[14])(dialog *dlg, struct dlgEvent *evt);
extern void (__fastcall *(&GenericDlgUpdateFxns)[14])(dialog *dlg, int x, int y, rect *dst);
extern int(&dword_501544)[10];
extern CndSignature(&stru_50156C)[9];
extern char(&aReplay)[];
extern char(&aSMapsReplaysS_)[];
extern char(&a_)[];
extern CHAR(&String)[];
extern char(&a1)[];
extern char(&aStarcraftSw_50)[];
extern char(&aRep)[];
extern char(&a__1)[];
extern char(&aMapsReplays)[];
extern CHAR(&SubBlock)[];
extern char(&aGluePalpvTile_)[20];
extern char(&aGluePaltvTile_)[20];
extern char(&aGluePalzvTile_)[20];
extern char(&aGluePalpdTile_)[20];
extern char(&aGluePaltdTile_)[20];
extern char(&aGluePalzdTile_)[20];
extern char(&aRezGluall_tbl)[];
extern char(&aBackgnd_pcx)[];
extern char(&aDlg_grp)[];
extern char(&aTfont_pcx)[];
extern char(&aTeffect_pcx)[];
extern char(&aStarcraftSw_79)[];
extern char(&aArrow_grp)[];
extern char(&aGlueGeneric)[14];
extern char(&aGlueGamemode)[15];
extern char(&aGlueDirect)[13];
extern char(&aGlueModem)[12];
extern char(&aGlueScore)[12];
extern char(&aGlueLoad)[11];
extern char(&aGlueCreate)[13];
extern char(&aGlueGamesel)[14];
extern char(&aGlueReadyp)[13];
extern char(&aGlueReadyz)[13];
extern char(&aGlueReadyt)[13];
extern char(&aGlueCampaign)[15];
extern char(&aGlueLogin)[12];
extern char(&aGlueBattle_net_0)[17];
extern char(&aGlueChatroom)[15];
extern char(&aGlueSelconn)[14];
extern char(&aGlueSimulate)[14];
extern char(&aGlueMainmenu)[15];
extern char(&a_scm)[];
extern char(&aStarcraftSw_78)[];
extern char(&aRezGlumain_bin)[];
extern char(&aStarcraftSw_77)[];
extern char(&aStaredit_exe)[];
extern const char(&aDlgsProtoss_gr)[];
extern const char(&aDlgsTerran_grp)[];
extern const char(&aDlgsZerg_grp)[];
extern char(&aStarcraftSw_91)[];
extern const char(&aArrMapdata_tbl)[];
extern char(&aArrMapdata_dat)[];
extern const char(&aRezCdversion_t)[];
extern const char(&data_file_version)[];
extern char(&aInvalidDataFil)[];
extern char(&asc_501A28)[3];
extern char(&asc_501A2C)[2];
extern char(&aDdemulate)[];
extern char(&aNosound)[];
extern char(&asc_501A44)[];
extern char(&aBroodat_mpq)[];
extern char(&aPatch_rt_mpq)[];
extern char(&aStardat_mpq_0)[];
extern char(&aStardat_mpq)[];
extern const char(&aInstall_exe)[];
extern const char(&aStarcraft_mpq)[];
extern const char(&hMpq)[];
extern char(&aStarcd)[];
extern char(&aVersionD_D_D)[];
extern const char(&aFont8)[];
extern const char(&aFont10)[];
extern const char(&aFont14)[];
extern const char(&aFont16)[];
extern const char(&font_name)[];
extern char(&aStarcraftSw_75)[];
extern const char(&aFindFastIndexe)[];
extern const char(&aMomParent)[];
extern const char(&aMicrosoftFindF)[];
extern const char(&aMicrosoftOffic)[];
extern char(&asc_501B74)[];
extern CHAR(&Operation)[];
extern const char(&empty_string)[3];
extern char(&aRezEpilogx_txt)[];
extern char(&aSS_ccd)[];
extern const char(&asc_501B9C)[];
extern char(&aSS_clh)[];
extern char(&aSS_gid)[];
extern char(&aFont)[5];
extern char(&aStarcraftSw_74)[];
extern const char(&aStarcraftSw_73)[];
extern const char(&aCrdt_exp)[];
extern const char(&aCrdt_lst)[];
extern const char(&aEpilog)[];
extern char(&aEpilogx)[8];
extern char(&aRezCredits_bin)[];
extern char(&aRezS_txt)[];
extern char(&aDisplaytime)[];
extern char(&aFadespeed)[];
extern char(&aFontcolor)[];
extern char(&aPage)[];
extern char(&aBackground)[];
extern char(&aStarcraftSw_72)[];
extern char(&aFinz09bx)[9];
extern char(&aEstz10x)[8];
extern char(&aEstz09bx)[9];
extern char(&aEstz09x)[8];
extern char(&aEstz08x)[8];
extern char(&aEstz07x)[8];
extern char(&aEstz06x)[8];
extern char(&aEstz05x)[8];
extern char(&aEstz04x)[8];
extern char(&aEstz03x)[8];
extern char(&aEstz02x)[8];
extern char(&aEstz01x)[8];
extern char(&aEstt08x)[8];
extern char(&aEstt07x)[8];
extern char(&aEstt06x)[8];
extern char(&aEstt05bx)[9];
extern char(&aEstt05ax)[9];
extern char(&aEstt04x)[8];
extern char(&aEstt03x)[8];
extern char(&aEstt02x)[8];
extern char(&aEstt01x)[8];
extern char(&aEstp08x)[8];
extern char(&aEstp07x)[8];
extern char(&aEstp06x)[8];
extern char(&aEstp05x)[8];
extern char(&aEstp04x)[8];
extern char(&aEstp03x)[8];
extern char(&aEstp02x)[8];
extern char(&aEstp01x)[8];
extern char(&aEstp10)[7];
extern char(&aEstp09)[7];
extern char(&aEstp08)[7];
extern char(&aEstp07)[7];
extern char(&aEstp06)[7];
extern char(&aEstp05)[7];
extern char(&aEstp04)[7];
extern char(&aEstp03)[7];
extern char(&aEstp02)[7];
extern char(&aEstp01)[7];
extern char(&aEstz10)[7];
extern char(&aEstz09)[7];
extern char(&aEstz08)[7];
extern char(&aEstz07)[7];
extern char(&aEstz06)[7];
extern char(&aEstz05)[7];
extern char(&aEstz04)[7];
extern char(&aEstz03)[7];
extern char(&aEstz02)[7];
extern char(&aEstz01)[7];
extern char(&aEstt12)[7];
extern char(&aEstt11)[7];
extern char(&aEstt09)[7];
extern char(&aEstt08)[7];
extern char(&aEstt06)[7];
extern char(&aEstt05)[7];
extern char(&aEstt04)[7];
extern char(&aEstt03)[7];
extern char(&aEstt02)[7];
extern char(&aEstt01)[7];
extern char(&aEstt0t)[7];
extern char(&aScreenlowerlef)[19];
extern char(&aScreencenter)[16];
extern char(&aScreenbottom)[16];
extern char(&aScreentop)[13];
extern char(&aScreenright)[15];
extern char(&aScreenleft)[14];
extern char(&aScriptDDoesNot)[];
extern char(&aGameTselect_pc)[];
extern char(&aArrImages_dat)[];
extern char(&aScriptsIscript)[];
extern char(&aTilesetSShift_)[];
extern char(&aArrImages_tbl)[];
extern char(&aStarcraftSw_71)[];
extern char(&aRezTitledlg_bi)[];
extern char(&aGlueTitleTfont)[];
extern char(&fileName)[];
extern char(&aStarcraftSw_70)[];
extern char(&aSmkXzerg_smk)[14];
extern char(&aSmkXterran_smk)[16];
extern char(&aSmkXprotoss_sm)[17];
extern char(&aSmkStarxintr_s)[18];
extern char(&aSmkProtoss4_sm)[17];
extern char(&aSmkProtoss3_sm)[17];
extern char(&aSmkProtoss2_sm)[17];
extern char(&aSmkProtoss1_sm)[17];
extern char(&aSmkPreprotoss_)[21];
extern char(&aSmkPreprotos_0)[21];
extern char(&aSmkPreprotos_1)[21];
extern char(&aSmkZerg4_smk)[14];
extern char(&aSmkZerg3_smk)[14];
extern char(&aSmkZerg2_smk)[14];
extern char(&aSmkZerg1_smk)[14];
extern char(&aSmkPrezerg_4_s)[18];
extern char(&aSmkPrezerg_3_s)[18];
extern char(&aSmkPrezerg_2_s)[18];
extern char(&aSmkTerran4_smk)[16];
extern char(&aSmkTerran3_smk)[16];
extern char(&aSmkTerran2_smk)[16];
extern char(&aSmkTerran1_smk)[16];
extern char(&aSmkPreterran_4)[20];
extern char(&aSmkPreterran_3)[20];
extern char(&aSmkPreterran_2)[20];
extern char(&aSmkPreterran_1)[20];
extern char(&aSmkStarintr_sm)[17];
extern char(&aSmkBlizzard_sm)[17];
extern const char(&aStarcraftSw_69)[];
extern CHAR(&aBattle_netLeag)[];
extern char(&aS_0)[];
extern char(&aLowm)[];
extern char(&aStarcraftSw_20)[];
extern char(&aUnknown)[];
extern CHAR(&ClassName)[];
extern char(&aScscrnshot_02d)[];
extern char(&aCursor)[];
extern char(&aScrollul_grp)[13];
extern char(&aScrolll_grp)[12];
extern char(&aScrolldl_grp)[13];
extern char(&aScrolld_grp)[12];
extern char(&aScrolldr_grp)[13];
extern char(&aScrollr_grp)[12];
extern char(&aScrollur_grp)[13];
extern char(&aScrollu_grp)[12];
extern char(&aTime_grp)[9];
extern char(&aDrag_grp)[9];
extern char(&aMagy_grp)[9];
extern char(&aMagr_grp)[9];
extern char(&aMagg_grp)[9];
extern char(&aTargn_grp)[10];
extern char(&aTargg_grp)[10];
extern char(&aTargr_grp)[10];
extern char(&aTargy_grp)[10];
extern char(&aIllegal_grp)[12];
extern char(&aArrow_grp_0)[10];
extern char(&aCodeBytes)[];
extern char(&aStackBytes)[];
extern char(&aFlags08x)[];
extern char(&aDs04xEs04xFs04)[];
extern char(&aSsEsp04x08xEbp)[];
extern char(&aCsEip04x08x)[];
extern char(&aEax08xEbx08xEc)[];
extern char(&aRegisters)[];
extern char(&aFaultAddress08)[];
extern char(&aExceptionCode0)[];
extern CHAR(&aNtdll_dll)[];
extern CHAR(&aInvalid_handle)[];
extern CHAR(&aGuard_page)[];
extern CHAR(&aInvalid_dispos)[];
extern CHAR(&aStack_overflow)[];
extern CHAR(&aNoncontinuable)[];
extern CHAR(&aIllegal_instru)[];
extern CHAR(&aIn_page_error)[];
extern CHAR(&aPriv_instructi)[];
extern CHAR(&aInt_overflow)[];
extern CHAR(&aInt_divide_by_)[];
extern CHAR(&aFlt_underflow)[];
extern CHAR(&aFlt_stack_chec)[];
extern CHAR(&aFlt_overflow)[];
extern CHAR(&aFlt_invalid_op)[];
extern CHAR(&aFlt_inexact_re)[];
extern CHAR(&aFlt_divide_by_)[];
extern CHAR(&aFlt_denormal_o)[];
extern CHAR(&aArray_bounds_e)[];
extern CHAR(&aSingle_step)[];
extern CHAR(&aBreakpoint)[];
extern CHAR(&aDatatype_misal)[];
extern CHAR(&aAccess_violati)[];
extern char(&a08x08x04x08xS)[];
extern char(&aCallStackAddre)[];
extern char(&asc_5026DC)[];
extern char(&aC)[];
extern char(&word_5026E4)[];
extern char(&a02x)[];
extern char(&a0x08x)[];
extern char(&aStarcraftSw_62)[];
extern char(&asc_502724)[];
extern char(&asc_502728)[];
extern char(&aScmPath)[];
extern char(&aScmTitle)[];
extern char(&aGameType_0)[];
extern char(&aCustom)[7];
extern char(&asc_502768)[];
extern char(&aPlayers)[14];
extern char(&aFilename)[];
extern char(&aSinglePlayerSa)[];
extern char(&aMultiPlayerSav)[41];
extern char(&asc_5027F0)[];
extern char(&asc_5027F4)[];
extern char(&a_mlx)[6];
extern char(&a_snx)[6];
extern char(&a_mlt)[6];
extern char(&a_sng)[6];
extern char(&aSave)[];
extern char(&aMaps)[];
extern char(&a__0)[];
extern char(&byte_502860)[12];
extern char(&aStarcraftSw_67)[];
extern char(&aRezNetwork_tbl)[];
extern char(&asc_5028A0)[];
extern char(&aSS_1)[];
extern char(&aLeague_D_cnd)[];
extern char(&aArrPortdata_da)[];
extern char(&aArrTechdata_da)[];
extern char(&aArrWeapons_dat)[];
extern char(&aArrUpgrades_da)[];
extern CHAR(&Type)[];
extern char(&aStarcraftSw_66)[];
extern char(&aRezRestart_bin)[];
extern char(&aRezQuit2mnu_bi)[];
extern char(&aRezQuitrepl_bi)[];
extern char(&aRezQuit_bin)[];
extern char(&aRezAbrtmenu_bi)[];
extern char(&aRezOptions_bin)[];
extern char(&aRezHelpmenu_bi)[];
extern char(&aRezGamemenu_bi)[];
extern char(&aRezObjctdlg_bi)[];
extern const char(&aDlgsTile_grp)[];
extern char(&aStarcraftSw_32)[];
extern char(&aMapsDownload)[];
extern char(&aStarcraftSw_65)[];
extern char(&aRezStat_txt_tb)[];
extern char(&aGameCS)[];
extern char(&aConsole_pcx)[12];
extern char(&aStarcraftSw_64)[];
extern char(&aRezWait_bin)[];
extern char(&asc_502AB8)[];
extern char(&aRezOk_bin)[];
extern char(&asc_502AD8)[];
extern char(&aStarcraftSw_63)[];
extern char(&aRezStatlb_bin)[];
extern char(&aStarcraftSw_61)[];
extern char(&aD)[];
extern char(&aStarcraftSw_68)[];
extern char(&aTilesetSS_pcx)[];
extern char(&aTilesetSDark_p)[];
extern char(&aStarcraftSw_60)[];
extern char(&a_vr4)[5];
extern char(&a_vx4)[5];
extern char(&a_grp)[5];
extern char(&a_cv5)[5];
extern char(&a_vf4)[5];
extern char(&aSSS_0)[];
extern char(&aTileset)[9];
extern char(&a_wpe)[5];
extern char(&aStarcraftSw_57)[];
extern char(&aTwilight)[9];
extern char(&aIce)[4];
extern char(&aDesert)[7];
extern char(&aJungle)[7];
extern char(&aAshworld)[9];
extern char(&aInstall)[8];
extern char(&aPlatform)[9];
extern const char(&aBadlands)[10];
extern const char(&aArrSfxdata_tbl)[];
extern char(&aArrSfxdata_dat)[];
extern char(&aSoundMemoryCac)[];
extern char(&aCreatesoundbuf)[18];
extern char(&aSetcooperative)[];
extern char(&aGetprocaddress)[];
extern CHAR(&aDirectsoundcre)[];
extern char(&function_name)[];
extern CHAR(&aDsound_dll)[];
extern char(&aSoundS)[];
extern char(&aStarcraftSw_56)[];
extern char(&aSFileSD)[];
extern char(&aStarcraftSw_55)[];
extern char(&aRezGluconn_bin)[];
extern char(&aStarcraftSw_53)[];
extern char(&aRezGlulogin_bi)[];
extern char(&aStarcraftSw_88)[];
extern char(&aGameTfontgam_p)[];
extern char(&aRezGluchat_bin)[];
extern char(&aDS)[];
extern char(&new_)[];
extern char& byte_502DF2;
extern char(&word_502DF4)[];
extern char(&aStarcraftSw_52)[];
extern char(&aRezGlurdyp_bin)[];
extern char(&asc_502E28)[];
extern char(&aGlueReadypPf_6)[25];
extern char(&aGlueReadypPf_5)[25];
extern char(&aGlueReadypPf_4)[25];
extern char(&aGlueReadypPf_3)[25];
extern char(&aGlueReadypPf_2)[24];
extern char(&aGlueReadypPf_1)[24];
extern char(&aGlueReadypPf_0)[24];
extern char(&aGlueReadypPfra)[24];
extern char(&aRezGlujoin_bin)[];
extern char(&aStarcraftSw_51)[];
extern char(&aUxU)[];
extern char(&aSCUU)[];
extern char(&aRezGluhist_bin)[];
extern char(&aGlueCampaignPh)[];
extern char(&aRezGluhist_tbl)[];
extern char(&aRezGlupoksplit)[];
extern char(&aRezGlupedit_bi)[];
extern int& dword_502FBC;
extern int& dword_502FC0;
extern int& dword_502FC4;
extern char& byte_502FC8;
extern char(&aRezGlupok_bin)[];
extern int& dword_502FDC;
extern int& dword_502FE0;
extern int& dword_502FE4;
extern char& byte_502FE8;
extern char(&aRezGlupokcance)[];
extern int& dword_503004;
extern int& dword_503008;
extern int& dword_50300C;
extern char& byte_503010;
extern char(&aRezGlugamemode)[];
extern char(&source_filename)[];
extern int& dword_50304C;
extern int& dword_503050;
extern int& dword_503054;
extern __int16& word_503058;
extern char& byte_50305A;
extern const char(&aRezGluload_bin)[];
extern char(&aRezGlurdyt_bin)[];
extern char(&asc_50307C)[];
extern char(&aGlueReadytTf_6)[25];
extern char(&aGlueReadytTf_5)[25];
extern char(&aGlueReadytTf_4)[25];
extern char(&aGlueReadytTf_3)[25];
extern char(&aGlueReadytTf_2)[24];
extern char(&aGlueReadytTf_1)[24];
extern char(&aGlueReadytTf_0)[24];
extern char(&aGlueReadytTfra)[24];
extern char(&aRezGlurdyz_bin)[];
extern char(&asc_50317C)[];
extern char(&aGlueReadyzZf_6)[25];
extern char(&aGlueReadyzZf_5)[25];
extern char(&aGlueReadyzZf_4)[25];
extern char(&aGlueReadyzZf_3)[25];
extern char(&aGlueReadyzZf_2)[24];
extern char(&aGlueReadyzZf_1)[24];
extern char(&aGlueReadyzZf_0)[24];
extern char(&aGlueReadyzZfra)[24];
extern CHAR(&Name)[];
extern int& dword_503278;
extern int& dword_50327C;
extern __int16& word_503280;
extern char& byte_503282;
extern CHAR(&aGlueokcancel_b)[];
extern int& dword_503298;
extern int& dword_50329C;
extern int& dword_5032A0;
extern int& dword_5032A4;
extern char& byte_5032A8;
extern char(&aStarcraftSw_48)[];
extern const char(&aRezGluexpcmp_0)[];
extern char(&aRezGluscore_bi)[];
extern int& dword_5032F8;
extern int& dword_5032FC;
extern int& dword_503300;
extern char& byte_503304;
extern int& dword_503308;
extern int& dword_50330C;
extern __int16& word_503310;
extern char& byte_503312;
extern char(&aMapSMap)[];
extern char(&asc_503324)[];
extern char(&aResourcesScore)[59];
extern char(&aStructuresScor)[64];
extern char(&aUnitsScoreUPro)[57];
extern char(&aScoreOverallUU)[65];
extern char(&aLeagueidDLeagu)[];
extern char(&aUS_0)[];
extern char(&aUS)[];
extern int& dword_503494;
extern int& dword_503498;
extern __int16& word_50349C;
extern char(&a02d02d)[];
extern char(&aD02d02d)[];
extern char(&aU)[];
extern int& dword_5034C0;
extern int& dword_5034C4;
extern __int16& word_5034C8;
extern int& dword_5034CC;
extern int& dword_5034D0;
extern __int16& word_5034D4;
extern char& byte_5034D6;
extern char(&aStarcraftSw_47)[];
extern int& dword_5034FC;
extern int& dword_503500;
extern int& dword_503504;
extern char& byte_503508;
extern char(&aGlueScorepv)[14];
extern char(&aGlueScorepd)[14];
extern char(&aGlueScoretv)[14];
extern char(&aGlueScoretd)[14];
extern char(&aGlueScorezv)[14];
extern char(&aGlueScorezd)[14];
extern const char(&aRezGlucmpgn__0)[];
extern MissionCheatRelated(&stru_503580)[6];
extern char(&aXprotoss)[9];
extern char(&aXzerg)[6];
extern char(&aXterran)[8];
extern char(&aProtoss)[8];
extern char(&aZerg)[5];
extern char(&aTerran)[7];
extern char(&aSS_4)[];
extern char(&aRezGlumodem_bi)[];
extern char(&aRezGluatzoneli)[];
extern char(&aRezGlumodemlis)[];
extern char(&aPselect_pcx)[];
extern char(&aRezGlumodemsta)[];
extern char(&aPstatus_pcx)[];
extern char(&asc_503690)[];
extern char(&aSoftwareBlizza)[];
extern char(&aSCS)[];
extern char(&aRezGlumodement)[];
extern char(&aStarcraftSw_46)[];
extern char(&aPentry_pcx)[];
extern char(&aGlueCreateIcre)[];
extern char(&aStarcraftSw_80)[];
extern char(&aRezGlucreat_bi)[17];
extern const char(&aRezGlucustm_bi)[];
extern char(&aCustomType)[12];
extern char(&aGameType)[];
extern char(&valuename)[];
extern char(&aGameSpeed)[];
extern int& dword_5037A0;
extern int& dword_5037A4;
extern __int16& word_5037A8;
extern char(&byte_5037AC)[];
extern char(&aApsReplays)[12];
extern char(&aMaps_0)[5];
extern CHAR(&aAbcdefghijklmn)[];
extern const char(&aRezGlubnres_re)[];
extern char(&aStarcraftSw_13)[];
extern CHAR(&CursorName)[];
extern char(&aGenericIcon_19)[30];
extern char(&aGenericIcon_18)[31];
extern char(&aGenericIcon_17)[26];
extern char(&aGenericIcon_16)[27];
extern char(&aGenericIcon_15)[25];
extern char(&aGenericIcon_14)[26];
extern char(&aGenericIcon_13)[26];
extern char(&aGenericIconsSl)[25];
extern char(&aGenericIcon_11)[23];
extern char(&aGenericIcon_10)[23];
extern char(&aGenericIcons_9)[23];
extern char(&aGenericIcons_8)[23];
extern char(&aGenericIcons_7)[23];
extern char(&aGenericIcons_6)[23];
extern char(&aGenericIcons_5)[23];
extern char(&aGenericIcons_4)[23];
extern char(&aGenericIconsCm)[23];
extern int& dword_5039FC;
extern int& dword_503A00;
extern int& dword_503A04;
extern __int16& word_503A08;
extern int& dword_503A0C;
extern int& dword_503A10;
extern int& dword_503A14;
extern int& dword_503A18;
extern int& dword_503A1C;
extern int& dword_503A20;
extern int& dword_503A24;
extern int& dword_503A28;
extern char& byte_503A2C;
extern char(&aGenericPopupsS)[26];
extern char(&aGenericIcons_3)[27];
extern char(&aGenericIconsPr)[26];
extern char(&aGenericPopupsL)[26];
extern char(&aBackgroundsReg)[30];
extern int& dword_503AC0;
extern int& dword_503AC4;
extern int& dword_503AC8;
extern int& dword_503ACC;
extern int& dword_503AD0;
extern char(&aGenericPopup_0)[27];
extern int& dword_503AF0;
extern int& dword_503AF4;
extern int& dword_503AF8;
extern int& dword_503AFC;
extern __int16& word_503B00;
extern char& byte_503B02;
extern char(&aIconsDisconnec)[23];
extern char(&aGenericIcons_2)[26];
extern char(&aGenericIcons_1)[26];
extern char(&aGenericIcons_0)[26];
extern char(&aGenericIconsBu)[26];
extern char(&aGenericIcon_12)[29];
extern int& dword_503BAC;
extern int& dword_503BB0;
extern int& dword_503BB4;
extern int& dword_503BB8;
extern __int16& word_503BBC;
extern char& byte_503BBE;
extern int& dword_503BC0;
extern int& dword_503BC4;
extern int& dword_503BC8;
extern int& dword_503BCC;
extern __int16& word_503BD0;
extern char& byte_503BD2;
extern int& dword_503BD4;
extern int& dword_503BD8;
extern int& dword_503BDC;
extern int& dword_503BE0;
extern char& byte_503BE4;
extern char(&aBackgroundsBnl)[25];
extern char(&aBackgroundsBns)[25];
extern int& dword_503C20;
extern int& dword_503C24;
extern int& dword_503C28;
extern int& dword_503C2C;
extern __int16& word_503C30;
extern char& byte_503C32;
extern char(&aBackgroundsCha)[25];
extern char(&aBackgroundsBnc)[26];
extern char(&aBackgroundsC_0)[31];
extern char(&aBackgroundsNew)[27];
extern int& dword_503CA8;
extern int& dword_503CAC;
extern int& dword_503CB0;
extern int& dword_503CB4;
extern int& dword_503CB8;
extern int& dword_503CBC;
extern char(&aGenericPopupsH)[26];
extern char(&aBackgroundsBnj)[25];
extern char(&aBackgroundsBn_)[23];
extern char(&aTriggersCtf_tr)[17];
extern const char(&aTriggersSlau_2)[];
extern const char(&aTriggersSlau_1)[];
extern const char(&aTriggersSlau_0)[];
extern const char(&aTriggersSlaugh)[];
extern const char(&aTriggersGreed1)[];
extern const char(&aTriggersGreed7)[];
extern const char(&aTriggersGreed5)[];
extern const char(&aTriggersGreed2)[];
extern const char(&aTriggersSudden)[];
extern const char(&aTriggersMelee_)[];
extern char(&template_name)[];
extern char(&aUnableToReadGa)[];
extern char(&aSS_0)[];
extern char(&aTemplates_lst)[14];
extern char(&aStarcraftSw_45)[];
extern char(&aTemplates)[11];
extern char(&a_got)[5];
extern char(&aCharacters)[];
extern char(&aStarcraftSw_17)[];
extern char(&aRecentMaps)[];
extern char(&asc_503EE0)[];
extern char(&asc_503EE4)[];
extern char(&asc_503EE8)[];
extern char(&a__)[];
extern char(&aScx)[];
extern char(&aScm)[];
extern char(&aMusicRadiofree)[24];
extern char(&aMusicTitle_wav)[16];
extern char(&aMusicPvict_wav)[16];
extern char(&aMusicTvict_wav)[16];
extern char(&aMusicZvict_wav)[16];
extern char(&aMusicPdefeat_w)[18];
extern char(&aMusicTdefeat_w)[18];
extern char(&aMusicZdefeat_w)[18];
extern char(&aMusicPrdyroom_)[19];
extern char(&aMusicTrdyroom_)[19];
extern char(&aMusicZrdyroom_)[19];
extern char(&aMusicProtoss3_)[19];
extern char(&aMusicProtoss2_)[19];
extern char(&aMusicProtoss1_)[19];
extern char(&aMusicTerran3_w)[18];
extern char(&aMusicTerran2_w)[18];
extern char(&aMusicTerran1_w)[18];
extern char(&aMusicZerg3_wav)[16];
extern char(&aMusicZerg2_wav)[16];
extern char(&aMusicZerg1_wav)[16];
extern char(&aRezMinimap_bin)[];
extern char(&aGameTblink_pcx)[];
extern char(&grp_path)[];
extern char(&aRezMinimapprev)[];
extern char(&aStarcraftSw_44)[];
extern char(&aRezTimeout_bin)[];
extern char(&aD02d)[];
extern char(&aStarcraftSw_43)[];
extern char(&aArrUnits_dat)[];
extern char(&aArrOrders_dat)[];
extern char(&aGameTminimap_p)[];
extern char(&aGameTunit_pcx)[];
extern char(&aSSSS_S_S)[];
extern char(&aProfile_pcx)[];
extern char(&aStarcraftSw_42)[];
extern char(&aSSS_mpq)[];
extern char(&aLeagues)[9];
extern char(&aGameresultSGam)[];
extern char(&aS)[];
extern char(&aNonplayer)[12];
extern void *& off_504204;
extern char(&string)[];
extern char(&aStarcraftSw_41)[];
extern char(&aArrSprites_dat)[];
extern char(&aStarcraftSw_40)[];
extern char(&aArrFlingy_dat)[];
extern char(&aStarcraftSw_39)[];
extern char(&aRezMsgfltr_bin)[];
extern char(&aRezAllyfltr_bi)[];
extern char(&aRezTeamfltr_bi)[17];
extern char(&aStarcraftSw_38)[];
extern char(&aSCS_0)[];
extern char(&aSSCS)[];
extern char(&aSS_3)[];
extern char(&aStarcraftSw_37)[];
extern char(&aCbulletDamage)[];
extern char(&aStarcraftSw_36)[];
extern char(&aStarcraftSw_35)[];
extern int (__fastcall *(&funcs_485FB0)[3])(DWORD a1, int a2, DWORD a3);
extern const char(&aStarcraftSw_34)[];
extern char(&aStarcraftSw_98)[];
extern const char(&file_name)[];
extern const CHAR(&aTheMapCouldNot)[];
extern char(&aStarcraftSw_29)[];
extern char(&aRezSpd_dlg_bin)[];
extern char(&aStarcraftSw_82)[];
extern char(&aRezVideo_bin)[];
extern int (__fastcall *&off_504524)(int, int, SightStruct *, MegatileFlags *, unsigned int, unsigned int);
extern int (__fastcall *&off_504528)(int, int, SightStruct *, MegatileFlags *, unsigned int, unsigned int);
extern char(&aStarcraftSw_59)[];
extern char(&aWSS)[];
extern char(&aR)[3];
extern char(&aReply)[7];
extern char(&aM)[3];
extern char(&aW)[3];
extern char(&aMsg)[5];
extern char(&aWhisper)[9];
extern char(&aUnignore)[10];
extern char(&aUnsquelch)[11];
extern char(&aIgnore)[8];
extern char(&aSquelch)[9];
extern char(&aStats)[];
extern char(&aLeague)[];
extern char(&aParallaxStar_s)[];
extern char(&aStarcraftSw_89)[];
extern char(&aRezTips_dlg_bi)[];
extern char(&aRezTips_tbl)[];
extern char(&asc_50461C)[];
extern char(&aStarcraftSw_31)[];
extern char(&aUnitS)[];
extern char(&aGameThpbar_pcx)[];
extern char(&asc_504674)[4];
extern char(&asc_504678)[];
extern char(&aStarcraftSw_22)[];
extern char(&aStarcraftSw_87)[];
extern char(&aAstatS)[];
extern char(&aStarcraftSw_30)[];
extern char(&aLpt9)[5];
extern char(&aLpt8)[5];
extern char(&aLpt7)[5];
extern char(&aLpt6)[5];
extern char(&aLpt5)[5];
extern char(&aLpt4)[5];
extern char(&aLpt3)[5];
extern char(&aLpt2)[5];
extern char(&aLpt1)[5];
extern char(&aCom9)[5];
extern char(&aCom8)[5];
extern char(&aCom7)[5];
extern char(&aCom6)[5];
extern char(&aCom5)[5];
extern char(&aCom4)[5];
extern char(&aCom3)[5];
extern char(&aCom2)[5];
extern char(&aCom1)[5];
extern char(&aClock)[7];
extern char(&aConout)[8];
extern char(&aConin)[7];
extern char(&aAux)[4];
extern char(&aPrn)[4];
extern char(&aCon)[4];
extern void *& off_5047A8;
extern char(&aStarcraftSw_86)[];
extern char(&asc_5047D0)[];
extern char(&aChklarvastray1)[];
extern char(&aChklarvastray2)[];
extern char(&aRezLoadgame_bi)[];
extern char(&aRezNetdlg_bin)[];
extern char(&aRezHelp_bin)[];
extern char(&aRezHelp_txt_tb)[];
extern char(&asc_504860)[];
extern char(&aRezLmission_bi)[];
extern char(&aRezWmission_bi)[];
extern char(&aRezSnd_dlg_bin)[];
extern char(&aRezStatport_bi)[];
extern char(&aArrPortdata)[];
extern char(&aGame)[6];
extern char(&aConover_pcx)[12];
extern char(&aStarcraftSw_28)[];
extern FnInteract& off_504918;
extern char(&aSSD_smk)[];
extern char(&aPortrait)[10];
extern char(&szFileName)[];
extern char(&aScriptsAiscrip)[];
extern char(&aStarcraftSw_94)[];
extern char(&aIllegalAiScrip)[];
extern char(&aStarcraftSw_27)[];
extern char(&aStarcraftSw_95)[];
extern char(&aRezCtextbox_bi)[];
extern char(&aRezStatbtnC_bi)[];
extern char(&aUnitCmdbtnsTic)[];
extern char(&aUnitCmdbtnsCmd)[];
extern char(&aSCcmdbtns_grp)[];
extern char(&aUnitCmdbtns)[14];
extern char(&aPbrfull_pcx)[12];
extern char(&aStarcraftSw_26)[];
extern char(&aPbrempt_pcx)[12];
extern char(&aSSD)[];
extern char(&aRezStatdata_bi)[];
extern char(&aUnitWireframGr)[];
extern char(&aUnitWireframTr)[];
extern FnInteract(&off_504AF0)[44];
extern char(&aSS_2)[];
extern char(&aSSDD)[];
extern char(&aSSDS)[12];
extern char(&aSSDDS)[];
extern char(&logfile)[];
extern char(&aGameTwire_pcx)[];
extern char(&aUnitWireframWi)[];
extern char(&aStarcraftSw_92)[];
extern char(&aRezStat_f10_bi)[];
extern char(&aStarcraftSw_97)[];
extern FnInteract& off_504C7C;
extern char(&aRezStatfluf_bi)[];
extern char(&aStarcraftSw_96)[];
extern char(&aRezStatres_bin)[];
extern char(&aGameIcons_grp)[];
extern char(&aStarcraftSw_85)[];
extern FnInteract(&off_504CF8)[6];
extern const char(&SupplyInfoFormat)[9];
extern char(&aStarcraftSw_58)[];
extern char(&aRezDlgfatal_bi)[];
extern char(&aStarcraftSw_84)[];
extern char(&aRezGateways_tx)[];
extern char(&aStarcraftSw_24)[];
extern char(&aOverrideBattle)[];
extern char(&aConfiguration)[];
extern const char(&aBattle_netGate)[];
extern const char(&aStarcraftSw_23)[32];
extern __int16& word_504E0C;
extern char& byte_504E0E;
extern char(&aGlueChatroomIc)[];
extern char(&string2)[];
extern char(&aStatsS)[];
extern char(&a3u)[];
extern char(&aStarcraftSw_21)[];
extern char(&aStarcraftSw_19)[];
extern char(&aDialog_static_)[22];
extern char(&aDialog_profile)[15];
extern int(&dword_504EAC)[6];
extern int(&dword_504EC4)[6];
extern CHAR(&FileName)[];
extern char(&aWb)[];
extern unsigned __int8& asc_504EEC;
extern unsigned __int8& aHttp;
extern char(&aTimeNewRoman)[15];
extern char(&aStarcraftSw_18)[];
extern char(&aGlueBattle_n_3)[];
extern char(&aPopup)[6];
extern char(&aGlueBattle_n_7)[46];
extern char(&aGlueBattle_n_6)[42];
extern char(&aAt)[];
extern CHAR(&Format)[];
extern char(&a0)[];
extern char(&aArial)[6];
extern char(&aRecordSexp1Las)[31];
extern char(&aRecordSexp1L_0)[24];
extern char(&aRecordSexp1Hig)[24];
extern char(&aDynkeySexp1Ran)[19];
extern char(&aRecordSexp1H_0)[26];
extern char(&aRecordSexp1Rat)[21];
extern char(&aRecordSexp1Dis)[26];
extern char(&aRecordSexp1Los)[21];
extern char(&aRecordSexp1Win)[19];
extern char(&aRecordSexp0Las)[31];
extern char(&aRecordSexp0L_0)[24];
extern char(&aRecordSexp0Dis)[26];
extern char(&aRecordSexp0Los)[21];
extern char(&aRecordSexp0Win)[19];
extern char(&aRecordStar1Las)[31];
extern char(&aRecordStar1L_0)[24];
extern char(&aRecordStar1Hig)[24];
extern char(&aDynkeyStar1Ran)[19];
extern char(&aRecordStar1H_0)[26];
extern char(&aRecordStar1Rat)[21];
extern char(&aRecordStar1Dis)[26];
extern char(&aRecordStar1Los)[21];
extern char(&aRecordStar1Win)[19];
extern char(&aRecordStar0Las)[31];
extern char(&aRecordStar0L_0)[24];
extern char(&aRecordStar0Dis)[26];
extern char(&aRecordStar0Los)[21];
extern char(&aRecordStar0Win)[19];
extern char(&aProfileDescrip)[20];
extern char(&aProfileLocatio)[17];
extern char(&aProfileAge)[12];
extern char(&aProfileSex_1)[12];
extern char(&aDialog_creat_0)[19];
extern char(&aIcon)[5];
extern char(&aBrowse)[7];
extern char(&aGlueBattle_n_1)[39];
extern char(&aGlueBattle__17)[31];
extern char(&aGlueBattle__12)[34];
extern char(&aDialog_create_)[21];
extern char(&aBattle_html)[12];
extern char(&aLastCreatedGam)[];
extern char(&aStarcraftSw_16)[];
extern char(&aGlueBattle_n_5)[];
extern char(&aGlueBattle_n_4)[];
extern char(&aCreate)[7];
extern char(&aGlueBattle_n_2)[41];
extern char(&aStarcraftSw_15)[];
extern char(&aGlueBattle_n_0)[33];
extern char(&aStarcraftSw_54)[];
extern char(&aIcontable)[10];
extern char(&aGlueBattle__11)[32];
extern char(&aGlueBattle_net)[];
extern char(&aGlueBattle__13)[43];
extern char(&aGlueBattle__14)[43];
extern char(&aGlueBattle__15)[42];
extern char(&aGlueBattle__16)[42];
extern char(&aStarcraftSw_14)[];
extern char(&aTimesNewRoman)[16];
extern char(&aStarcraftSw_12)[];
extern char(&aStarcraftSw_11)[];
extern char(&aStarcraftSw_90)[];
extern char(&aErrorInGetclos)[];
extern char(&aWriteMe)[];
extern char(&aStarcraftSw_10)[];
extern char(&aStarcraftSwa_9)[];
extern char& byte_5056EC;
extern char& byte_5056F0;
extern char(&aSSS)[];
extern char(&aSD_1)[];
extern char(&asc_505704)[2];
extern char& byte_505708;
extern char(&aD_0)[4];
extern char(&aDDCDD)[];
extern char(&aCDD)[];
extern char& byte_50572C;
extern char(&aSD)[];
extern char(&aSD_0)[];
extern char(&aAppaddex1)[];
extern char(&asc_505750)[];
extern CHAR(&Caption)[];
extern char(&aSSLineDS)[];
extern char(&aSS)[];
extern char(&aDM)[];
extern char(&aUnknownError0x)[];
extern char(&aMmsysError0xX)[];
extern char(&aDserrUnknown0x)[];
extern char(&aE_nointerface)[];
extern char(&source)[];
extern char(&aDserr_noaggreg)[];
extern char(&aDserr_invalidp)[];
extern char(&aDserr_bufferlo)[];
extern char(&aDserr_alreadyi)[];
extern char(&aDserr_nodriver)[];
extern char(&aDserr_badforma)[];
extern char(&aDserr_prioleve)[];
extern char(&aDserr_invalidc)[];
extern char(&aDserr_controlu)[];
extern char(&aDserr_allocate)[];
extern char(&aDs_ok)[];
extern char(&aDderrUnknown0x)[];
extern char(&aDderr_unsupp_0)[];
extern char(&aDderr_notpalet)[];
extern char(&aDderr_wrongmod)[];
extern char(&aDderr_nodc)[];
extern char(&aDderr_cantcrea)[];
extern char(&aDderr_exclusiv)[];
extern char(&aDderr_nopale_0)[];
extern char(&aDderr_nopalett)[];
extern char(&aDderr_hwndalre)[];
extern char(&aDderr_hwndsubc)[];
extern char(&aDderr_nohwnd)[];
extern char(&aDderr_noemulat)[];
extern char(&aDderr_primarys)[];
extern char(&aDderr_nodire_0)[];
extern char(&aDderr_directdr)[];
extern char(&aDderr_invalidd)[];
extern char(&aDderr_wasstill)[];
extern char(&aDderr_vertical)[];
extern char(&aDderr_unsuppor)[];
extern char(&aDderr_surfacel)[];
extern char(&aDderr_cantlock)[];
extern char(&aDderr_surfaceb)[];
extern char(&aDderr_paletteb)[];
extern char(&aDderr_outofvid)[];
extern char(&aDderr_notfound)[];
extern char(&aDderr_noexclus)[];
extern char(&aDderr_nodirect)[];
extern char(&aDderr_lockedsu)[];
extern char(&aDderr_invalidr)[];
extern char(&aDderr_invalidp)[];
extern char(&aDderr_invalidm)[];
extern char(&aDderr_currentl)[];
extern char(&aDderr_cannotde)[];
extern char(&aDderr_cannotat)[];
extern char(&aDderr_incompat)[];
extern char(&aDderr_exceptio)[];
extern char(&aDderr_alreadyi)[];
extern char(&aDd_ok)[];
extern char(&aStarcraftSwa_8)[];
extern char(&aUsechatcolors)[14];
extern char(&aTrigtext)[9];
extern char(&aTip)[4];
extern char(&aBldgnoise)[10];
extern char(&aUnitnoise)[10];
extern char(&aUnitspeech)[11];
extern char(&aIntrox)[7];
extern char(&aIntro)[6];
extern char(&aTipnum)[7];
extern char(&aSfx)[4];
extern char(&aMusic)[6];
extern char(&aM_kscroll)[10];
extern char(&aM_mscroll)[10];
extern char(&aKscroll)[8];
extern char(&aMscroll)[8];
extern char(&aSpeed)[6];
extern char(&aBadPfopenModeI)[];
extern char(&aWb_0)[4];
extern char(&aRb)[3];
extern int& dword_505D3C;
extern char& byte_505D40;
extern char(&aStarcraftSwa_7)[];
extern char(&aFontS_fnt)[];
extern char(&aGdsdialogboxpa)[];
extern char(&format)[];
extern char(&aProgra)[];
extern char(&aSS02u02u02u_er)[];
extern char(&aStarcraftSw_81)[];
extern char(&aStarcraftSw_76)[];
extern char(&aCreatebacksurf)[];
extern char(&aSetpalette)[];
extern char(&aCreateprimarys)[];
extern char(&aCreatepalette)[];
extern char(&aSetdisplaymode)[];
extern CHAR(&aDirectdrawcrea)[];
extern char(&source_file)[];
extern CHAR(&aDdraw_dll)[];
extern char(&aStarcraftSw_93)[];
extern char(&aStarcraftSwa_5)[];
extern char(&aStarcraftSwa_4)[];
extern char(&aStarcraftSwa_3)[];
extern char(&a4W01ADBSW1A1W2)[];
extern char(&a4W0ADBSW1A1W2B)[];
extern char(&arg0)[];
extern char(&directives1)[];
extern char(&directives2)[];
extern char(&aStarcraftSwa_2)[];
extern char(&aStarcraftSwa_1)[];
extern __int16& word_50612C;
extern char& byte_50612E;
extern char(&logfilename)[];
extern char(&aStarcraftSw_83)[];
extern char(&aCouldNotLoadS)[];
extern char(&aDraw1)[];
extern char(&aStarcraftSwarL)[];
extern int(&dword_5061B8)[];
extern int(&dword_5061BC)[17];
extern char(&asc_506200)[];
extern char(&byte_506224)[4];
extern const char(&asc_506228)[];
extern double& dbl_506230;
extern double& dbl_506238;
extern double& dbl_506240;
extern double& dbl_506248;
extern double& dbl_506250;
extern double& dbl_506258;
extern double& dbl_506260;
extern double& dbl_506268;
extern char(&aE000)[];
extern CHAR(&aIsprocessorfea)[];
extern CHAR(&aKernel32)[];
extern _SCOPETABLE_ENTRY& stru_5062B8;
extern char(&aAuthenticamd)[];
extern __int64& qword_5062E0;
extern __int64& qword_506F00;
extern __int64& qword_507B20;
extern __int64& qword_509B60;
extern __int64& qword_509BC0;
extern __int64& qword_509BC8;
extern __int64& qword_509BD0;
extern __int64& qword_509BD8;
extern double& dbl_509BE0;
extern double& dbl_509BE8;
extern __int64& qword_509BF0;
extern __int64& qword_509BF8;
extern __int64& qword_509C00;
extern char(&aAtan)[5];
extern char(&aCeil)[5];
extern char(&aFloor)[6];
extern char(&aModf)[5];
extern char(&aExp2)[5];
extern char(&aExp10)[6];
extern char(&aLog2)[5];
extern char(&aPow)[4];
extern void *& off_509D04;
extern char(&aLog10)[6];
extern char(&aExp)[4];
extern char(&a1Qnan)[];
extern char(&a1Inf)[];
extern char(&a1Ind)[6];
extern char(&a1Snan)[7];
extern char(&a_nextafter)[11];
extern char(&a_logb)[6];
extern char(&a_yn)[4];
extern char(&a_y1)[4];
extern char(&a_y0)[4];
extern char(&aFrexp)[6];
extern char(&aFmod)[5];
extern char(&a_hypot)[7];
extern char(&a_cabs)[6];
extern char(&aLdexp)[6];
extern char(&aFabs)[5];
extern char(&aTan)[4];
extern char(&aCos)[4];
extern char(&aSin)[4];
extern char(&aSqrt)[5];
extern char(&aAtan2)[6];
extern char(&aAcos)[5];
extern char(&aAsin)[5];
extern char(&aTanh)[5];
extern char(&aCosh)[5];
extern char(&aSinh)[5];
extern char(&asc_509DC8)[4];
extern void (*(&dword_509E80)[2])(void);
extern void (*&dword_509E88)(void);
extern __int16 *(&off_509F40)[10];
extern __int16 *(&off_509F6C)[23];
extern __int16 *(&off_509FCC)[5];
extern __int16 *(&off_509FE4)[111];
extern __int16 *(&off_50A1A4)[4];
extern __int16 *(&off_50A1B8)[73];
extern __int16 *(&off_50A2E0)[3];
extern int& dword_50A2F0;
extern __int16& word_50A510;
extern __int16& word_50A524;
extern __int16& word_50A536;
extern __int16& word_50A548;
extern __int16& word_50A558;
extern __int16& word_50A566;
extern __int16& word_50A578;
extern __int16& word_50A58C;
extern __int16& word_50A5A0;
extern __int16& word_50A5AC;
extern __int16& word_50A5BC;
extern __int16& word_50A5D2;
extern __int16& word_50A5EE;
extern __int16& word_50A608;
extern __int16& word_50A620;
extern __int16& word_50A63A;
extern __int16& word_50A650;
extern __int16& word_50A660;
extern __int16& word_50A67A;
extern __int16& word_50A68C;
extern __int16& word_50A69A;
extern __int16& word_50A6B2;
extern __int16& word_50A6BE;
extern __int16& word_50A6CE;
extern __int16& word_50A6E4;
extern __int16& word_50A6EE;
extern __int16& word_50A6FC;
extern __int16& word_50A70A;
extern __int16& word_50A718;
extern __int16& word_50A726;
extern __int16& word_50A734;
extern __int16& word_50A740;
extern __int16& word_50A758;
extern __int16& word_50A770;
extern __int16& word_50A780;
extern __int16& word_50A78A;
extern __int16& word_50A796;
extern __int16& word_50A7A2;
extern __int16& word_50A7AE;
extern __int16& word_50A7CA;
extern __int16& word_50A7DA;
extern __int16& word_50A7E8;
extern __int16& word_50A7F8;
extern __int16& word_50A804;
extern __int16& word_50A81A;
extern __int16& word_50A82A;
extern __int16& word_50A836;
extern __int16& word_50A850;
extern __int16& word_50A860;
extern __int16& word_50A876;
extern __int16& word_50A890;
extern __int16& word_50A8A0;
extern __int16& word_50A8B6;
extern __int16& word_50A8C6;
extern __int16& word_50A8D8;
extern __int16& word_50A8EA;
extern __int16& word_50A8FC;
extern __int16& word_50A90E;
extern __int16& word_50A920;
extern __int16& word_50A932;
extern __int16& word_50A942;
extern __int16& word_50A95C;
extern __int16& word_50A96E;
extern __int16& word_50A980;
extern char(&aKernel32_dll)[13];
extern __int16& word_50A9A8;
extern __int16& word_50A9BE;
extern __int16& word_50A9C6;
extern __int16& word_50A9D6;
extern __int16& word_50A9EA;
extern __int16& word_50A9F8;
extern __int16& word_50AA06;
extern __int16& word_50AA1C;
extern __int16& word_50AA28;
extern __int16& word_50AA3A;
extern __int16& word_50AA46;
extern __int16& word_50AA56;
extern __int16& word_50AA68;
extern __int16& word_50AA78;
extern __int16& word_50AA92;
extern __int16& word_50AA9E;
extern __int16& word_50AAAC;
extern __int16& word_50AAC6;
extern __int16& word_50AADE;
extern __int16& word_50AAEE;
extern __int16& word_50AAFA;
extern __int16& word_50AB18;
extern __int16& word_50AB28;
extern __int16& word_50AB3A;
extern __int16& word_50AB4C;
extern __int16& word_50AB5C;
extern __int16& word_50AB6C;
extern __int16& word_50AB7E;
extern __int16& word_50AB8E;
extern __int16& word_50ABA4;
extern __int16& word_50ABB2;
extern __int16& word_50ABBC;
extern __int16& word_50ABD4;
extern __int16& word_50ABEE;
extern __int16& word_50AC06;
extern __int16& word_50AC14;
extern __int16& word_50AC24;
extern __int16& word_50AC34;
extern __int16& word_50AC48;
extern __int16& word_50AC58;
extern __int16& word_50AC6A;
extern __int16& word_50AC78;
extern __int16& word_50AC86;
extern __int16& word_50AC96;
extern __int16& word_50ACA4;
extern __int16& word_50ACB8;
extern __int16& word_50ACC6;
extern __int16& word_50ACD8;
extern __int16& word_50ACE4;
extern __int16& word_50ACF0;
extern __int16& word_50AD06;
extern __int16& word_50AD1C;
extern __int16& word_50AD2C;
extern __int16& word_50AD40;
extern __int16& word_50AD4C;
extern __int16& word_50AD68;
extern __int16& word_50AD78;
extern __int16& word_50AD86;
extern __int16& word_50AD92;
extern __int16& word_50ADA6;
extern __int16& word_50ADBA;
extern __int16& word_50ADCC;
extern __int16& word_50ADDE;
extern __int16& word_50ADEE;
extern __int16& word_50ADFA;
extern __int16& word_50AE06;
extern __int16& word_50AE14;
extern __int16& word_50AE1C;
extern __int16& word_50AE2C;
extern __int16& word_50AE38;
extern __int16& word_50AE4E;
extern __int16& word_50AE5E;
extern __int16& word_50AE78;
extern __int16& word_50AE90;
extern __int16& word_50AEAA;
extern __int16& word_50AEBC;
extern __int16& word_50AED0;
extern __int16& word_50AEE0;
extern __int16& word_50AEF2;
extern __int16& word_50AF0A;
extern __int16& word_50AF1A;
extern __int16& word_50AF2A;
extern __int16& word_50AF3E;
extern __int16& word_50AF4C;
extern __int16& word_50AF5A;
extern __int16& word_50AF68;
extern __int16& word_50AF76;
extern __int16& word_50AF82;
extern __int16& word_50AF8E;
extern __int16& word_50AF98;
extern __int16& word_50AFAA;
extern __int16& word_50AFBA;
extern __int16& word_50AFC6;
extern __int16& word_50AFD2;
extern __int16& word_50AFE2;
extern __int16& word_50AFF0;
extern __int16& word_50B002;
extern __int16& word_50B012;
extern __int16& word_50B028;
extern __int16& word_50B03A;
extern __int16& word_50B04C;
extern __int16& word_50B05A;
extern __int16& word_50B06C;
extern __int16& word_50B07E;
extern __int16& word_50B08C;
extern __int16& word_50B098;
extern __int16& word_50B0A4;
extern __int16& word_50B0B6;
extern char(&aUser32_dll)[11];
extern __int16& word_50B0D0;
extern __int16& word_50B0E2;
extern __int16& word_50B0F2;
extern __int16& word_50B100;
extern __int16& word_50B10E;
extern __int16& word_50B120;
extern __int16& word_50B138;
extern __int16& word_50B14E;
extern __int16& word_50B162;
extern __int16& word_50B172;
extern __int16& word_50B182;
extern __int16& word_50B198;
extern __int16& word_50B1A4;
extern __int16& word_50B1B4;
extern __int16& word_50B1CC;
extern __int16& word_50B1DA;
extern __int16& word_50B1E6;
extern __int16& word_50B1F4;
extern __int16& word_50B204;
extern char(&aGdi32_dll)[10];
extern __int16& word_50B21A;
extern __int16& word_50B22E;
extern __int16& word_50B244;
extern __int16& word_50B25A;
extern __int16& word_50B26A;
extern __int16& word_50B286;
extern __int16& word_50B29C;
extern __int16& word_50B2A6;
extern __int16& word_50B2B6;
extern char(&aAdvapi32_dll)[13];
extern __int16& word_50B2D6;
extern __int16& word_50B2E6;
extern __int16& word_50B302;
extern __int16& word_50B316;
extern __int16& word_50B332;
extern char(&aImm32_dll)[10];
extern __int16& word_50B352;
extern __int16& word_50B364;
extern __int16& word_50B37E;
extern char(&aVersion_dll)[12];
extern __int16& word_50B3A0;
extern __int16& word_50B3B0;
extern __int16& word_50B3CE;
extern __int16& word_50B3E6;
extern char(&aShell32_dll)[12];
extern char(&aStorm_dll)[10];
extern __int16& word_50B40E;
extern __int16& word_50B422;
extern __int16& word_50B438;
extern __int16& word_50B44A;
extern __int16& word_50B458;
extern __int16& word_50B466;
extern __int16& word_50B47A;
extern __int16& word_50B488;
extern __int16& word_50B49A;
extern __int16& word_50B4AE;
extern __int16& word_50B4BC;
extern __int16& word_50B4C8;
extern __int16& word_50B4D4;
extern __int16& word_50B4EE;
extern __int16& word_50B4FA;
extern __int16& word_50B50A;
extern __int16& word_50B51A;
extern int& __xc_z_0;
extern int (*&dword_50C4D4)(void);
extern int& __xt_a_0;
extern int& __xt_z_0;
extern int& __xt_a_1;
extern int& __xt_z_1;
extern int (__cdecl *&off_50C4F0)(_DWORD);
extern int& dword_50C4F4;
extern int(&dword_50C4F8)[];
extern char(&off_50C4FC)[148];
extern int& dword_50C608;
extern int& dword_50C60C;
extern size_t& dword_50C610;
extern int& dword_50C614;
extern _DWORD& dword_50C63C;
extern LPCRITICAL_SECTION& lpCriticalSection;
extern int& dword_50C654;
extern int& dword_50C770;
extern char& byte_50C778;
extern int& dword_50C780;
extern char(&aVyv)[6];
extern char(&aJ)[3];
extern char(&aBe)[3];
extern void *& off_50C8CC;
extern _DWORD(&dword_50CA04)[5];
extern int(&dword_50CA18)[];
extern int(&dword_50CA1C)[89];
extern wchar_t *& off_50CB80;
extern void *& off_50CB84;
extern char *(&off_50CB98)[43];
extern void *& off_50CC54;
extern void *& off_50CC58;
extern void *& off_50CC5C;
extern void *& off_50CC60;
extern void *& off_50CC64;
extern void *& off_50CC68;
extern void *& off_50CC6C;
extern void *& off_50CC70;
extern void *& off_50CC74;
extern void *& off_50CC78;
extern void **& off_50CC84;
extern int& dword_50CCA0;
extern int& dword_50CCA4;
extern int& dword_50CCA8;
extern void *& off_50CCB0;
extern void *& off_50CCF0;
extern LPSTR& lpMultiByteStr;
extern LPSTR& off_50CD34;
extern int& dword_50CD38;
extern int& dword_50CD3C;
extern int& dword_50CD40;
extern int& dword_50CD44;
extern int& dword_50CD48;
extern int& dword_50CD4C;
extern int& dword_50CD50;
extern int& dword_50CD80;
extern int& dword_50CD84;
extern u8(&byte_50CDC1)[256];
extern int& imgDrawPaletteIndex;
extern int& dword_50CEC5;
extern int& dword_50CEC9;
extern int& dword_50CECD;
extern int& dword_50CED1;
extern int& dword_50CED5;
extern byte *& dword_50CED9;
extern char& byte_50CEDD;
extern int& dword_50CEDE;
extern _DWORD(&dword_50CEE2)[3];
extern int& dword_50CEF0;
extern char(&aAvtypeInfo)[16];
extern int (__cdecl *&off_50D1B8)(_DWORD, _DWORD, _DWORD, _DWORD, _DWORD);
extern void (__noreturn *(&off_50D1BC)[5])();
extern void (__noreturn *(&off_50D1C4)[3])();
extern _DWORD& dword_50D1D0;
extern _DWORD& dword_50D1D4;
extern _DWORD& dword_50D1D8;
extern _DWORD& dword_50D1DC;
extern _DWORD& dword_50D1E0;
extern _DWORD& dword_50D1E4;
extern char(&aPkwareDataCompressionLibraryForWin32Copyr_0)[193];
extern int(&crc_table)[256];
extern char(&byte_50D6B0)[64];
extern char(&byte_50D730)[16];
extern char(&byte_50D740)[32];
extern char(&byte_50D760)[16];
extern char& asc_50D780;
extern _WORD(&word_50D880)[255];
extern char(&aPkwareDataCompressionLibraryForWin32Copyr)[194];
extern char(&byte_50DBC8)[];
extern char(&byte_50DBD8)[16];
extern char(&byte_50DBE8)[16];
extern char(&byte_50DBF8)[256];
extern char(&aPkwareDataComp)[193];
extern char(&aRegistration_b)[19];
extern char *(&off_50E040)[6];
extern int& replay_speed_multiplier;
extern int& dword_50E05C;
extern int& dword_50E064;
extern GluRelated(&stru_50E06C)[12];
extern CampaignMenuEntry *(&campaign_menu_entries)[3];
extern CampaignMenuEntry *(&expcampaign_menu_entries)[3];
extern Cinematic& active_cinematic;
extern char(&campaignFirstMission)[4];
extern char(&xCampaignFirstMission)[8];
extern char(&aInternalVersio)[260];
extern char(&aRegistration_block_2)[19];
extern char(&aRegistration_table)[19];
extern int& is_spawn;
extern int& FrameSkip;
extern GameSpeeds& GameSpeedModifiers;
extern UpdateFunction(&sgUpdateFuncs)[18];
extern RenderFunction(&sgDrawFuncs)[18];
extern int& g_ActiveNationID;
extern int& dword_51267C;
extern int& dword_512680;
extern unsigned int& g_LocalNationID;
extern int& g_LocalHumanID;
extern int& playerid;
extern char *(&cinematics)[28];
extern char(&race_lowercase_char_id)[3];
extern char *(&cursor_filenames)[19];
extern __int16(&word_51275C)[6];
extern __int16(&word_512768)[2];
extern __int16& word_51276C;
extern __int16& word_512770;
extern __int16& word_512774;
extern UnknownTilesetRelated1& badlands_color_cycle;
extern UnknownTilesetRelated1& exp_color_cycle;
extern UnknownTilesetRelated1& ashworld_color_cycle;
extern UnknownTilesetRelated1 *(&color_cycles)[8];
extern ActionPointer(&ActionTable)[60];
extern int& dword_5128F0;
extern ColorShiftData(&colorShift)[8];
extern char *(&TileSetNames)[8];
extern int& value;
extern int(&aTenbg)[];
extern char(&aMdomd)[6];
extern char(&aNxpif)[6];
extern char(&aNpdu)[6];
extern char(&aLbcse)[6];
extern swishTimer(&commonSwishControllers)[5];
extern swishTimer(&timers)[3];
extern __int16& word_512A0C;
extern int& dword_512A10;
extern swishTimer(&stru_512A14)[7];
extern __int16& word_512A30;
extern swishTimer(&stru_512A34)[4];
extern swishTimer(&stru_512A48)[3];
extern swishTimer(&stru_512A54)[7];
extern swishTimer(&stru_512A70)[7];
extern swishTimer(&stru_512A8C)[2];
extern char *(&score_screens)[6];
extern MenuPosition(&score_menus)[6];
extern MusicTrack(&score_music_track)[6];
extern GluAllTblEntry& tbl_entry;
extern swishTimer(&gluCmpgnSwishController)[2];
extern char(&aRegistration_block)[19];
extern __int16& word_512B98;
extern DatLoad(&mapdataDat)[1];
extern MusicTrackDescription(&music_tracks)[25];
extern char(&aRegistration_block_1)[19];
extern RECT& stru_512D00;
extern int(&dword_512D20)[];
extern POINT(&AngleDistance)[256];
extern int(&tangent_table)[64];
extern u16 *(&off_513628)[3];
extern __int16(&word_513634)[14];
extern point(&bullet_random_offsets)[15];
extern int& nextReplayCommandFrame;
extern RECT& command_card_pos;
extern DatLoad(&upgradesDat)[12];
extern DatLoad(&portdataDat)[6];
extern int& ColorCycle;
extern DatLoad(&techdataDat)[11];
extern DatLoad(&weaponsDat)[24];
extern char(&aRegistration_block_0)[19];
extern SightStruct(&line_of_sight)[12];
extern ScrollSpeeds& scrollSpeeds;
extern char(&byte_513B92)[14];
extern __int16(&unknown_campaign_related)[65];
extern char(&byte_513C24)[12];
extern DatLoad(&unitsDat)[54];
extern DatLoad(&ordersDat)[19];
extern DatLoad(&spritesDat)[6];
extern DatLoad(&imagesDat)[14];
extern char& byte_5140C4;
extern char& byte_5140D8;
extern unsigned __int8(&byte_5140E0)[8];
extern char& byte_5140E8;
extern unsigned __int8(&byte_514100)[8];
extern char(&byte_514108)[4];
extern char(&byte_51410C)[4];
extern char *(&ReservedDosFilenames)[25];
extern __int16(&word_514178)[];
extern Tech2(&tech)[547];
extern __int16(&word_5145C0)[];
extern __int16(&word_5145C2)[419];
extern __int16(&word_514908)[];
extern __int16(&word_51490A)[159];
extern __int16(&word_514A48)[];
extern __int16(&word_514A4A)[343];
extern __int16(&word_514CF8)[];
extern __int16(&word_514CFA)[657];
extern __int16(&word_51521C)[4];
extern int& UnitPortraits;
extern char(&byte_515228)[88];
extern char(&asc_515230)[8];
extern char(&asc_515258)[8];
extern char(&wireframeConstants)[];
extern StatFlufDialog(&statfluf_zerg)[7];
extern StatFlufDialog(&statfluf_terran)[6];
extern StatFlufDialog(&statfluf_protoss)[5];
extern StatFlufDialog(&statfluf_neutral)[8];
extern StatFlufDialog *(&statfluf_dialogs)[4];
extern int& dword_5153F8;
extern int (__stdcall *(&funcs_455F96)[7])(int, int, int);
extern int(&dword_515418)[];
extern int(&dword_51541C)[31];
extern DatLoad(&sfxdataDat)[5];
extern char(&aProfileSex_0)[12];
extern char(&aProfileAge_0)[12];
extern char(&aProfileLocat_0)[17];
extern char(&aProfileDescr_0)[20];
extern char(&aRecordStar0W_0)[19];
extern char(&aRecordStar0L_1)[21];
extern char(&aRecordStar0D_0)[26];
extern char(&aRecordStar0L_2)[24];
extern char(&aRecordStar0L_3)[31];
extern char(&aRecordStar1W_0)[19];
extern char(&aRecordStar1L_1)[21];
extern char(&aRecordStar1D_0)[26];
extern char(&aRecordStar1R_0)[21];
extern char(&aRecordStar1H_1)[26];
extern char(&aDynkeyStar1R_0)[19];
extern char(&aRecordStar1H_2)[24];
extern char(&aRecordStar1L_2)[24];
extern char(&aRecordStar1L_3)[31];
extern char(&aProfileSex)[12];
extern char(&aProfileAge_1)[12];
extern char(&aProfileLocat_1)[17];
extern char(&aProfileDescr_1)[20];
extern char(&aRecordSexp0W_0)[19];
extern char(&aRecordSexp0L_1)[21];
extern char(&aRecordSexp0D_0)[26];
extern char(&aRecordSexp0L_2)[24];
extern char(&aRecordSexp0L_3)[31];
extern char(&aRecordSexp1W_0)[19];
extern char(&aRecordSexp1L_1)[21];
extern char(&aRecordSexp1D_0)[26];
extern char(&aRecordSexp1R_0)[21];
extern char(&aRecordSexp1H_1)[26];
extern char(&aDynkeySexp1R_0)[19];
extern char(&aRecordSexp1H_2)[24];
extern char(&aRecordSexp1L_2)[24];
extern char(&aRecordSexp1L_3)[31];
extern int& dword_5159A4;
extern char *(&off_5159A8)[2];
extern char(&aOk_dialog)[10];
extern char(&aBigok_dialog)[13];
extern char(&aOkcancel_dialo)[16];
extern char(&aBigokcancel_dialog)[19];
extern DatLoad(&flingyDat)[8];
extern int (*(&trigger_conditions)[24])();
extern char(&byte_515AF8)[];
extern char(&byte_515B08)[16];
extern __int16(&word_515B18)[];
extern __int16(&word_515B1A)[];
extern __int16(&word_515B38)[];
extern __int16(&word_515B3A)[];
extern __int16(&word_515B58)[4];
extern BytePair(&stru_515B60)[4];
extern char(&byte_515B68)[];
extern char(&byte_515B69)[31];
extern int(&damage_type_multiplier)[5][5];
extern ButtonOrder(&replay_paused)[3];
extern ButtonOrder(&replay_playing)[3];
extern ButtonOrder(&stru_515C60)[1];
extern ButtonOrder(&stru_515C74)[1];
extern ButtonOrder(&stru_515C88)[1];
extern ButtonOrder(&stru_515C9C)[2];
extern ButtonOrder(&stru_515CC4)[1];
extern ButtonOrder(&stru_515CD8)[2];
extern ButtonOrder(&stru_515D00)[1];
extern ButtonOrder(&stru_515D14)[3];
extern ButtonOrder(&stru_515D50)[1];
extern ButtonOrder(&stru_515D68)[5];
extern ButtonOrder(&button_set_generic_army)[5];
extern ButtonOrder(&stru_515E38)[5];
extern ButtonOrder(&button_set_dropship)[7];
extern ButtonOrder(&button_set_missile_turret)[2];
extern ButtonOrder(&button_set_larva)[9];
extern ButtonOrder(&button_set_egg)[1];
extern ButtonOrder(&button_set_drone)[9];
extern ButtonOrder(&button_set_basic_zerg_buildings)[7];
extern ButtonOrder(&button_set_advanced_zerg_buildings)[6];
extern ButtonOrder(&button_set_zergling)[7];
extern ButtonOrder(&button_set_hydralisk)[8];
extern ButtonOrder(&button_set_mutalisk)[7];
extern ButtonOrder(&button_set_lurker)[7];
extern ButtonOrder(&button_set_queen)[9];
extern ButtonOrder(&button_set_deflier)[9];
extern ButtonOrder(&button_set_infested_terran)[7];
extern ButtonOrder(&button_set_infested_kerrigan)[10];
extern ButtonOrder(&button_set_infested_duran)[9];
extern ButtonOrder(&button_set_hatchery)[5];
extern ButtonOrder(&button_set_lair)[9];
extern ButtonOrder(&button_set_hive)[8];
extern ButtonOrder(&button_set_nydus_canal)[1];
extern ButtonOrder(&button_set_spire)[4];
extern ButtonOrder(&button_set_greater_spire)[3];
extern ButtonOrder(&button_set_spawning_pool)[3];
extern ButtonOrder(&button_set_creep_colony)[2];
extern ButtonOrder(&button_set_hydralisk_den)[5];
extern ButtonOrder(&button_set_queens_nest)[5];
extern ButtonOrder(&button_set_defiler_mound)[5];
extern ButtonOrder(&button_set_evolution_chamber)[4];
extern ButtonOrder(&button_set_ultralisk_cavern)[3];
extern ButtonOrder(&button_set_nexus)[3];
extern ButtonOrder(&button_set_probe)[7];
extern ButtonOrder(&stru_516D08)[9];
extern ButtonOrder(&stru_516DC0)[9];
extern ButtonOrder(&button_set_high_templar)[8];
extern ButtonOrder(&button_set_dark_templar)[7];
extern ButtonOrder(&button_set_carrier)[7];
extern ButtonOrder(&button_set_reaver)[7];
extern ButtonOrder(&button_set_arbiter)[7];
extern ButtonOrder(&button_set_tassadar)[7];
extern ButtonOrder(&button_set_corsair)[6];
extern ButtonOrder(&button_set_dark_archon)[7];
extern ButtonOrder(&button_set_robotics_facility)[5];
extern ButtonOrder(&button_set_gateway)[6];
extern ButtonOrder(&button_set_stargate)[6];
extern ButtonOrder(&button_set_citadel_of_adun)[2];
extern ButtonOrder(&button_set_cybernetics_core)[4];
extern ButtonOrder(&button_set_templar_archives)[8];
extern ButtonOrder(&button_set_forge)[4];
extern ButtonOrder(&button_set_fleet_beacon)[7];
extern ButtonOrder(&button_set_arbiter_tribunal)[5];
extern ButtonOrder(&button_set_robotics_support_bay)[4];
extern ButtonOrder(&button_set_shield_battery)[1];
extern ButtonOrder(&button_set_observatory)[3];
extern ButtonOrder(&button_set_wraiths_maybe)[7];
extern ButtonOrder(&button_set_terran_infantry)[6];
extern ButtonOrder(&button_set_medic)[7];
extern ButtonOrder(&button_set_scv)[9];
extern ButtonOrder(&button_set_basic_terran_buildings)[9];
extern ButtonOrder(&button_set_advanced_terran_buildings)[5];
extern ButtonOrder(&button_set_ghost)[9];
extern ButtonOrder(&button_set_ghost_hero)[8];
extern ButtonOrder(&button_set_vulture)[6];
extern ButtonOrder(&button_set_siege_tank)[7];
extern ButtonOrder(&button_set_wraith)[7];
extern ButtonOrder(&button_set_science_vessel)[8];
extern ButtonOrder(&button_set_battlecruiser)[6];
extern ButtonOrder(&button_set_vaynor_vulture)[6];
extern ButtonOrder(&button_set_command_center)[10];
extern ButtonOrder(&button_set_comsat)[1];
extern ButtonOrder(&button_set_nuclear_silo)[2];
extern ButtonOrder(&button_set_bunker)[2];
extern ButtonOrder(&button_set_barracks)[11];
extern ButtonOrder(&button_set_factory)[12];
extern ButtonOrder(&button_set_science_facility)[12];
extern ButtonOrder(&button_set_starport)[13];
extern ButtonOrder(&button_set_control_tower)[4];
extern ButtonOrder(&button_set_engineering_bay)[7];
extern ButtonOrder(&button_set_covert_ops)[6];
extern ButtonOrder(&button_set_physics_lab)[4];
extern ButtonOrder(&button_set_armory)[5];
extern ButtonOrder(&button_set_academy)[7];
extern ButtonOrder(&button_set_machine_shop)[6];
extern ButtonOrder(&button_set_infested_command_center)[7];
extern ButtonOrder(&button_set_flag_beacon)[1];
extern ButtonSet(&button_sets)[250];
extern UnitStat(&unit_stats)[228];
extern BriefingAction(&briefing_actions)[10];
extern char *(&statusscreen_infobtn)[1];
extern __int16(&word_519F54)[];
extern __int16(&word_519F5C)[];
extern __int16& word_519F64;
extern RegistryOption(&stru_519F68)[16];
extern char& byte_51A0E8;
extern char& byte_51A0E9;
extern PALETTEENTRY(&stru_51A0F0)[25];
extern int& Gamma;
extern RECT& ScrLimit;
extern RECT& ScrSize;
extern char(&byte_51A17C)[16];
extern int& dword_51A18C;
extern int& dword_51A190;
extern int& dword_51A194;
extern __int16(&word_51A198)[4];
extern __int16& word_51A1A0;
extern __int16& word_51A1A2;
extern ListNode& stru_51A1F0;
extern int& dword_51A1F8;
extern ListNode& stru_51A1FC;
extern int& dword_51A204;
extern SFX_related& soundFXList;
extern STREAMED *& dword_51A210;
extern ListNode& stru_51A214;
extern TPROVIDER *& dword_51A21C;
extern ListNode& stru_51A220;
extern int& dword_51A228;
extern ListNode& stru_51A22C;
extern void *& dword_51A234;
extern ListNode& stru_51A238;
extern int& dword_51A240;
extern ListNode& stru_51A244;
extern int& dword_51A24C;
extern ListNode& stru_51A250;
extern int& dword_51A258;
extern ListNode& stru_51A25C;
extern _DWORD& dword_51A264;
extern TemplateList& templates_list;
extern ListNode& stru_51A274;
extern MapDirEntry *& dword_51A27C;
extern TriggerList(&stru_51A280)[8];
extern ListNode& stru_51A2E0;
extern int& dword_51A2E8;
extern ListNode& stru_51A2EC;
extern int& dword_51A2F4;
extern ListNode& stru_51A2F8;
extern BOOL& dword_51A300;
extern ChunkNode& dword_51A304;
extern void *& off_51A308;
extern void *& dword_51A30C;
extern void *& off_51A314;
extern int& dword_51A318;
extern ListNode& stru_51A31C;
extern TSAVEGAME *& dword_51A324;
extern ListNode& stru_51A328;
extern int& dword_51A330;
extern ListNode& TransMaskVector;
extern void *& dword_51A33C;
extern ListNode& stru_51A340;
extern void *& dword_51A348;
extern ListNode& stru_51A34C;
extern int& dword_51A354;
extern FnInteract(&functions)[4];
extern char(&a_au_hiddenctrl)[18];
extern _DWORD& dword_51A384;
extern FnInteract(&off_51A388)[11];
extern int& consoleRaceSpecific;
extern char(&a_autgame_hdr_node)[21];
extern int& is_cursor_shown;
extern _DWORD(&dword_51A3DC)[2];
extern char(&a_autsaved_game_node)[23];
extern FnInteract(&off_51A404)[8];
extern char(&a_austreamed)[15];
extern int& dword_51A43C;
extern char(&a_autprovider)[16];
extern char(&a_au_id)[10];
extern FnInteract(&off_51A46C)[9];
extern swishTimer(&gluChatSwishController)[5];
extern FnInteract(&off_51A4A8)[84];
extern FnInteract(&off_51A5F8)[20];
extern char(&a_au_gamenode)[16];
extern FnInteract(&off_51A660)[15];
extern FnInteract(&off_51A69C)[7];
extern FnInteract(&off_51A6B8)[5];
extern FnInteract(&off_51A6CC)[4];
extern FnInteract(&off_51A6DC)[2];
extern FnInteract(&off_51A6E4)[3];
extern FnInteract(&off_51A6F0)[7];
extern char(&separators2_maybe)[13];
extern char(&a_au_savegame)[16];
extern FnInteract(&off_51A734)[7];
extern FnInteract(&off_51A750)[20];
extern FnInteract(&off_51A7A0)[20];
extern FnInteract(&off_51A7F0)[5];
extern FnInteract(&off_51A804)[2];
extern FnInteract(&off_51A80C)[3];
extern FnInteract(&off_51A818)[11];
extern swishTimer& gluScoreSwishController;
extern FnInteract(&off_51A848)[61];
extern FnInteract(&off_51A93C)[11];
extern char(&a_au_phonenumber)[19];
extern char(&a_au_device)[14];
extern swishTimer(&stru_51A99C)[4];
extern FnInteract(&off_51A9AC)[13];
extern __int16& word_51A9E0;
extern char(&separators_maybe)[8];
extern swishTimer(&gluCustmSwishController)[5];
extern FnInteract(&off_51AA08)[38];
extern RaceDropdownSelect(&singleRaceSelect)[4];
extern TypeDropdownSelect(&singleTypeSelect)[2];
extern char(&a_au_drawtext)[16];
extern char(&a_auttemplate)[16];
extern char(&a_aulistentry)[16];
extern FnInteract& off_51AAF8;
extern FnInteract(&off_51AAFC)[4];
extern FnInteract(&off_51AB0C)[4];
extern FnInteract(&off_51AB20)[29];
extern char(&a_autriggernode)[18];
extern FnInteract(&off_51ABB0)[4];
extern FnInteract(&off_51ABC0)[5];
extern char(&a_autbnetmessage)[19];
extern FnInteract(&off_51ABF0)[3];
extern int(&dword_51ABFC)[];
extern char(&a_autfd_session)[18];
extern char(&a_autuser_info)[17];
extern char(&a_autban)[11];
extern char(&a_autsavegame)[16];
extern FnInteract(&off_51AC74)[4];
extern FnInteract(&off_51AC84)[3];
extern FnInteract& off_51AC90;
extern FnInteract& off_51AC94;
extern FnInteract(&off_51AC98)[6];
extern int& dword_51ACB0;
extern int& dword_51ACB4;
extern int& dword_51ACB8;
extern int& dword_51ACC0;
extern char(&aEntrextrdwhepb)[81];
extern char(&a_autfd_user)[15];
extern FnInteract(&off_51AD30)[10];
extern RaceDropdownSelect(&multiRaceSelect)[4];
extern int(&dword_51AD60)[];
extern char *& off_51AD64;
extern int(&dword_51AD68)[];
extern int(&dword_51AD90)[];
extern char *& off_51AD94;
extern int(&dword_51AD98)[];
extern int(&byte_51ADC0)[4];
extern int(&dword_51ADD0)[13];
extern int(&dword_51AE04)[11];
extern int(&dword_51AE30)[13];
extern LPCSTR& lpFileName;
extern int& dword_51AE68;
extern char *& off_51AE6C;
extern int& dword_51AE80;
extern int& dword_51AE84;
extern int& id;
extern char *(&off_51AE94)[4];
extern char *(&off_51AE98)[3];
extern char *(&off_51AE9C)[2];
extern char *& off_51AEA0;
extern int& nNumber;
extern char *& off_51AEA8;
extern char(&a_xxx_xxxxxxxxx)[26];
extern char(&a___xxx____xxxx)[82];
extern _DWORD& a____xxxxx_____;
extern _DWORD& a______xxxxx___;
extern int& dword_51B108;
extern struc_51B1E8(&stru_51B1E8)[3];
extern int& dword_51B260;
extern char(&aAutareafixup)[17];
extern HANDLE& hObject;
extern int& dword_51B294;
extern char(&a_au_bltmask)[15];
extern char(&a_au_ctrlnode)[16];
extern int& dword_51B2C8;
extern char& asc_51B2CC;
extern char& byte_51B2CD;
extern char& byte_51B2CE;
extern char& byte_51B2CF;
extern char(&a_au_dlggrp)[14];
extern int& dword_51B2E8;
extern int(&dword_51B2F0)[];
extern int(&dword_51B2F4)[];
extern int(&dword_51B2F8)[];
extern char(&a_auchunknode)[16];
extern char(&aUs)[3];
extern char(&aSs)[3];
extern int (__cdecl *&off_51B448)(_DWORD);
extern int (*(&off_51B44C)[2])();
extern int (*&off_51B450)();
extern char(&aPow_0)[4];
extern char& byte_51B540;
extern char(&byte_51B55C)[24];
extern void *(&jpt_4FA13D)[64];
extern double& dbl_51B6A0;
extern double& dbl_51B6B0;
extern char *& dword_51BAA0;
extern int& dword_51BAA8;
extern int& dword_51BAAC;
extern int& dword_51BAB0;
extern int& dword_51BAB4;
extern int& dword_51BAB8;
extern int& dword_51BABC;
extern int& dword_51BAC0;
extern int& dword_51BAC4;
extern int& dword_51BAC8;
extern void *& dword_51BAD0;
extern int& dword_51BAD4;
extern int& dword_51BAD8;
extern int& dword_51BAE0;
extern char& byte_51BAE8;
extern int& dword_51BAEC;
extern int& dword_51BAF0;
extern int (*&dword_51BAF4)(void);
extern CHAR(&Filename)[260];
extern char& byte_51BBFC;
extern int& dword_51BC00;
extern int (__stdcall *&MessageBoxA_0)(HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType);
extern HWND (__stdcall *&GetActiveWindow_0)();
extern HWND (__stdcall *&GetLastActivePopup_0)(HWND hWnd);
extern HWINSTA (__stdcall *&GetProcessWindowStation_0)();
extern BOOL (__stdcall *&GetUserObjectInformationA_0)(HANDLE hObj, int nIndex, PVOID pvInfo, DWORD nLength, LPDWORD lpnLengthNeeded);
extern int& dword_51BD7C;
extern int& dword_51BD80;
extern int& dword_51BD90;
extern int(&dword_51BD98)[];
extern volatile LONG& Target;
extern int (__cdecl *&dword_51BDDC)(_DWORD, _DWORD);
extern int& dword_51BDE8;
extern UINT& dword_51BDF8;
extern int& dword_51BE00;
extern int& dword_51BE04;
extern int (__cdecl *&dword_51BE08)(_DWORD);
extern int& dword_51BE0C;
extern int& dword_51BE14;
extern int& dword_51BE18;
extern struct _TIME_ZONE_INFORMATION& TimeZoneInformation;
extern int& dword_51BF14;
extern char *& dword_51BF18;
extern int& dword_51BF1C;
extern int& dword_51BF30;
extern int& dword_51BF34;
extern int& dword_51BF38;
extern int& dword_51BF3C;
extern int& dword_51BF40;
extern int& dword_51BF44;
extern int& dword_51BF64;
extern int& dword_51BF94;
extern int& dword_51BF98;
extern int& dword_51BF9C;
extern int& dword_51BFA0;
extern int& is_app_active;
extern HINSTANCE& hInst;
extern HWND& hWndParent;
extern int& dword_51BFB4;
extern char(&byte_51BFB8)[28];
extern int& dword_51BFD4;
extern unsigned __int8& byte_51BFD8;
extern int(&dword_51BFDC)[7];
extern int& Ophelia;
extern Bitmap(&glue_background_palette)[129];
extern void *& gluAllTblData;
extern FontColorRelated *& dword_51C40C;
extern MapData4& level_cheat_mission;
extern int& dword_51C414;
extern dialog *& dword_51C418;
extern TimerRelated& timer_related;
extern __int16(&word_51C480)[20];
extern int& dword_51C4A8;
extern int& dword_51C4AC;
extern dialog *& dword_51C4B0;
extern ListNodeUnknown *& dword_51C4B4;
extern int& dialog_count;
extern int& level_cheat_is_bw;
extern CHAR(&main_directory)[260];
extern DlgGrp *(&dword_51C5C8)[16];
extern int& level_cheat_race;
extern GlueEffectBuffer *& dword_51C60C;
extern int(&randomCounts)[];
extern int& dword_51C618;
extern int& dword_51C630;
extern int& dword_51C648;
extern int& dword_51C64C;
extern int& dword_51C654;
extern int& dword_51C65C;
extern int& dword_51C660;
extern int& dword_51C678;
extern int& dword_51C67C;
extern int& dword_51C680;
extern int& dword_51C68C;
extern int& dword_51C690;
extern int& dword_51C694;
extern int& dword_51C6AC;
extern int& dword_51C6B0;
extern int& dword_51C6C0;
extern int& dword_51C6C4;
extern int& dword_51C6C8;
extern int& dword_51C6D8;
extern int& dword_51C6E8;
extern int& dword_51C6EC;
extern int& dword_51C6F4;
extern int& dword_51C850;
extern unsigned int& initialSeed;
extern int& LastRandomNumber;
extern int& randomCountsTotal;
extern int& dword_51CA1C;
extern char(&archive_files)[520];
extern HANDLE& patch_rt_mpq;
extern HANDLE& broodat_mpq;
extern void *& dword_51CC30;
extern HANDLE& cd_archive_mpq;
extern HANDLE& stardat_mpq;
extern char(&tstrFilename)[260];
extern SNETVERSIONDATA& snet_version_data;
extern char(&patch_archive_file)[260];
extern int& cdkey_encrypted_len;
extern void *& cdkey_encrypted;
extern int& cdkeyowner_encrypted_len;
extern void *& cdkeyowner_encrypted;
extern int& IsRunning;
extern int(&LatencyFrames)[7];
extern int(&dword_51CE8C)[];
extern GamePosition& gwNextGameMode;
extern int& dword_51CE94;
extern int& visionUpdateCount;
extern char& visionUpdated;
extern char& byte_51CE9D;
extern int& FramesUntilNextTurn;
extern int& bytes_read;
extern char *& dword_51CEA8;
extern char& byte_51CEAC;
extern dialog *& dword_51CEB0;
extern int& dword_51CEB4;
extern int& dword_51CEB8;
extern char *& dword_51CEBC;
extern int& credits_interrupted;
extern int& dword_51CEC4;
extern u8& byte_51CEC8;
extern int(&dword_51CECC)[];
extern grpHead *(&ImageGrpGraphics)[1];
extern int& dword_51D218;
extern int(&dword_51D794)[23];
extern int& dword_51D7F0;
extern CImage(&stru_51DE70)[64];
extern CImage *& dword_51EE70;
extern grpHead(&stru_51EE78)[1];
extern CImage *& dword_51F1F8;
extern ImagesDatExtraOverlayLO_Files& lo_files;
extern CImage *& dword_5240B4;
extern int(&dword_5240B8)[];
extern int(&dword_5240BC)[5];
extern char(&building_overlay_state_max)[1000];
extern CImage(&stru_5244B8)[64];
extern CImage *& dword_5254B8;
extern BYTE(&byte_5254C0)[36864];
extern CImage *& dword_52E4C0;
extern CImage *& dword_52E4C4;
extern char(&tileset_shift)[256];
extern LO_Header *(&ShieldOverlays)[999];
extern CImage *& dword_52F564;
extern CImage(&images)[5000];
extern CImage(&stru_57D768)[80];
extern CImage *& dword_57EB68;
extern CImage *& dword_57EB6C;
extern CImage *& dword_57EB70;
extern CImage(&stru_57EB78)[12];
extern char& byte_57EE78;
extern int(&dword_57EE7C)[7];
extern int(&dword_57EE98)[];
extern char(&playerName)[25];
extern int& playerExploredVisions;
extern unsigned int& turn_counter;
extern int(&dword_57EEC0)[];
extern int& dword_57EEC4;
extern int& dword_57EEC8;
extern int& dword_57EECC;
extern int& dword_57EED0;
extern int& dword_57EED4;
extern int& dword_57EED8;
extern int& dword_57EEDC;
extern PlayerInfo(&Players)[12];
extern int& LatencyCalls;
extern char(&curPlayerID)[4];
extern char(&byte_57F098)[];
extern char(&byte_57F09A)[22];
extern int& playerVisions;
extern BYTE& multiPlayerMode;
extern int(&playerStatusArray)[8];
extern int& dword_57F0BC;
extern int& dword_57F0C0;
extern int& dword_57F0C4;
extern int& dword_57F0C8;
extern int& dword_57F0CC;
extern int& dword_57F0D0;
extern int& dword_57F0D4;
extern int& MaxTurnSize;
extern dialog *& load_screen;
extern Bitmap& stru_57F0E0;
extern Bitmap& stru_57F0E8;
extern PlayerResources& BWDATA_PlayerResources;
extern int& dword_57F1B0;
extern int& dword_57F1B4;
extern int& dword_57F1B8;
extern int& dword_57F1BC;
extern RaceId(&byte_57F1C0)[8];
extern char(&byte_57F1CB)[];
extern int& dword_57F1CC;
extern Position& MoveToTile;
extern MapSize& map_size;
extern __int16& unignored_player_flags;
extern __int16& SendTextFilter;
extern Tileset& CurrentTileSet;
extern __int16& currentMusicId;
extern char& byte_57F1E1;
extern RaceId& consoleIndex;
extern char(&customSingleplayer)[9];
extern int(&PlayerVision)[12];
extern int(&factionsColorsOrdering)[8];
extern DWORD& ElapsedTimeFrames;
extern int& savedElapsedSeconds;
extern MapData& CampaignIndex;
extern char(&next_scenario)[32];
extern RaceId& selectedSingleplayerRace;
extern RaceId(&single_player_opponent_races)[8];
extern __int16(&word_57F270)[];
extern __int16(&word_57F272)[5];
extern UnitAvail& UnitAvailability;
extern char(&byte_57FD2C)[8];
extern int& dword_57FD34;
extern int& dword_57FD38;
extern char(&CurrentMapFileName)[260];
extern char(&CurrentMapName)[32];
extern UnitGroupRelated(&stru_57FE60)[8];
extern char& byte_581D60;
extern char& lossType;
extern char(&playerHasLeft)[];
extern int& unkVictoryVariable;
extern char(&byte_581D6A)[11];
extern char& byte_581D75;
extern struc_581D76(&stru_581D76)[8];
extern char(&byte_581DD5)[];
extern u8(&PlayerColors)[12];
extern AllScoresStruct& AllScores;
extern TechSC(&TechAvailableSC)[12];
extern TechSC(&TechResearchSC)[12];
extern UpgradesSC(&UpgradeMaxSC)[12];
extern UpgradesSC(&UpgradeLevelSC)[12];
extern char(&byte_58D5AF)[];
extern byte(&dword_58D5B0)[8];
extern int& dword_58D5B4;
extern int& dword_58D5B8;
extern ForceName& BWDATA_ForceNames;
extern PlayerAlliance(&Alliance)[12];
extern int(&MissionObjectives)[12];
extern int& CountdownTimer;
extern int& ElapsedTimeSeconds;
extern int& dword_58D6FC;
extern char(&byte_58D700)[8];
extern int& dword_58D708;
extern char& byte_58D70C;
extern char& byte_58D70D;
extern __int16& word_58D70E;
extern int& dword_58D710;
extern int& dword_58D714;
extern u8(&byte_58D718)[8];
extern Position(&startPositions)[8];
extern int(&TriggerSwitches)[8];
extern Location(&LocationTable)[254];
extern char(&byte_58F038)[20];
extern int& TimerIsPaused;
extern TechBW(&TechAvailableBW)[12];
extern TechBW(&TechResearchBW)[12];
extern u8(&ResearchProgress)[72];
extern UpgradesBW(&UpgradeMaxBW)[12];
extern UpgradesBW(&UpgradeLevelBW)[12];
extern u8(&UpgradeProgress)[96];
extern char& IsExpansion;
extern int& dword_58F442;
extern int& dword_58F446;
extern int& dword_5967F0;
extern GameData& gameData;
extern int& isHost;
extern Char4& NetMode;
extern MapDownload *& map_download;
extern char& byte_596894;
extern HACCEL& DlgAccelerator;
extern InputProcedure(&input_procedures)[19];
extern int& dword_5968EC;
extern HACCEL& hAccel;
extern HACCEL& dword_5968F4;
extern HACCEL& dword_5968F8;
extern InputProcedure& AcceleratorTables;
extern GamePosition& gwGameMode;
extern char(&byte_596910)[260];
extern int& dword_596A14;
extern char(&is_keycode_used)[256];
extern dialog *& dlg;
extern grpHead *(&cursor_graphics)[19];
extern int& possible_gamescreen_y_min;
extern CursorType& last_cursor_type;
extern int& possible_gamescreen_y_max;
extern LPTOP_LEVEL_EXCEPTION_FILTER& lpTopLevelExceptionFilter;
extern int(&dword_596B7C)[12];
extern int& dword_596BAC;
extern int& dword_596BB0;
extern int& dword_596BB4;
extern int& dword_596BB8;
extern GameActionDataBlock *& replayData;
extern HANDLE& mapArchiveHandle;
extern char(&byte_596BC8)[260];
extern int& has_effects_scode_maybe;
extern grpHead *& dword_596CD0;
extern int& dword_596CD4;
extern UnitProperties(&stru_596CD8)[64];
extern int& dword_5971D8;
extern int& dword_5971DC;
extern int& dword_5971E0;
extern int(&player_left)[8];
extern int& game_result_reported_maybe;
extern CUnit *(&ClientSelectionGroup)[12];
extern BltMask *& MainBltMask;
extern char& byte_59723C;
extern char& ClientSelectionCount;
extern Bitmap& GameScreenConsole;
extern CUnit *& ActivePortraitUnit;
extern CUnit *(&dword_59724C)[12];
extern int& dword_59727C;
extern char& byte_597280;
extern dialog *& statlb_Dlg;
extern int& dword_597288;
extern char& byte_59728C;
extern char(&byte_597290)[128];
extern char(&byte_597310)[128];
extern int& dword_597390;
extern grpHead *& last_cursor;
extern int& dword_597398;
extern char(&byte_5973A0)[3840];
extern char(&byte_5982A0)[768];
extern char(&byte_5985A0)[3328];
extern char(&byte_5992A0)[256];
extern void *& dword_5993A0;
extern int& dword_5993A4;
extern TileID *& ZergCreepArray;
extern int& dword_5993AC;
extern RECT& game_screen_pos;
extern unsigned int& dword_5993C0;
extern TileID *& MapTileArray;
extern int& TileSetMapSize;
extern MegatileFlags *& megatile_default_flags;
extern MiniTileMaps_type *& MiniTileFlags;
extern StringTbl& MapStringTbl;
extern char(&byte_5993D8)[256];
extern size_t& chk_string_section_size;
extern int& dword_5994DC;
extern PALETTEENTRY(&palette)[256];
extern __int16& megatileCount;
extern unsigned int& ThreadId;
extern int& dword_5998E8;
extern struct_6(&stru_5998F0)[8];
extern void *& dword_5999B0;
extern int& dword_5999B4;
extern char& byte_5999B8;
extern MenuPosition& glGluesRelated_maybe;
extern dialog *& dword_5999C0;
extern dialog *& gluLogin_Dlg;
extern int& dword_5999C8;
extern int& dword_5999CC;
extern int& dword_5999D0;
extern int& update_lobby_glue;
extern int& dword_5999D8;
extern int& dword_5999DC;
extern GluAllTblEntry& dword_5999E0;
extern dialog *& dword_5999E4;
extern int& dword_5999E8;
extern dialog *& dword_5999EC;
extern GameData& stru_5999F0;
extern dialog *& gluJoin_Dlg;
extern int& dword_599A84;
extern int& dword_599A88;
extern char(&byte_599A90)[256];
extern Bitmap& p_hist_pcx;
extern char(&byte_599B98)[256];
extern char(&byte_599C98)[256];
extern int& dword_599D98;
extern dialog *& glu_load_Dlg;
extern dialog *& dword_599DA0;
extern char(&byte_599DA4)[28];
extern int& dword_599DC0;
extern char(&byte_599DC8)[256];
extern CHAR(&dword_599EC8)[];
extern int& dword_599ECC;
extern int& dword_599ED0;
extern int& dword_599ED4;
extern char& byte_599ED8;
extern char(&byte_599FD0)[256];
extern unsigned int& dword_59A0D0;
extern int(&dword_59A0D4)[3];
extern int& dword_59A0E0;
extern int(&dword_59A0E4)[];
extern int& dword_59A0E8;
extern int& dword_59A0EC;
extern struc_59A0F0(&stru_59A0F0)[8];
extern _DWORD& dword_59B3D0;
extern struct_v0(&byte_59B3D8)[8];
extern int(&dword_59B410)[];
extern int(&dword_59B414)[];
extern int(&dword_59B418)[];
extern char(&byte_59B41C)[508];
extern int& dword_59B618;
extern int& dword_59B61C;
extern dialog *& gluScore_Dlg;
extern int& dword_59B624;
extern char(&byte_59B628)[260];
extern void *& iscore_grp;
extern char(&byte_59B730)[12];
extern int(&dword_59B73C)[8];
extern int& dword_59B75C;
extern int(&dword_59B760)[3];
extern int& dword_59B76C;
extern char(&byte_59B770)[32];
extern GameData& stru_59B790;
extern int& dword_59B820;
extern int& dword_59B824;
extern int& dword_59B828;
extern int& dword_59B82C;
extern int (*&dword_59B830)(void);
extern int& dword_59B834;
extern dialog *& glu_modem_status_Dlg;
extern int& dword_59B83C;
extern dialog *& custom_game_slots;
extern int& dword_59B844;
extern int& dword_59B848;
extern char(&menuMapRelativePath)[260];
extern char(&byte_59B958)[260];
extern __int16& selectedGameTypeParam;
extern void *& dword_59BA60;
extern GameType& selectedGameType;
extern char& byte_59BA65;
extern char(&byte_59BA68)[260];
extern char& byte_59BB6C;
extern char(&CurrentMapFolder)[260];
extern dialog *& custom_game_submode;
extern dialog *& map_listbox;
extern dialog *& custom_game_mode;
extern char(&menuMapFileName)[260];
extern int& dword_59BD8C;
extern HGDIOBJ& ho;
extern int& dword_59BD94;
extern HGDIOBJ& dword_59BD98;
extern void *& dword_59BD9C;
extern int& dword_59BDA0;
extern int& dword_59BDA4;
extern byte(&playerForce)[8];
extern PlayerInfo(&LobbyPlayers)[12];
extern int(&dword_59BF60)[];
extern int(&dword_59BF64)[];
extern PlayerInfo& dword_59BF68;
extern int& dword_59BF6C;
extern MapDirEntry *& replay;
extern char(&top_map_listing_dir)[260];
extern char *(&MapdataFilenames)[65];
extern __int16& word_59C184;
extern void (__cdecl *&minimapVisionUpdate)();
extern Bitmap& minimap_surface_no_fog;
extern Bitmap& minimap_surface;
extern __int16& word_59C19C;
extern void (__cdecl *&minimapSurfaceUpdate)();
extern dialog *& dword_59C1A4;
extern int& dword_59C1A8;
extern void *& blink_grp;
extern __int16& word_59C1B0;
extern MinimapSurfaceInfoRelated(&stru_59C1B8)[16];
extern int& dword_59C2B8;
extern char(&byte_59C2C0)[];
extern char(&byte_59C3C0)[256];
extern char(&byte_59C4C0)[256];
extern char(&byte_59C5C0)[256];
extern PALETTEENTRY(&stru_59C6C0)[256];
extern byte(&byte_59CAC0)[152];
extern bool& HasMegatileUpdate;
extern dialog *& minimap_Dlg;
extern char(&byte_59CB60)[];
extern int(&dword_59CB64)[];
extern dialog *& minimap_dialog;
extern int& minimap_surface_height;
extern __int16& word_59CC68;
extern __int16& word_59CC6C;
extern __int16& word_59CC70;
extern int& minimap_surface_width;
extern int& countdownTimeRemaining;
extern int& dword_59CC7C;
extern unsigned int& dword_59CC80;
extern int& dword_59CC84;
extern int& countdownTimeTickCount_0;
extern int& dword_59CC8C;
extern int& dword_59CC90;
extern int& dword_59CC94;
extern CUnit *& dword_59CC98;
extern CUnit *& UnitNodeList_VisibleUnit_Last;
extern WORD& error_message;
extern int& dword_59CCA4;
extern CUnit(&UnitNodeTable)[1700];
extern int& dword_6283E8;
extern CUnit *& UnitNodeList_HiddenUnit_First;
extern int& UnitNodeTable_UsedNodeCount;
extern CUnit *& UnitNodeList_ScannerSweep_First;
extern CUnit *(&UnitNodeList_PlayerFirstUnit)[12];
extern CUnit *& dword_628428;
extern CUnit *& UnitNodeList_HiddenUnit_Last;
extern CUnit *& UnitNodeList_VisibleUnit_First;
extern CUnit *& UnitNodeList_ScannerSweep_Last;
extern CUnit *& UnitNodeList_UnusedUnit_First_maybe;
extern CUnit *& UnitNodeList_UnusedUnit_Last_maybe;
extern vr4entry *& VR4Data;
extern int& ScreenX;
extern int& map_width_pixels;
extern byte *& GameTerrainCache;
extern vx4entry *& VX4Data;
extern int(&dword_62846C)[];
extern int& ScreenY;
extern int(&dword_628484)[];
extern int(&dword_628488)[];
extern unsigned int& MoveToX;
extern int& parallaxSomethingWidth;
extern __int16 *& CellMap;
extern int& unknown_x_tile;
extern int& parallaxSomethingHeight;
extern __int16& move_area;
extern __int16& word_6284A2;
extern __int16& word_6284A4;
extern __int16& word_6284A6;
extern unsigned int& MoveToY;
extern int& unknown_y_tile;
extern int& unknown_y_pixel;
extern int& map_height_pixels;
extern CUnit *(&PlayerSelection)[12];
extern CUnit *(&playersSelections)[8][12];
extern char(&validation_replay_path)[3072];
extern char(&league_maybe)[30];
extern SpriteTileData& SpritesOnTileRow;
extern char(&byte_629A88)[520];
extern char(&byte_629C90)[256];
extern int(&dword_629D74)[];
extern int& dword_629D90;
extern CSprite(&SpriteTable)[2500];
extern int& dword_63FD28;
extern char(&byte_63FD30)[256];
extern __int16(&word_63FE2C)[];
extern CSprite *& UnusedSprites;
extern CSprite *& dword_63FE34;
extern char& byte_63FE38;
extern unsigned __int16(&word_63FE40)[1][8];
extern char& byte_63FEC0;
extern char& byte_63FEC1;
extern char& byte_63FEC2;
extern __int16& word_63FEC4;
extern CUnit *& dword_63FEC8;
extern int& dword_63FECC;
extern __int16& word_63FED0;
extern int& dword_63FED4;
extern int& dword_63FED8;
extern int(&dword_63FEE0)[];
extern int(&dword_63FEE4)[];
extern int(&dword_63FEEC)[];
extern int& dword_63FEF4;
extern int& dword_63FF2C;
extern char& byte_63FF30;
extern CUnit *& dword_63FF34;
extern CUnit *& dword_63FF38;
extern CUnit *& dword_63FF3C;
extern int& dword_63FF40;
extern int& CanUpdatePoweredStatus;
extern int& dword_63FF48;
extern int& dword_63FF4C;
extern int& units_recalled;
extern CUnit *& UnitNodeList_PsiFieldProvider_First;
extern int& dword_63FF58;
extern CUnit *& dword_63FF5C;
extern char(&byte_63FF60)[];
extern char(&byte_63FF61)[];
extern char(&byte_63FF62)[];
extern char(&byte_63FF63)[];
extern PlayerAlliance& stru_63FF64;
extern char& byte_63FF70;
extern __int16& word_63FF74;
extern u16(&terran_sfx_related)[413];
extern u16(&zerg_sfx_related)[327];
extern int& selectionSoundCounter;
extern u16(&protoss_sfx_related)[396];
extern int& dword_64086C;
extern int& dword_640870;
extern int& dword_640874;
extern int& dword_640878;
extern int& dword_64087C;
extern int& is_placing_building;
extern int& isPlacingAddon;
extern UnitType& placeBuildBaseType;
extern UnitType& placeBuildingUnitType;
extern char& _placementRelated;
extern Order& byte_64088D;
extern Position& placeBuilding;
extern struc_640898(&stru_640898)[2];
extern char(&byte_6408F8)[96];
extern int& placeBuildingMessageId;
extern Bitmap(&placement_boxes)[2];
extern unsigned __int16& word_64096C;
extern PlayerInfo(&playerReplayWatchers)[12];
extern int& Chat_IncrementY;
extern int(&chat_line_expiration)[12];
extern int& info_message_remove_tick;
extern u8& Chat_NextLine;
extern Chat_TextLine(&Chat_GameText)[13];
extern u8(&Chat_ColorBytes)[13];
extern char(&Chat_LineFlags)[13];
extern char(&tritarget_command_args)[3];
extern char& is_placing_order;
extern int& COrderCount;
extern COrder *& dword_64B2E0;
extern COrder *& dword_64B2E4;
extern CBullet(&BulletNodeTable)[100];
extern int& dword_64DEA8;
extern CBullet *& BulletNodeTable_LastElement;
extern CUnit *& dword_64DEB0;
extern int& unknown_air_splash_related_unit_count;
extern int& isInGroundSplashProc;
extern int& bullet_count;
extern int& dword_64DEC0;
extern CBullet *& BulletNodeTable_FirstElement;
extern struc_64DEC8(&stru_64DEC8)[32];
extern int& dword_64EEC8;
extern CUnit *& bulletBounceMissileSource;
extern CUnit *& bulletBounceMissileTarget;
extern CUnit *& bulletBounceMissileNext;
extern CBullet *& first_free_bullet;
extern CBullet *& last_free_bullet;
extern CUnit& target;
extern __int16& word_650970;
extern EndgameState(&endgame_state)[8];
extern __int16& word_65097C;
extern int(&dword_650980)[8];
extern __int16& word_6509A0;
extern char(&active_players)[8];
extern TriggerListEntry *& dword_6509AC;
extern int& active_trigger_player;
extern char& byte_6509B4;
extern _BYTE(&byte_6509B8)[8];
extern __int16& word_6509C0;
extern int& IS_GAME_PAUSED;
extern int(&dword_6509C8)[];
extern __int16& word_6509CC;
extern __int16& word_6509CE;
extern CThingy *& dword_6509D0;
extern CThingy(&stru_6509D8)[500];
extern CThingy *& ThingyList_UsedFirst;
extern CThingy *& dword_65291C;
extern bool& wantThingyUpdate;
extern CThingy(&stru_652928)[500];
extern CThingy *& dword_654868;
extern CThingy *& dword_65486C;
extern CThingy *& dword_654870;
extern CThingy *& first_lone_sprite;
extern CThingy *& dword_654878;
extern CThingy *& dword_65487C;
extern char(&TurnBuffer)[512];
extern int(&arraydatabytes)[8];
extern unsigned int& sgdwBytesInCmdQueue;
extern int(&dword_654AA8)[512];
extern int& dword_6552A8;
extern u8(&dest)[512];
extern char& byte_6554B0;
extern int(&arraydata)[9];
extern char(&byte_6554D8)[512];
extern int& dword_6556D8;
extern int& dword_6556DC;
extern int& InGame;
extern int& Latency;
extern int& dword_6556E8;
extern void (__fastcall *&GameScreenLClickEvent)(dlgEvent *);
extern void (__fastcall *&GameScreenRClickEvent)(dlgEvent *);
extern int& dword_6556F4;
extern int& dword_6556F8;
extern CursorType& word_6556FC;
extern char(&Upgrade_MaxRepeats)[61];
extern __int16(&Upgrade_MineralCostBase)[61];
extern __int16(&Upgrade_GasCostFactor)[61];
extern __int16(&Upgrade_GasCostBase)[61];
extern __int16(&Upgrade_Unknown)[61];
extern __int16(&Upgrade_TimeCostFactor)[61];
extern __int16(&Upgrade_MineralCostFactor)[61];
extern __int16(&Upgrade_Label)[61];
extern __int16(&Upgrade_Icon)[61];
extern char(&Upgrade_IsBroodWarPnly)[61];
extern __int16(&Upgrade_TimeCostBase)[61];
extern char(&Upgrade_Race)[61];
extern int& dword_655C3C;
extern Bitmap& stru_655C40;
extern int& dword_655C48;
extern bounds& stru_655C4C;
extern int(&dword_655C58)[110];
extern char(&byte_655E10)[110];
extern int(&dword_655E80)[110];
extern char(&byte_656038)[110];
extern char(&byte_6560A8)[110];
extern char(&byte_656118)[110];
extern int& dword_656188;
extern int& dword_65618C;
extern int& dword_656190;
extern __int16(&Tech_Unknown)[44];
extern __int16(&Tech_GasCost)[44];
extern __int16(&Tech_MineralCost)[44];
extern __int16(&Tech_LabelIndex)[44];
extern __int16(&Tech_Unknown2)[44];
extern __int16(&Tech_EnergyCost)[44];
extern __int16(&Tech_ResearchTime)[44];
extern __int16(&Tech_Icon)[44];
extern u8(&Weapon_DamageFactor)[130];
extern u16(&Weapon_TargetErrorMessage)[130];
extern WeaponBehavior(&Weapon_Behavior)[130];
extern ExplosionType(&Weapon_ExplosionType)[130];
extern u16(&Weapon_Icon)[130];
extern unsigned __int16(&Weapon_InnerSplashRadius)[130];
extern u8(&Weapon_AttackDirection)[130];
extern int(&Weapon_MinRange)[130];
extern u8(&Weapon_YOffset)[130];
extern int(&Weapon_Graphic)[130];
extern u16(&Weapon_DamageAmount)[130];
extern u8(&Weapon_DamageCooldown)[130];
extern char(&Weapon_RemoveAfter)[130];
extern __int16(&Weapon_MedianSplashRadius)[130];
extern char(&Weapon_Upgrade)[130];
extern DamageType(&Weapon_DamageType)[130];
extern __int16(&Weapon_Label)[130];
extern char(&Weapon_TechHint)[130];
extern int(&Weapon_MaxRange)[130];
extern __int16(&Weapon_DamageBonus)[130];
extern u16(&Weapon_OuterSplashRadius)[132];
extern u8(&Weapon_LaunchSpin)[130];
extern u8(&Weapon_XOffset)[130];
extern WeaponTargetFlags(&Weapon_TargetFlags)[130];
extern char& byte_657A9C;
extern int(&dword_657AA0)[1024];
extern int& dword_658AA0;
extern int (*&dword_658AA4)(void);
extern int& dword_658AA8;
extern int& dword_658AAC;
extern int& dword_658AB0;
extern int& dword_658AB4;
extern int& dword_658AB8;
extern int& dword_658ABC;
extern char& byte_658AC0;
extern int(&spkLayer)[5];
extern void *& spkHandle;
extern void *& dword_658ADC;
extern int& dword_658AE0;
extern int& dword_658AE4;
extern int(&dword_658AE8)[];
extern int& dword_658AEC;
extern int& dword_658AF0;
extern int& dword_658AF4;
extern int& dword_658AF8;
extern int& dword_658AFC;
extern int& dword_658B00;
extern int& dword_658B04;
extern int& dword_658B08;
extern int& dword_658B0C;
extern int(&dword_658B10)[1024];
extern struc_659B10(&stru_659B10)[1024];
extern int& dword_65EB10;
extern int& dword_65EB14;
extern int& dword_65EB18;
extern int& dword_65EB1C;
extern int& dword_65EB20;
extern __int16& word_65EB26;
extern int& dword_65EB28;
extern char& byte_65EB2C;
extern char& byte_65EB2D;
extern char& byte_65EB2E;
extern __int16(&word_65EB30)[];
extern char(&byte_65EB32)[];
extern char(&byte_65EB34)[];
extern int& IsMultiplayer;
extern int& dword_65FBF4;
extern int& dword_65FBF8;
extern int& dword_65FBFC;
extern int& dword_65FC00;
extern int& dword_65FC04;
extern int& dword_65FC08;
extern int& dword_65FC0C;
extern char& byte_65FC10;
extern char& byte_65FC11;
extern u8(&Unit_MaxAirHits)[228];
extern u16(&Unit_GasCost)[228];
extern u8(&Unit_ArmorAmount)[228];
extern char(&byte_65FFAC)[];
extern u16(&Unit_FirstWhatSound)[228];
extern u8(&Unit_AIInterval)[228];
extern u16(&Unit_MapStringID)[228];
extern u16(&Unit_TimeCost)[228];
extern u8(&Unit_Direction)[228];
extern u8(&Unit_BroodwarOnly)[228];
extern __int16(&Unit_SubUnit)[228];
extern u8(&Unit_SpaceProvided)[228];
extern u16(&Unit_Requirements)[228];
extern u16(&Unit_SubUnit2)[228];
extern u16(&Unit_MaxShieldPoints)[228];
extern u8(&Unit_Unknown)[228];
extern u32(&Unit_ConstructionAnimation)[228];
extern u16(&Unit_LastYesSound)[106];
extern u16(&Unit_AvailabilityFlags)[228];
extern WeaponType(&Unit_AirWeapon)[228];
extern UnitDimentions(&Unit_Dimensions)[228];
extern u16(&Unit_LastAnnoyedSound)[106];
extern u16(&Unit_ReadySound)[106];
extern u8(&Unit_RightClickAction)[228];
extern u8(&Unit_SizeType)[228];
extern Order(&Unit_HumanAiIdleOrder)[228];
extern u32(&Unit_MaxHitPoints)[228];
extern points(&Unit_AddonOffset)[96];
extern points(&Unit_Placement)[228];
extern u16(&Unit_LastWhatSound)[228];
extern u8(&Unit_SeekRange)[228];
extern Order(&Unit_ComputerAiIdleOrder)[228];
extern u16(&Unit_IdlePortrait)[228];
extern u8(&Unit_Elevation)[228];
extern u8(&Unit_SightRange)[228];
extern Order(&Unit_AttackUnitOrder)[228];
extern char& byte_66333E;
extern Order& order_id;
extern char& byte_663369;
extern char& byte_663375;
extern u16(&Unit_BuildScore)[228];
extern u8(&Unit_ArmorUpgrade)[228];
extern WeaponType(&Unit_GroundWeapon)[228];
extern u8(&Unit_GroupFlags)[228];
extern u16(&Unit_MineralCost)[228];
extern u8(&Unit_AttackMoveOrder)[228];
extern u16(&Unit_FirstAnnoyedSound)[106];
extern u16(&Unit_FirstYesSound)[106];
extern u8(&Unit_SupplyRequired)[228];
extern u8(&Unit_SubLabel)[228];
extern u16(&Unit_DestroyScore)[228];
extern UnitPrototypeFlags(&Unit_PrototypeFlags)[228];
extern u8(&Unit_SpaceRequired)[228];
extern FlingyID(&Unit_Graphic)[228];
extern u8(&Unit_MaxGroundHits)[228];
extern u8(&Unit_SupplyProvided)[228];
extern u8(&Unit_ShieldsEnabled)[228];
extern Order(&Unit_ReturnToIdleOrder)[228];
extern u16(&Units_InfestChangeUnit)[96];
extern char(&Orders_Unknown4)[189];
extern char(&Orders_UseWeaponTargeting)[189];
extern char(&Orders_Unused12)[189];
extern char(&Orders_Unknown11)[189];
extern char(&Orders_IscriptAnimation)[189];
extern Tech(&Orders_TechUsed)[189];
extern __int16(&Orders_HilightedIcon)[189];
extern char(&Orders_CanBeInterrupted)[189];
extern char(&Orders_Unknown7)[189];
extern char(&Orders_Unknown9)[189];
extern __int16(&Orders_Label)[189];
extern Order(&Orders_ObscuredOrder)[189];
extern char(&Orders_CanBeObstructed)[189];
extern __int16(&Orders_Unknown17)[189];
extern char(&Orders_CanBeQueued)[189];
extern char(&Orders_Unused5)[189];
extern WeaponType(&Orders_TargetingWeapon)[189];
extern char(&Orders_Unused2)[189];
extern char(&Orders_Unused3)[189];
extern char(&Sprites_SelectionCircle)[387];
extern char(&Sprites_IsVisible)[517];
extern char(&Sprites_HealthBarSize)[387];
extern char(&Sprites_SelectionCircleVPos)[387];
extern unsigned __int16(&Sprites_Image)[517];
extern char(&Sprites_Unknown)[517];
extern int(&Images_LandingDustLO)[999];
extern u8(&Image_DrawIfCloaked)[999];
extern int(&Images_SpecialOverlayLO)[999];
extern int(&Images_GrpFile)[999];
extern u8(&Images_Remapping)[999];
extern RLEType(&Image_DrawFunction)[999];
extern int(&Images_InjuryOverlayLO)[999];
extern int(&Images_AttackOverlayLO)[999];
extern u8(&Images_IsClickable)[999];
extern int(&Images_ShieldOverlayLO)[999];
extern u8(&Images_UseFullIscript)[999];
extern int(&Images_LiftOffDustLO)[999];
extern u8(&Images_IsTurnable)[999];
extern int(&Images_IscriptEntry)[999];
extern char(&byte_66FBE4)[18];
extern char& byte_66FBF6;
extern char& countdown_seconds;
extern char& countdown_finished_maybe;
extern char& download_percentage;
extern unsigned __int8& gameState;
extern int& countdownTimerInterval;
extern int (__stdcall *&SendMapDlCommand)(_DWORD, _DWORD, _DWORD);
extern char(&mapsFolder)[264];
extern char(&byte_66FD10)[260];
extern char& byte_66FE14;
extern int& dword_66FE18;
extern char& byte_66FE1C;
extern struc_66FE20(&stru_66FE20)[8];
extern int& dword_66FF30;
extern u8(&byte_66FF34)[8];
extern int& dword_66FF3C;
extern int& dword_66FF40;
extern int& dword_66FF44;
extern int& dword_66FF48;
extern pt& stru_66FF4C;
extern Box16& stru_66FF50;
extern int& dword_66FF58;
extern char& byte_66FF5C;
extern int& dword_66FF60;
extern Bitmap& stru_66FF64;
extern dialog *& dword_66FF6C;
extern int& dword_66FF70;
extern int(&UnitOrderingCount)[];
extern UnitFinderData(&UnitOrderingX)[3400];
extern UnitFinderData(&UnitOrderingY)[3400];
extern char& byte_67D3F8;
extern _DWORD(&dword_67D400)[8002];
extern int(&dword_685108)[];
extern int(&dword_68510C)[];
extern int& dword_685110;
extern int& dword_685114;
extern int& dword_685118;
extern int& dword_68511C;
extern int& dword_685120;
extern int& dword_685124;
extern int& dword_685128;
extern int& dword_68512C;
extern int& dword_685130;
extern int& dword_685134;
extern int& dword_685138;
extern int& dword_68513C;
extern int& dword_685140;
extern int& dword_685144;
extern char(&SaveGameFile)[28];
extern int& dword_685164;
extern unsigned __int16& word_685168;
extern char& byte_68516A;
extern int& dword_68516C;
extern void *& dword_685170;
extern int& dword_685174;
extern int& dword_685178;
extern int& dword_68517C;
extern char& byte_685180;
extern int(&completed_unit_counts_at_location)[228][12];
extern int(&all_unit_counts_at_location)[228][12];
extern int(&all_unit_counts)[12];
extern int(&dword_68A738)[72];
extern int(&dword_68A858)[12];
extern int(&dword_68A888)[72];
extern int(&dword_68A9A8)[12];
extern int(&dword_68A9D8)[156];
extern char& byte_68AC48;
extern int& dword_68AC4C;
extern BYTE *(&dword_68AC50)[4];
extern int& dword_68AC60;
extern int& dword_68AC64;
extern int& dword_68AC68;
extern int& dword_68AC6C;
extern int& dword_68AC70;
extern char& CanUpdateSelectedUnitPortrait;
extern Bitmap& stru_68AC78;
extern Bitmap& stru_68AC80;
extern const char *& dword_68AC88;
extern dialog *& statport_Dlg;
extern int& dword_68AC90;
extern int& dword_68AC94;
extern dialog *& dword_68AC98;
extern char& byte_68AC9C;
extern int& dword_68ACA0;
extern _DWORD& seg_68ACA8;
extern int& dword_68C0FC;
extern _DWORD& dword_68C100;
extern void *& aiscript_bin_data;
extern void *& aiscript_bin;
extern char(&buff)[52];
extern dialog *& textbox_bin;
extern char& byte_68C144;
extern dialog *& current_dialog;
extern __int16& word_68C14C;
extern char(&byte_68C150)[96];
extern int& CanUpdateCurrentButtonSet;
extern dialog *& current_cmdbtn_tooltip_control;
extern char& byte_68C1B8;
extern __int16& word_68C1BC;
extern void *& cmdbtns_grp;
extern __int16& word_68C1C4;
extern __int16& word_68C1C8;
extern __int16& word_68C1CC;
extern __int16(&word_68C1D0)[];
extern __int16& word_68C1D2;
extern __int16& word_68C1D4;
extern __int16& word_68C1D6;
extern __int16& word_68C1D8;
extern __int16& word_68C1DA;
extern __int16& word_68C1DC;
extern __int16& word_68C1DE;
extern void *& cmdicons_grp;
extern char& byte_68C1E4;
extern char& statusScreenFunc;
extern dialog *& ctrl_under_mouse;
extern StatDataDescriptor *& ctrl_under_mouse_val;
extern dialog *& stardata_Dlg;
extern grpHead *& dword_68C1F4;
extern char& CanUpdateStatDataDialog;
extern grpHead *& dword_68C1FC;
extern dialog *& dword_68C200;
extern void *& wirefram_grp;
extern char(&byte_68C208)[];
extern char(&byteShieldStr)[22];
extern dialog *& dword_68C220;
extern dialog *& stat_f10_Dlg;
extern RaceId& statfluf_current_race;
extern int& dword_68C22C;
extern int& dword_68C230;
extern dialog *& statres_Dlg;
extern void *& game_icons_grp;
extern char(&byte_68C23C)[4];
extern char(&byte_68C240)[192];
extern Order& byte_68C300;
extern int& dword_68C308;
extern int& dword_68C30C;
extern int& dword_68C310;
extern int& dword_68C314;
extern int& dword_68C318;
extern int& dword_68C31C;
extern int& dword_68C320;
extern int& dword_68C324;
extern int& dword_68C328;
extern int& dword_68C32C;
extern int& dword_68C330;
extern int& dword_68C334;
extern int& dword_68C338;
extern int& dword_68C33C;
extern int& dword_68C340;
extern int& dword_68C344;
extern char(&byte_68C348)[32];
extern char(&byte_68C368)[32];
extern char(&byte_68C388)[32];
extern char(&byte_68C3A8)[32];
extern char(&byte_68C3C8)[32];
extern char(&byte_68C3E8)[32];
extern char(&byte_68C408)[32];
extern char(&byte_68C428)[32];
extern char(&SFXData_MuteVolume)[1144];
extern char(&SFXData_Flags2)[1144];
extern __int16(&SFXData_Race)[1144];
extern char(&SFXData_Flags1)[1144];
extern char *(&SFXData_SoundFile)[1144];
extern dialog *& dlgFatal_Dlg;
extern char *& dword_68EC84;
extern char *& dword_68EC88;
extern BNetGateways& bnet_gateways;
extern int& dword_68ECAC;
extern LobbySlot(&lobby_slots)[12];
extern int& dword_68F4F0;
extern int& dword_68F4F4;
extern int& dword_68F4F8;
extern int(&PlayerDownloadStatus)[8];
extern int& dword_68F500;
extern int& dword_68F504;
extern int& dword_68F508;
extern int& dword_68F50C;
extern int& dword_68F510;
extern int& dword_68F514;
extern int& dword_68F518;
extern int& dword_68F51C;
extern int& dword_68F520;
extern void *& dword_68F524;
extern int(&dword_68F528)[4];
extern Bitmap(&stru_68F538)[4];
extern WORD *& portdata_tbl;
extern Bitmap(&stru_68F55C)[4];
extern CheatHashRelated(&stru_68F580)[6];
extern LPARAM& dword_68F6B8;
extern void *& dword_68F6BC;
extern void *& dword_68F6C0;
extern int& dword_68F6C4;
extern HGDIOBJ& dword_68F6C8;
extern int& dword_68F6CC;
extern int& dword_68F6D0;
extern void *& dword_68F6D4;
extern char *& dword_68F6D8;
extern void *& dword_68F6DC;
extern int (__stdcall *&dword_68F6E0)(_DWORD, _DWORD, _DWORD, _DWORD);
extern int& dword_68F6E4;
extern int& dword_68F6E8;
extern HGDIOBJ& dword_68F6EC;
extern HWND& dword_68F6F0;
extern HWND& dword_68F6F4;
extern int& dword_68F6F8;
extern __int16& dword_68F6FC;
extern char(&dword_68F700)[];
extern int& dword_68F704;
extern HWND& dword_68F708;
extern HWND& dword_68F70C;
extern char(&dword_68F710)[];
extern int& dword_68F714;
extern CHAR(&bnet_previous_map_dir)[260];
extern unsigned __int8(&byte_68F820)[260];
extern int& dword_68F924;
extern int& dword_68F928;
extern int& dword_68F92C;
extern int& dword_68F930;
extern int& dword_68F934;
extern int& dword_68F938;
extern int& dword_68F93C;
extern int& dword_68F940;
extern MapDirEntry *& bnet_selected_map_maybe;
extern char(&byte_68F948)[];
extern int& dword_68FA48;
extern int& bnet_browse_icons_dimensions;
extern int(&dword_68FA50)[3];
extern HWND& bnet_recent_maps_box;
extern HWND& dword_68FA60;
extern HWND& dword_68FA64;
extern char(&dword_68FA68)[];
extern int& dword_68FA6C;
extern char(&previous_selected_map)[260];
extern char& byte_68FC74;
extern HWND& dword_68FC78;
extern int(&bnet_browse_icons)[];
extern HWND& dword_68FC84;
extern char(&byte_68FC88)[256];
extern int& _10_wins_icon;
extern char(&byte_68FD90)[260];
extern HWND& hWnd;
extern HWND& dword_68FE98;
extern char(&dword_68FE9C)[];
extern int& dword_68FEA0;
extern GameType& template_id;
extern void *& dword_68FEA8;
extern int& dword_68FEAC;
extern int& dword_68FEB0;
extern int& dword_68FEB4;
extern int& dword_68FEB8;
extern int& dword_68FEBC;
extern int& dword_68FEC0;
extern void *& dword_68FEC4;
extern int& dword_68FEC8;
extern int& dword_68FECC;
extern WPARAM& wParam;
extern int& dword_68FED4;
extern HWND& hDlg;
extern LPCSTR& lpString;
extern int& dword_68FEE0;
extern int& dword_68FEE4;
extern AI_Main(&AIScriptController)[8];
extern int& dword_692628;
extern unsigned __int16(&word_69262C)[24];
extern int& dword_69265C;
extern int(&dword_692660)[];
extern int& dword_692684;
extern baseLocation(&Bases)[250];
extern int& dword_695568;
extern int& dword_69556C;
extern int(&dword_695570)[];
extern int& dword_695574;
extern int& dword_695578;
extern int& dword_69557C;
extern int& dword_695580;
extern int& dword_695584;
extern int& dword_695588;
extern int& dword_69558C;
extern int& dword_695590;
extern int(&dword_695594)[];
extern int& dword_695598;
extern int& dword_69559C;
extern int& dword_6955A0;
extern int& dword_6955A4;
extern int& dword_6955A8;
extern int& dword_6955AC;
extern int& dword_6955B0;
extern int& dword_6955B4;
extern int(&dword_6955B8)[];
extern unsigned int& dword_6955DC;
extern __int16& word_6955E0;
extern __int16& word_6955E2;
extern CUnit *& dword_6955E4;
extern int& dword_6955E8;
extern int(&dword_6955EC)[];
extern int& dword_6955F0;
extern int& dword_6955F4;
extern int& dword_6955F8;
extern int& dword_6955FC;
extern int& dword_695600;
extern WeaponType& tempWeapon;
extern int& dword_695608;
extern int& dword_69560C;
extern int(&dword_695610)[];
extern int& dword_695790;
extern int& dword_695794;
extern int& tempHPShields;
extern Position& stru_69579C;
extern int& dword_6957A0;
extern unsigned int& dword_6957A4;
extern int& dword_6957A8;
extern int& dword_6957AC;
extern int(&dword_6957B0)[8];
extern int& dword_6957D0;
extern int& dword_6957D4;
extern int& dword_6957D8;
extern unsigned int(&dword_6957E0)[5001];
extern AiCaptain *(&AiRegionCaptains)[1];
extern char(&byte_69A628)[19988];
extern int(&dword_69F448)[];
extern int& dword_69F44C;
extern int& dword_69F450;
extern int& dword_69F454;
extern int& dword_69F458;
extern int& dword_69F45C;
extern int& dword_69F460;
extern int& dword_69F464;
extern _DWORD(&dword_69F468)[742];
extern int& dword_6AA04C;
extern int(&AiDataList)[];
extern int(&dword_6AA054)[];
extern int& dword_6AA058;
extern int& dword_6AA05C;
extern int& dword_6AA060;
extern int& dword_6AA064;
extern int& dword_6AA068;
extern int& dword_6AA06C;
extern int& dword_6AA070;
extern int& dword_6AA074;
extern int& dword_6AA078;
extern int& dword_6AA07C;
extern int& dword_6AA080;
extern int& dword_6AA084;
extern int& dword_6AA088;
extern int& dword_6AA08C;
extern _DWORD(&AiArray)[11502];
extern _DWORD(&dword_6B5448)[6001];
extern int(&dword_6BB20C)[];
extern int(&unit_air_strengths)[227];
extern int(&dword_6BB59C)[];
extern int(&unit_ground_strengths)[228];
extern int& MaxUnitHeight;
extern CUnit *(&tempUnitsListsArray)[1701];
extern int(&dword_6BD3D0)[1701];
extern int& tempUnitsListCurrentArrayCount;
extern int& MaxUnitWidth;
extern int(&tempUnitsListArraysCountsListLastIndex)[];
extern int(&tempUnitsListArraysCountsList)[];
extern int& dword_6BEE74;
extern int& dword_6BEE78;
extern int& dword_6BEE7C;
extern int& dword_6BEE80;
extern int& dword_6BEE84;
extern CUnit *& dword_6BEE88;
extern void *& dword_6BEE8C;
extern Position& stru_6BEE90;
extern __int16& word_6BEE94;
extern char& byte_6BEE96;
extern char& byte_6BEE97;
extern char& byte_6BEE98;
extern char& byte_6BEE99;
extern char& byte_6BEE9A;
extern char& byte_6BEE9B;
extern int& dword_6BEEA0;
extern int& dword_6BEEA4;
extern int& dword_6BEEA8;
extern int& dword_6BEEAC;
extern int& dword_6BEEB0;
extern int(&dword_6C0DD0)[];
extern Position *& dword_6C0DD4;
extern int& dword_6C102C;
extern int& dword_6C1030;
extern CUnit *& dword_6C1074;
extern int& dword_6C1078;
extern CUnit *& dword_6C107C;
extern rect& stru_6C1080;
extern __int16& word_6C10A8;
extern IScriptProgramState& program_state;
extern CSprite *(&dword_6C2318)[2500];
extern int& dword_6C4A28;
extern int& dword_6C4A2C;
extern int(&dword_6C4A30)[];
extern int(&dword_6C4A34)[];
extern int(&dword_6C4A38)[];
extern int& dword_6C4A3C;
extern u8(&Flingy_MovementControl)[209];
extern u32(&Flingy_HaltDistance)[209];
extern u16(&Flingy_Acceleration)[209];
extern u8(&Flingy_TurnSpeed)[209];
extern u32(&Flingy_TopSpeed)[209];
extern u8(&Flingy_Unused)[209];
extern u16(&Flingy_SpriteID)[209];
extern int(&AiSupplyReserved)[12];
extern int(&dword_6CA4EC)[12];
extern int(&dword_6CA51C)[12];
extern BYTE *& dword_6CA54C;
extern int(&seeds_maybe)[];
extern int(&dword_6CA554)[];
extern int(&dword_6CA558)[];
extern int(&dword_6CA55C)[];
extern int(&dword_6CA560)[];
extern int& dword_6CA564;
extern int& dword_6CA568;
extern char& byte_6CA664;
extern char(&byte_6CA668)[16];
extern char(&byte_6CA76C)[32];
extern char(&byte_6CA7A0)[100];
extern char(&byte_6CA818)[260];
extern char(&byte_6CA91C)[32];
extern int& suppliesAvailableTemp;
extern __int16& word_6CA940;
extern int(&selectionGroupHP)[];
extern int(&dword_6CA950)[];
extern int(&dword_6CA954)[];
extern int(&dword_6CA958)[];
extern int(&dword_6CA95C)[];
extern int(&dword_6CA960)[];
extern char(&byte_6CA988)[100];
extern int& userInterfaceShields;
extern char& redrawTransportUI;
extern char(&byte_6CA9F8)[260];
extern char(&byte_6CAB08)[260];
extern __int16& userInterfaceEnergy;
extern char(&byte_6CAC10)[104];
extern char(&byte_6CAC78)[260];
extern struct_a2_1& stru_6CAD98;
extern int& dword_6CAF94;
extern int& dword_6CAF98;
extern int(&dword_6CAFA0)[2688];
extern int& dword_6CD9A0;
extern int& dword_6CD9A4;
extern int& dword_6CDBA4;
extern int& dword_6CDBA8;
extern int& dword_6CDBAC;
extern RECT& screen;
extern int& InputFlags;
extern POINT& Mouse;
extern CHAR(&fatal_error_message)[512];
extern int& main_thread_id;
extern RegistryOptions& registry_options;
extern FontColorRelated& stru_6CE000;
extern fontMemStruct& gsFontMargins;
extern int& dword_6CE0D0;
extern char& byte_6CE0D4;
extern int& dword_6CE0D8;
extern int& dword_6CE0DC;
extern int& PrintXY_PositionY;
extern int& dword_6CE0E4;
extern int& dword_6CE0E8;
extern char& byte_6CE0EC;
extern char& byte_6CE0ED;
extern int& dword_6CE0F0;
extern Font *(&FontBase)[4];
extern char& text_input_position_char;
extern int& PrintXY_PositionX;
extern int& dword_6CE10C;
extern PrintFlags& PrintXY_flags;
extern char& byte_6CE111;
extern char(&byte_6CE118)[392];
extern CycleStruct(&cycle_colors)[8];
extern PALETTEENTRY(&GamePalette)[256];
extern PALETTEENTRY(&stru_6CE720)[256];
extern char(&byte_6CEB20)[];
extern char& byte_6CEB22;
extern char& byte_6CEB25;
extern char& byte_6CEB28;
extern int& dword_6CEB2C;
extern char& byte_6CEB30;
extern char& byte_6CEB31;
extern char& byte_6CEB32;
extern char& byte_6CEB33;
extern char& byte_6CEB34;
extern char& byte_6CEB39;
extern char(&byte_6CEB3D)[];
extern char(&byte_6CEB3E)[];
extern PALETTEENTRY(&stru_6CEB40)[256];
extern bounds& a3;
extern int& dword_6CEF4C;
extern layer(&ScreenLayers)[12];
extern Bitmap& GameScreenBuffer;
extern u8(&RefreshRegions)[1200];
extern Bitmap *& dword_6CF4A8;
extern char& DrawColor;
extern int& dword_6CF4B4;
extern dialog *& dword_6CF4BC;
extern RECT& eax0;
extern dialog *& current_dropdown_maybe;
extern __int16& word_6D04B4;
extern __int16& word_6D04B8;
extern int& dword_6D04BC;
extern __int16& word_6D04C0;
extern __int16& word_6D04C4;
extern unsigned __int16& dword_6D04C8;
extern int& dword_6D04CC;
extern __int16& word_6D04D0;
extern __int16& word_6D04D4;
extern __int16& word_6D04D8;
extern __int16& word_6D04DC;
extern int& dword_6D04E0;
extern __int16& word_6D04E4;
extern __int16& word_6D04E8;
extern int& dword_6D04EC;
extern int& dword_6D04F0;
extern int& dword_6D04F4;
extern __int16& word_6D04F8;
extern __int16& word_6D04FC;
extern __int16& word_6D0500;
extern __int16& word_6D0504;
extern __int16& word_6D0508;
extern int& dword_6D050C;
extern __int16& word_6D0510;
extern __int16& word_6D0514;
extern int& dword_6D0518;
extern int& LastControlID;
extern int& dword_6D0520;
extern __int16& word_6D0524;
extern int& dword_6D0528;
extern __int16& word_6D052C;
extern int& dword_6D0530;
extern __int16& word_6D0534;
extern dialog *& interrupting_child;
extern void *& unknown_palette_trans2;
extern HANDLE& dword_6D0540;
extern int& dword_6D0548;
extern int& dword_6D0550;
extern int& dword_6D0554;
extern int& dword_6D0558;
extern int& dword_6D055C;
extern int& dword_6D0560;
extern int& dword_6D0564;
extern int& dword_6D0568;
extern HANDLE& dword_6D0588;
extern int(&dword_6D058C)[];
extern int(&unknown_palette_trans3)[3];
extern int& dword_6D059C;
extern int& dword_6D05A0;
extern char& byte_6D05A4;
extern void *& unknown_palette_trans;
extern int& dword_6D05AC;
extern __int16& word_6D09B0;
extern char& byte_6D09B2;
extern _DWORD(&dword_6D09B8)[60];
extern int& dword_6D0AA8;
extern int& dword_6D0AF8;
extern char(&byte_6D0B50)[256];
extern char& byte_6D0C50;
extern __int16& last_deleted_timer;
extern dialog *& dword_6D0C58;
extern __int16& word_6D0C5C;
extern __int16& word_6D0C60;
extern grpHead *& TerrainGraphics;
extern TileID *& location;
extern int& dword_6D0C6C;
extern void (__stdcall *&dword_6D0C70)(_DWORD, _DWORD, _DWORD, TileID, RECT *);
extern int (__stdcall *&dword_6D0C74)(_DWORD, _DWORD);
extern int (__stdcall *&dword_6D0C78)(_DWORD, _DWORD);
extern int (__stdcall *&dword_6D0C7C)(_DWORD);
extern char(&byte_6D0C80)[512];
extern u8 *& CreepEdgeData;
extern TileID *& dword_6D0E84;
extern char(&byte_6D0E88)[128];
extern int& dword_6D0F08;
extern int& next_campaign_mission;
extern int& low_memory;
extern int& InReplay;
extern int& ReplayVision;
extern int& replayShowEntireMap;
extern int& scenarioChkSize;
extern void *& scenarioChk;
extern dialog *& savegame_Dlg;
extern HANDLE& dword_6D0F2C;
extern ReplayHeader& replay_header;
extern dialog *& dword_6D11AC;
extern int& is_replay_paused;
extern int& dword_6D11B4;
extern int& dword_6D11B8;
extern MenuPosition& glGluesMode;
extern int& OpheliaEnabled;
extern int& gluAllTblDataLoaded;
extern int& IsInGameLoop;
extern CampaignMenuEntry *& active_campaign_menu_entry;
extern char& byte_6D11D0;
extern int& dword_6D11D4;
extern int& dword_6D11D8;
extern int& dword_6D11DC;
extern int& is_expansion_installed;
extern int& dword_6D11E8;
extern char& GameState;
extern int& dword_6D11F0;
extern CUnit *& iscript_flingy;
extern CBullet *& iscript_bullet;
extern CUnit *& iscript_unit;
extern IScript *& iscript_data;
extern int& game_starting_maybe;
extern void (__cdecl *&dword_6D1208)();
extern HACCEL& hAccTable;
extern int& dword_6D1210;
extern char& byte_6D1214;
extern FILE *& loadGameFileHandle;
extern char& mapStarted;
extern WORD *& networkTable;
extern char& byte_6D1224;
extern char& byte_6D1225;
extern UnknownTilesetRelated1& no_color_cycle;
extern void (__fastcall *&active_menu_handler)(dialog *);
extern StringTbl& StatTxtTbl;
extern char *& okcancel_message;
extern char *& dword_6D1240;
extern int& dword_6D1244;
extern HANDLE& dword_6D1248;
extern int (__fastcall *&dword_6D124C)(__int16);
extern void *& dword_6D1250;
extern void *& dword_6D1254;
extern void *& dword_6D1258;
extern char *& dword_6D125C;
extern MegatileFlags *& active_tiles;
extern char& byte_6D1264;
extern char& byte_6D1265;
extern char& byte_6D1266;
extern IDirectSoundBuffer *& dword_6D1268;
extern struct_5(&stru_6D1270)[1144];
extern HMODULE& dsound_dll;
extern IDirectSound *& direct_sound;
extern IDirectSoundBuffer *& soundbuffer;
extern int& dword_6D59FC;
extern HANDLE& dword_6D5A00;
extern HANDLE& sound_thread_handle;
extern int& dword_6D5A08;
extern int& dword_6D5A0C;
extern char& outOfGame;
extern int& dword_6D5A14;
extern char *& dword_6D5A18;
extern char *& dword_6D5A1C;
extern int& dword_6D5A20;
extern dialog *& gluConn_Dlg;
extern Char4& network_provider_id;
extern Char4& network_provider_id_related;
extern dialog *& lobby_dlg;
extern int& dword_6D5A38;
extern dialog *& dword_6D5A3C;
extern FnInteract *& dword_6D5A40;
extern WORD *& dword_6D5A44;
extern CampaignMenuEntry *& campaign_menu_active_mission;
extern CampaignMenuEntry *& campaign_menu_active_campaign;
extern int& dword_6D5A50;
extern int& dword_6D5A54;
extern dialog *& dword_6D5A58;
extern FnInteract *& dword_6D5A5C;
extern int& dword_6D5A60;
extern int& game_id_hash;
extern int& saveLoadSuccess;
extern CheatFlags& GameCheats;
extern dialog *& gluCreateOrCustm_bin;
extern int& dword_6D5A74;
extern int& dword_6D5A78;
extern struct_v4_1 *& dword_6D5A7C;
extern struct_v4_1 *& dword_6D5A80;
extern struct_v4_1 *& dword_6D5A84;
extern struct_v4_1 *& dword_6D5A88;
extern struct_v4_1 *& dword_6D5A8C;
extern struct_v4_1 *& dword_6D5A90;
extern struct_v4_1 *& dword_6D5A94;
extern struct_v4_1 *& dword_6D5A98;
extern struct_v4_1 *& dword_6D5A9C;
extern struct_v4_1 *& dword_6D5AA0;
extern char& byte_6D5AA8;
extern HANDLE& directsound;
extern MusicTrack& current_music;
extern signed int& bigvolume;
extern int& dword_6D5BB8;
extern char& byte_6D5BBC;
extern char& byte_6D5BBD;
extern char& byte_6D5BBE;
extern char& byte_6D5BBF;
extern char& byte_6D5BC0;
extern char& byte_6D5BC1;
extern char& byte_6D5BC2;
extern dialog *& dword_6D5BC4;
extern int& isInGame;
extern int& elapstedTimeModifier;
extern int& dword_6D5BD0;
extern int& dword_6D5BD4;
extern void *& pylon_power_mask;
extern int& dword_6D5BDC;
extern int& lastRandSFX;
extern char& byte_6D5BE4;
extern int& dword_6D5BE8;
extern char& byte_6D5BEC;
extern char& byte_6D5BED;
extern _DWORD& dword_6D5BF0;
extern dialog *& GameMenuDlg;
extern int& dword_6D5BF8;
extern SAI_Paths *& SAIPathing;
extern DWORD& CpuThrottle;
extern Bitmap& stru_6D5C04;
extern void *& dword_6D5C0C;
extern void *& dword_6D5C10;
extern void *& dword_6D5C14;
extern void *& dword_6D5C18;
extern int& dword_6D5C1C;
extern Position& orderType4Position;
extern CUnit *& orderType4Target;
extern int& dword_6D5C28;
extern UINT_PTR& uIDEvent;
extern void *(&player_slots)[8];
extern int(&net_player_info)[8];
extern void *& start_game_command;
extern void *& command_3d;
extern void *& dword_6D5C78;
extern void *& dword_6D5C7C;
extern void *& dword_6D5C80;
extern void *& dword_6D5C84;
extern void *& dword_6D5C88;
extern void *& dword_6D5C8C;
extern struct_v2 *& dword_6D5C90;
extern void *& defaultValue;
extern int& dword_6D5C98;
extern void *& dword_6D5C9C;
extern char& byte_6D5CA0;
extern HANDLE& video;
extern int& dword_6D5CA8;
extern Bitmap& pbrempt_pcx;
extern Bitmap& pbrfull_pcx;
extern Bitmap& progress_bar_empty_pcx;
extern Bitmap& progress_bar_full_pcx;
extern BYTE *& dword_6D5CD8;
extern void *& dword_6D5CDC;
extern char *(&dword_6D5D00)[18];
extern int& dword_6D5D48;
extern void *& dword_6D5D4C;
extern char *& dword_6D5D50;
extern char *& dword_6D5D54;
extern char *& dword_6D5D58;
extern void *& dword_6D5D5C;
extern char(&byte_6D5D60)[4];
extern int& dword_6D5D64;
extern int& dword_6D5D68;
extern int(&dword_6D5D70)[10];
extern int(&dword_6D5D98)[];
extern void *& dword_6D5DC0;
extern char *& buffer2;
extern int& dword_6D5DC8;
extern int& dword_6D5DCC;
extern int& dword_6D5DD0;
extern int& dword_6D5DD4;
extern AppExitHandle *& app_exit_handles;
extern Font *& PrintXY_Current_Font;
extern char& byte_6D5DE0;
extern HINSTANCE& local_dll_library;
extern LPCVOID& lpAddress;
extern DWORD& nNumberOfBytesToWrite;
extern Bitmap& stru_6D5DF0;
extern int& dword_6D5DF8;
extern char& byte_6D5DFC;
extern IDirectDrawSurface *& PrimarySurface;
extern HMODULE& ddraw_dll;
extern IDirectDraw *& DDInterface;
extern IDirectDrawPalette *& PrimaryPalette;
extern IDirectDrawSurface *& BackSurface;
extern HANDLE& handle;
extern int& dword_6D5E18;
extern int& dword_6D5E1C;
extern Bitmap *& dword_6D5E20;
extern int& dword_6D5E24;
extern __int16& word_6D5E28;
extern int& dword_6D5E2C;
extern int& dword_6D5E30;
extern dialog *& DialogList;
extern void (__cdecl *&dword_6D5E38)();
extern int& dword_6D5E3C;
extern dialog *(&EventDialogs)[19];
extern activation_delays(&stru_6D5E8C)[4];
extern void (__stdcall *&ButtonPressSound)(int);
extern dialog *& to_be_deleted_maybe;
extern int& dword_6D5EB4;
extern int& dword_6D5EB8;
extern void *& first_timer1;
extern Timer *& first_timer2;
extern TileType *& TileSetMap;
extern HANDLE& hEvent;
extern int& IsBattleNet;
extern int& dword_6D5ED4;
extern int& dword_6D5ED8;
extern struct _RTL_CRITICAL_SECTION& stru_6D5EDC;
extern int& dword_6D5EF4;
extern int& dword_6D5EF8;
extern int& dword_6D5EFC;
extern int& dword_6D5F04;
extern int& dword_6D5F08;
extern int& dword_6D5F0C;
extern int& dword_6D5F10;
extern int& dword_6D5F14;
extern int& dword_6D5F18;
extern int& dword_6D5F1C;
extern int& dword_6D5F20;
extern int& dword_6D5F24;
extern int& dword_6D5F28;
extern int& dword_6D5F2C;
extern int& dword_6D5F30;
extern int& dword_6D5F34;
extern int& dword_6D5F38;
extern int& dword_6D5F3C;
extern int& dword_6D5F40;
extern int& dword_6D5F44;
extern int& dword_6D5F48;
extern struct _RTL_CRITICAL_SECTION& stru_6D5F4C;
extern int& dword_6D5F64;
extern int& dword_6D5F68;
extern int& dword_6D5F6C;
extern int& dword_6D5F70;
extern int& dword_6D5F74;
extern int& dword_6D5F78;
extern int& dword_6D5F7C;
extern int& dword_6D5F80;
extern int& dword_6D5F84;
extern int& dword_6D5F88;
extern int& dword_6D5F8C;
extern int& dword_6D5F90;
extern int& dword_6D5F94;
extern int& dword_6D5F98;
extern int& dword_6D5F9C;
extern int& dword_6D5FA0;
extern int& dword_6D5FA4;
extern int& dword_6D5FA8;
extern int& dword_6D5FAC;
extern int& dword_6D5FB0;
extern int& dword_6D5FB4;
extern int& dword_6D5FB8;
extern int& dword_6D5FBC;
extern int& dword_6D5FC0;
extern int& dword_6D5FC4;
extern int& dword_6D5FC8;
extern int& dword_6D5FCC;
extern int& dword_6D5FD0;
extern int& dword_6D5FD4;
extern int& dword_6D5FD8;
extern int& dword_6D5FDC;
extern int& dword_6D5FE0;
extern int& dword_6D5FE4;
extern int& dword_6D5FE8;
extern int& dword_6D5FEC;
extern int& dword_6D5FF0;
extern int& dword_6D5FF4;
extern int& dword_6D5FF8;
extern int& dword_6D5FFC;
extern int& dword_6D6000;
extern int& dword_6D6004;
extern int& dword_6D6008;
extern int& dword_6D600C;
extern int& dword_6D6010;
extern int& dword_6D6014;
extern int& dword_6D6018;
extern int& dword_6D601C;
extern int& dword_6D6020;
extern int& dword_6D6024;
extern int& dword_6D6028;
extern int& dword_6D602C;
extern int& dword_6D6030;
extern int& dword_6D6034;
extern int& dword_6D6038;
extern int& dword_6D603C;
extern int& dword_6D6040;
extern int& dword_6D6044;
extern int& dword_6D6048;
extern int& dword_6D604C;
extern int& dword_6D6050;
extern int& dword_6D6054;
extern int& dword_6D6058;
extern int& dword_6D605C;
extern int& dword_6D6060;
extern int& dword_6D6064;
extern int& dword_6D6068;
extern int& dword_6D606C;
extern int& dword_6D6070;
extern int& dword_6D6074;
extern int& dword_6D6078;
extern int& dword_6D607C;
extern int& dword_6D6080;
extern int& dword_6D6084;
extern int& dword_6D6088;
extern int& dword_6D608C;
extern int& dword_6D6090;
extern int& dword_6D6094;
extern int& dword_6D6098;
extern int& dword_6D609C;
extern int& dword_6D60A0;
extern int& dword_6D60A4;
extern int& dword_6D60A8;
extern int& dword_6D60AC;
extern int& dword_6D60B0;
extern int& dword_6D60B4;
extern int& dword_6D60B8;
extern int& dword_6D60BC;
extern int& dword_6D60C0;
extern int& dword_6D60C4;
extern int& dword_6D60C8;
extern int& dword_6D60CC;
extern int& dword_6D60D0;
extern int& dword_6D60D4;
extern int& dword_6D60D8;
extern int& dword_6D60DC;
extern int& dword_6D60E0;
extern int& dword_6D60E4;
extern int& dword_6D60E8;
extern int& dword_6D60EC;
extern int& dword_6D60F0;
extern int& dword_6D60F4;
extern int& dword_6D60F8;
extern int& dword_6D60FC;
extern int& dword_6D6100;
extern int& dword_6D6104;
extern int& dword_6D6108;
extern int& dword_6D610C;
extern int& dword_6D6110;
extern int& dword_6D6114;
extern int& dword_6D6118;
extern int& dword_6D611C;
extern int& dword_6D6120;
extern int& dword_6D6124;
extern int& dword_6D6128;
extern int& dword_6D612C;
extern int& dword_6D6130;
extern int& dword_6D6134;
extern int& dword_6D6138;
extern int& dword_6D613C;
extern int& dword_6D6140;
extern int& dword_6D6144;
extern int& dword_6D6148;
extern int& dword_6D614C;
extern int& dword_6D6150;
extern int& dword_6D6154;
extern int& dword_6D6158;
extern int& dword_6D615C;
extern int& dword_6D6160;
extern int& dword_6D6164;
extern int& dword_6D6168;
extern int& dword_6D616C;
extern int& dword_6D6170;
extern int& dword_6D6174;
extern int& dword_6D6178;
extern int& dword_6D617C;
extern int& dword_6D6180;
extern int& dword_6D6184;
extern int& dword_6D6188;
extern int& dword_6D618C;
extern int& dword_6D6190;
extern int& dword_6D6194;
extern int& dword_6D6198;
extern void *& dword_6D619C;
extern int& dword_6D61A0;
extern void *& buffer;
extern int& dword_6D61A8;
extern int& dword_6D61AC;
extern int& dword_6D61B0;
extern int& dword_6D61B4;
extern int& dword_6D61B8;
extern int& dword_6D61BC;
extern int& dword_6D61C0;
extern int& dword_6D61C4;
extern int& dword_6D61C8;
extern int& dword_6D61CC;
extern int& dword_6D61D0;
extern int& dword_6D61D4;
extern int& dword_6D61D8;
extern int& dword_6D61DC;
extern int& dword_6D61E0;
extern int& dword_6D61E4;
extern int& dword_6D61E8;
extern int& dword_6D61EC;
extern int& dword_6D61F0;
extern int& dword_6D61F4;
extern int& dword_6D61F8;
extern int& dword_6D61FC;
extern int& dword_6D6200;
extern int& dword_6D6204;
extern int& dword_6D6208;
extern int& dword_6D620C;
extern int& dword_6D6210;
extern int& dword_6D6214;
extern int& dword_6D6218;
extern int& dword_6D621C;
extern int& dword_6D6220;
extern int& dword_6D6224;
extern int& dword_6D6228;
extern int& dword_6D622C;
extern int& dword_6D6230;
extern int& dword_6D6234;
extern int& dword_6D6238;
extern int& dword_6D623C;
extern int& dword_6D6240;
extern int& dword_6D6244;
extern int& dword_6D6248;
extern int& dword_6D624C;
extern int& dword_6D6250;
extern int& dword_6D6254;
extern int& dword_6D6258;
extern int& dword_6D625C;
extern int& dword_6D6260;
extern int& dword_6D6264;
extern int& dword_6D6268;
extern int& dword_6D626C;
extern int& dword_6D6270;
extern int& dword_6D6274;
extern int& dword_6D6278;
extern int& dword_6D627C;
extern int& dword_6D6280;
extern int& dword_6D6284;
extern int& dword_6D6288;
extern int& dword_6D628C;
extern int& dword_6D6290;
extern int& dword_6D6294;
extern int& dword_6D6298;
extern int& dword_6D629C;
extern int& dword_6D62A0;
extern int& dword_6D62A4;
extern int& dword_6D62A8;
extern int& dword_6D62AC;
extern int& dword_6D62B0;
extern int& dword_6D62B4;
extern struct _RTL_CRITICAL_SECTION& CriticalSection;
extern int& dword_6D62D0;
extern int& dword_6D62D4;
extern int& dword_6D62D8;
extern int& dword_6D62DC;
extern int& dword_6D62E0;
extern int& dword_6D62E4;
extern int& dword_6D62E8;
extern int& dword_6D62EC;
extern int& dword_6D62F0;
extern int& dword_6D62F4;
extern int& dword_6D62F8;
extern int& dword_6D62FC;
extern int& dword_6D6300;
extern int& dword_6D6304;
extern int& dword_6D6308;
extern int& dword_6D630C;
extern int& dword_6D6310;
extern int& dword_6D6314;
extern int& dword_6D6318;
extern int& dword_6D631C;
extern int& dword_6D6320;
extern int& dword_6D6324;
extern int& dword_6D6328;
extern int& dword_6D632C;
extern int& dword_6D6330;
extern int& dword_6D6334;
extern int& dword_6D6338;
extern int& dword_6D633C;
extern int& dword_6D6340;
extern int& dword_6D6344;
extern int& dword_6D6348;
extern int& dword_6D634C;
extern int& dword_6D6350;
extern int& dword_6D6354;
extern int& dword_6D6358;
extern int& dword_6D635C;
extern int& dword_6D6360;
extern int& dword_6D6364;
extern int& dword_6D6368;
extern int& dword_6D636C;
extern int& dword_6D6370;
extern int& dword_6D6374;
extern int& dword_6D6378;
extern int& dword_6D637C;
extern int& message_handling_tick;
extern HCURSOR& cursor;
extern u16 *& dword_6D6388;
extern char& byte_6D638C;
extern SfxData& dword_6D6390;
extern char& src;
extern int& dword_6D63AC;
extern int& dword_6D63B0;
extern int& dword_6D63B4;
extern int& dword_6D63B8;
extern int& dword_6D63BC;
extern int& dword_6D63C0;
extern int& dword_6D63C4;
extern int& dword_6D63C8;
extern int& dword_6D63CC;
extern int& dword_6D63D0;
extern int& dword_6D63D4;
extern int& dword_6D63D8;
extern int& dword_6D63DC;
extern int& dword_6D63E0;
extern int& dword_6D63E4;
extern int& dword_6D63E8;
extern int& dword_6D63EC;
extern char& byte_6D63F0;
extern tagRECT& stru_6D63F4;
extern int& dword_6D6404;
extern int& dword_6D6408;
extern int& dword_6D640C;
extern int& dword_6D6410;
extern int& dword_6D6414;
extern HDC& hdc;
extern HDC& dword_6D641C;
extern int& dword_6D6420;
extern HGDIOBJ& h;
extern int& dword_6D6428;
extern int& cached_game_screen_region_check_result;
extern int& cached_game_screen_region_check_x;
extern int& cached_game_screen_region_check_y;
extern HIMC& dword_6D6438;
extern int& dword_6D643C;
extern int(&dword_6D683C)[256];
extern size_t& amount;
extern int& dword_6D6C40;
extern CHAR(&byte_6D7448)[260];
extern char& byte_6D754C;
extern char(&byte_6D7550)[32];
extern int& dword_6D7570;
extern int& dword_6D7574;
extern int(&dword_6D7578)[];
extern int(&dword_6D757C)[];
extern char(&byte_6DB178)[];
extern char(&byte_6DB179)[];
extern char(&byte_6DB17A)[];
extern char(&byte_6DB17B)[];
extern char(&byte_6DB180)[260];
extern Bitmap& stru_6DB284;
extern Bitmap& stru_6DB28C;
extern char(&byte_6DB298)[1024];
extern char(&byte_6DB698)[128];
extern char(&byte_6DB718)[128];
extern char(&byte_6DB798)[128];
extern char(&byte_6DB818)[128];
extern char(&byte_6DB898)[128];
extern char& byte_6DB918;
extern char& byte_6DBD18;
extern char(&byte_6DBD38)[40];
extern char(&byte_6DBD60)[256];
extern char& byte_6DBE60;
extern char& byte_6DC260;
extern char(&byte_6DC280)[36];
extern Bitmap& stru_6DC2A4;
extern u16(&word_6DC2AC)[9];
extern char& base;
extern int& dword_6DC2E0;
extern int& dword_6DC2F4;
extern size_t& dword_6DD300;
extern int& dword_6DD304;
extern int& dword_6DD308;
extern int& dword_6DD30C;
extern void *& dword_6DD310;
extern int& dword_6DD314;
extern LPVOID& lpMem;
extern int& dword_6DD31C;
extern int& dword_6DD320;
extern int& dword_6DD324;
extern int& dword_6DD328;
extern LCID& Locale;
extern void *& dword_6DD330;
extern int& dword_6DD334;
extern char& byte_6DD340;
extern char& byte_6DD341;
extern UINT& CodePage;
extern __int16& word_6DD450;
extern char& byte_6DD460;
extern HANDLE& hHeap;
extern int& dword_6DD564;
extern UINT& uNumber;
extern int(&dword_6DD580)[];
extern int& dword_6DD680;
extern int& dword_6DD684;
extern void *& dword_6DD688;
extern int& dword_6DD68C;
extern int& dword_6DD690;
}
